<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ShengBTE软件编译方法</title>
      <link href="/2020/09/04/ShengBTE-install/"/>
      <url>/2020/09/04/ShengBTE-install/</url>
      
        <content type="html"><![CDATA[<ul><li>编译环境：Ubuntu20.04.1 LTS</li><li>编译器：Intel 2020_update2</li><li><a href="https://spglib.github.io/spglib/index.html" target="_blank" rel="noopener">spglib</a></li><li><a href="https://bitbucket.org/sousaw/thirdorder/src/master/" target="_blank" rel="noopener">thirdorder</a></li><li><a href="http://www.shengbte.org/home" target="_blank" rel="noopener">ShengBTE</a><h2 id="一、-spglib-1-8-3"><a href="#一、-spglib-1-8-3" class="headerlink" title="一、 spglib-1.8.3"></a>一、 spglib-1.8.3</h2></li><li>tar zxvf spglib-1.8.3.tar.gz</li><li>cd spglib-1.8.3</li><li>mkdir build</li><li>cd build &amp;&amp; pwd &amp;&amp; cd ../</li><li>./configure –prefix=/home/hey/.App/ShengBTE/spglib-1.8.3/build</li><li>make</li><li>make install<h4 id="加载spglib-1-8-3的数据库文件"><a href="#加载spglib-1-8-3的数据库文件" class="headerlink" title="加载spglib-1.8.3的数据库文件"></a>加载spglib-1.8.3的数据库文件</h4>假定将ShengBTE文件所需环境变量和数学库文件写入<code>ShengBTE.env</code>文件:<pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">export</span> LD_LIBRARY_PATH<span class="token operator">=</span>/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib:<span class="token variable">$LD_LIBRARY_PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><code>source ShengBTE.env</code></li></ul><h2 id="二、-ShengBTE-v1-1-1"><a href="#二、-ShengBTE-v1-1-1" class="headerlink" title="二、 ShengBTE_v1.1.1"></a>二、 ShengBTE_v1.1.1</h2><ul><li>tar jxvf ShengBTE-v1.1.1-8a63749.tar.bz2</li><li>mv ShengBTE ShengBTE_v1.1.1</li><li>cd ShengBTE_v1.1.1</li><li>cp arch.make.example Src/arch.make</li><li>根据服务器intel编译器路径修改arch.make文件，提供模板如下：<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">export</span> FFLAGS<span class="token operator">=</span>-traceback -debug -O3 <span class="token comment" spellcheck="true"># -static_intel</span><span class="token function">export</span> LDFLAGS<span class="token operator">=</span>-L/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib/libsymspg.a<span class="token function">export</span> LDFLAGS<span class="token operator">=</span>-L/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib -lsymspg<span class="token function">export</span> MPIFC<span class="token operator">=</span>mpiifortMKLROOT <span class="token operator">=</span> /opt/intel/compilers_and_libraries_2020.2.254/linux/mklMKL<span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>MKLROOT<span class="token variable">)</span></span>/lib/intel64/libmkl_lapack95_lp64.a -Wl,--start-group \<span class="token variable"><span class="token variable">$(</span>MKLROOT<span class="token variable">)</span></span>/lib/intel64/libmkl_intel_lp64.a \<span class="token variable"><span class="token variable">$(</span>MKLROOT<span class="token variable">)</span></span>/lib/intel64/libmkl_sequential.a \<span class="token variable"><span class="token variable">$(</span>MKLROOT<span class="token variable">)</span></span>/lib/intel64/libmkl_core.a -Wl,--end-group -lpthread -lm<span class="token function">export</span> LAPACK<span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>MKL<span class="token variable">)</span></span><span class="token function">export</span> LIBS<span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>LAPACK<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>Note: 主要修改spglib库文件路径，mpiifort编译器路径与MKL数学库路径即可</li><li>make</li><li>cd ../ &amp;&amp; ls</li><li>如果没有报错，会在Src的上级目录生成<code>ShengBTE</code>可执行文件</li></ul><h4 id="对ShengBTE做测试，以确保编译没有问题"><a href="#对ShengBTE做测试，以确保编译没有问题" class="headerlink" title="对ShengBTE做测试，以确保编译没有问题"></a>对ShengBTE做测试，以确保编译没有问题</h4><ul><li>cd Test-VASP</li><li>mpirun -np 4 ../ShengBTE</li><li>屏幕输出如下内容且没有报错则确认编译成功<pre class="line-numbers language-bash"><code class="language-bash">Info: symmetry group F-43m detectedInfo:           24  symmetry operationsInfo: Ntot <span class="token operator">=</span>        1728Info: Nlist <span class="token operator">=</span>          72Info: about to obtain the spectrumInfo: expecting Phonopy 2nd-order <span class="token function">format</span>Info: about to <span class="token keyword">set</span> the acoustic frequencies at Gamma to zeroInfo: original values:Info: omega<span class="token punctuation">(</span>1,1<span class="token punctuation">)</span> <span class="token operator">=</span>  6.400137459983242E-007 rad/psInfo: omega<span class="token punctuation">(</span>1,2<span class="token punctuation">)</span> <span class="token operator">=</span>  9.163852030886527E-007 rad/psInfo: omega<span class="token punctuation">(</span>1,3<span class="token punctuation">)</span> <span class="token operator">=</span>  1.066791524454142E-006 rad/psInfo: spectrum calculation finishedInfo: start calculating specific heat and kappa <span class="token keyword">in</span> the small-grain limit Info: Temperature<span class="token operator">=</span>   300.000000000000     Info: Ntotal_plus <span class="token operator">=</span>      467371Info: Ntotal_minus <span class="token operator">=</span>      524356Info: start calculating kappaInfo: Temperature<span class="token operator">=</span>   300.000000000000     Info: Iteration           1Info:Relative change<span class="token operator">=</span>  2.338493701468276E-002Info: Iteration           2Info:Relative change<span class="token operator">=</span>  1.376466188522221E-002Info: Iteration           3Info:Relative change<span class="token operator">=</span>  1.354818430557603E-003Info: Iteration           4Info:Relative change<span class="token operator">=</span>  2.125374794450190E-004Info: Iteration           5Info:Relative change<span class="token operator">=</span>  3.362189820605527E-005Info: Iteration           6Info:Relative change<span class="token operator">=</span>  5.619469853262435E-006Info: nanowires with orientation 1: 1 0 0Info: nanowires with orientation 2: 1 1 0Info: nanowires with orientation 3: 1 1 1Info: normal <span class="token keyword">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="设定ShengBTE环境变量"><a href="#设定ShengBTE环境变量" class="headerlink" title="设定ShengBTE环境变量"></a>设定<code>ShengBTE</code>环境变量</h4></li><li>将<code>ShengBTE</code>写入<code>ShengBTE.env</code><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">export</span> LD_LIBRARY_PATH<span class="token operator">=</span>/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib:<span class="token variable">$LD_LIBRARY_PATH</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span>:/home/hey/.App/ShengBTE/ShengBTE_v1.1.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="三、thirdorder"><a href="#三、thirdorder" class="headerlink" title="三、thirdorder"></a>三、thirdorder</h2><h4 id="配置python3环境变量"><a href="#配置python3环境变量" class="headerlink" title="配置python3环境变量"></a>配置python3环境变量</h4><ul><li><p>下载<a href="https://www.anaconda.com/" target="_blank" rel="noopener">Anaconda3</a>包</p></li><li><p>安装Anaconda3包</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">bash</span> Anaconda3-2020.02-Linux-x86_64.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>将python3的环境变量写入脚本<code>anaconda3.env</code></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">alias</span> python<span class="token operator">=</span><span class="token string">'/home/hey/.App/anaconda3/bin/python3.7'</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span>:/home/hey/.App/anaconda3/bin<span class="token function">export</span> PYTHONPATH<span class="token operator">=</span><span class="token variable">$PYTHONPATH</span>:/home/hey/.App/anaconda3/lib/python3.7/site-packages<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使python3环境变量生效</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">source</span> anaconda3.env<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>tar jxvf thirdorder-v1.1.1-8526f47.tar.bz2</p></li><li><p>cd thirdorder</p></li><li><p>修改setup.py中的spglib库文件路径，具体为8~13行内容，如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># Add the location of the "spglib/spglib.h" to this list if necessary.</span><span class="token comment" spellcheck="true"># Example: INCLUDE_DIRS=["/home/user/local/include"]</span>INCLUDE_DIRS <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"/home/hey/.App/ShengBTE/spglib-1.8.3/build/include"</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true"># Add the location of the spglib shared library to this list if necessary.</span><span class="token comment" spellcheck="true"># Example: LIBRARY_DIRS=["/home/user/local/lib"]</span>LIBRARY_DIRS <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用如下命令编译</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">bash</span> compile.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>编译过程中会出现警告，忽略之；最后如果没有报错，会生成如下文件：</p><pre class="line-numbers language-bash"><code class="language-bash">thirdorder_core.cpython-37m-x86_64-linux-gnu.so<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>如果编译过程中发现gcc编译器报错，可换icc编译器完成编译，命令如下</p></li></ul><pre class="line-numbers language-bash"><code class="language-bash">icc -pthread -shared -B /home/hey/.App/anaconda3/compiler_compat \-L/home/hey/.App/anaconda3/lib \-Wl,-rpath<span class="token operator">=</span>/home/hey/.App/anaconda3/lib -Wl,--no-as-needed -Wl,\--sysroot<span class="token operator">=</span>/ build/temp.linux-x86_64-3.7/thirdorder_core.o \-L/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib \-Wl,-R/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib \-lsymspg -o ./thirdorder_core.cpython-37m-x86_64-linux-gnu.so<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Note: 注意此处为了完整显示代码块，使用了换行符，在实际编译过程中，如果报错后会出现上述代码块里的内容，可直接复制使用</p><ul><li>测试<pre class="line-numbers language-bash"><code class="language-bash">hey@Dell:~$ python thirdorder_vasp.py Usage: thirdorder_vasp.py sow<span class="token operator">|</span>reap na nb nc cutoff<span class="token punctuation">[</span>nm/-integer<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="配置thirdorder环境"><a href="#配置thirdorder环境" class="headerlink" title="配置thirdorder环境"></a>配置thirdorder环境</h4></li><li>将thirdorder运行环境写入<code>thirdorder.env</code><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">alias</span> python<span class="token operator">=</span><span class="token string">'/home/hey/.App/anaconda3/bin/python3.7'</span><span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span>:/home/hey/.App/anaconda3/bin<span class="token function">export</span> PYTHONPATH<span class="token operator">=</span><span class="token variable">$PYTHONPATH</span>:/home/hey/.App/anaconda3/lib/python3.7/site-packages<span class="token function">export</span> PYTHONPATH<span class="token operator">=</span><span class="token variable">$PYTHONPATH</span>:/home/hey/.App/ShengBTE/thirdorder<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>使环境变量生效<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">source</span> thirdorder.env<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>使用：可将<code>thirdorder_vasp.py</code>复制到工作目录使用<h4 id="例子如下："><a href="#例子如下：" class="headerlink" title="例子如下："></a>例子如下：</h4></li><li>POSCAR<pre class="line-numbers language-bash"><code class="language-bash">InAs 6.00000000000000   0.0000000000000000    0.5026468896190005    0.5026468896190005   0.5026468896190005    0.0000000000000000    0.5026468896190005   0.5026468896190005    0.5026468896190005    0.0000000000000000 In   As 1   1Direct0.0000000000000000  0.0000000000000000  0.00000000000000000.2500000000000000  0.2500000000000000  0.2500000000000000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>使用thirdorder_vasp.py生成VASP输入文件<pre class="line-numbers language-bash"><code class="language-bash">python thirdorder_vasp.py sow 4 4 4 -3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>输出信息如下</li></ul><pre class="line-numbers language-bash"><code class="language-bash">hey@Dell:~$ python thirdorder_vasp.py sow 4 4 4 -3Reading POSCARAnalyzing the symmetries- Symmetry group b<span class="token string">'F-43m'</span> detected- 24 symmetry operationsCreating the supercellComputing all distances <span class="token keyword">in</span> the supercell- Automatic cutoff: 0.5516518040072121 nmLooking <span class="token keyword">for</span> an irreducible <span class="token keyword">set</span> of third-order IFCs- 20 triplet equivalence classes found- 144 DFT runs are needed-.d88888b   .88888.  dP   dP   dP1.     "<span class="token string">' d8'</span>   <span class="token variable"><span class="token variable">`</span>8b 88   88   88<span class="token variable">`</span></span>Y88888b. 88     88 88  .8P  .8P      `8b 88     88 88  d8<span class="token string">'  d8'</span>d8<span class="token string">'   .8P Y8.   .8P 88.d8P8.d8P Y88888P   `8888P'</span>  8888<span class="token string">' Y88'</span>ooooooooooooooooooooooooooooooooo-Writing undisplaced coordinates to 3RD.SPOSCARWriting displaced coordinates to 3RD.POSCAR.*-888888ba   .88888.  888888ba   88888888b88    `8b d8<span class="token string">'   <span class="token variable"><span class="token variable">`</span>8b 88    <span class="token variable">`</span></span>8b  8888     88 88     88 88     88 a88aaaa88     88 88     88 88     88  8888    .8P Y8.   .8P 88     88  888888888P   `8888P'</span>  dP     dP  88888888Pooooooooooooooooooooooooooooooooooooooooo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ShengBTE </category>
          
          <category> thirdorder </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ShengBTE </tag>
            
            <tag> thirdorder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用gnuplot画投影能带图</title>
      <link href="/2019/12/07/fatband-gnuplot/"/>
      <url>/2019/12/07/fatband-gnuplot/</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><ul><li><p>gnuplot的安装：Ubuntu系统可直接如下命令安装</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> gnuplot-qt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其余操作系统安装方式可参考<a href="http://gnuplot.sourceforge.net/" target="_blank" rel="noopener">官网</a></p></li><li><p>投影能带数据处理是基于vaspkit code完成的，可参考<a href="https://sourceforge.net/projects/vaspkit/" target="_blank" rel="noopener">这里</a>, <a href="http://blog.wangruixing.cn/" target="_blank" rel="noopener">这里</a>,<a href="http://vaspkit.com/" target="_blank" rel="noopener">这里</a>和<a href="https://arxiv.org/abs/1908.08269" target="_blank" rel="noopener">这里</a></p></li></ul><h1 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h1><ul><li><p>绘图方法</p><pre class="line-numbers language-bash"><code class="language-bash">gnuplot fat_band.gnu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>fat_band.gnu</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">set</span> encoding iso_8859_1<span class="token comment" spellcheck="true"># set terminal  postscript enhanced color font "TimesNewRoman, 11" size 5, 4</span><span class="token keyword">set</span> terminal  pngcairo truecolor enhanced lw 5.0 font <span class="token string">"TimesNewRoman, 44"</span> size 1920, 1680<span class="token keyword">set</span> palette rgbformulae 22, 13, -31<span class="token comment" spellcheck="true"># set palette rgbformulae 7,5,15</span><span class="token keyword">set</span> output <span class="token string">'Se_s.png'</span><span class="token keyword">set</span> borderunset colorbox<span class="token keyword">set</span> title <span class="token string">"Se\\_s"</span> offset 0, -0.8 font <span class="token string">"TimesNewRoman, 54"</span><span class="token keyword">set</span> style data linespointsunset zticsunset key<span class="token comment" spellcheck="true"># set key outside top vertical center</span><span class="token comment" spellcheck="true"># set pointsize 0.3</span><span class="token keyword">set</span> view 0,0<span class="token keyword">set</span> xtics font <span class="token string">"TimesNewRoman, 44"</span><span class="token keyword">set</span> xtics offset 0, 0.3<span class="token keyword">set</span> ytics font <span class="token string">"TimesNewRoman, 40"</span><span class="token keyword">set</span> ytics -4, 2, 4<span class="token keyword">set</span> ylabel font <span class="token string">"TimesNewRoman, 48"</span><span class="token keyword">set</span> ylabel offset 1.0, 0<span class="token keyword">set</span> xrange <span class="token punctuation">[</span>0:2.426<span class="token punctuation">]</span><span class="token keyword">set</span> ylabel <span class="token string">"Energy (eV)"</span><span class="token keyword">set</span> yrange <span class="token punctuation">[</span>-4:4<span class="token punctuation">]</span><span class="token keyword">set</span> xtics <span class="token punctuation">(</span><span class="token string">"M"</span> 0.00000, <span class="token string">"G"</span> 0.888, <span class="token string">"K"</span> 1.913, <span class="token string">"M"</span> 2.426<span class="token punctuation">)</span>plot -4 with filledcurves y1<span class="token operator">=</span>4 lc rgb <span class="token string">"navy"</span>, \<span class="token string">'PBAND_Se.dat'</span> u <span class="token punctuation">(</span><span class="token variable">$1</span><span class="token punctuation">)</span>:<span class="token punctuation">(</span><span class="token variable">$2</span><span class="token punctuation">)</span>:<span class="token punctuation">(</span><span class="token variable">$3</span><span class="token punctuation">)</span> w lines lw 1.5 lc palette, \0 w l dt 2 lc rgb <span class="token string">"gray"</span>, \<span class="token string">'&lt; echo "0.888 -4 \n 0.888 4"'</span> w l dt 2 lc rgb <span class="token string">"gray"</span>, \<span class="token string">'&lt; echo "1.913 -4 \n 1.913 4"'</span> w l dt 2 lc rgb <span class="token string">"gray"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h1 id="绘图结果"><a href="#绘图结果" class="headerlink" title="绘图结果"></a>绘图结果</h1><ul><li><p>In_p<br><img src="/image/In_p.png" alt="In_p"></p></li><li><p>In_s<br><img src="/image/In_s.png" alt="In_s"></p></li><li><p>Se_p<br><img src="/image/Se_p.png" alt="Se_p"></p></li><li><p>Se_p_colorbox<br><img src="/image/Se_p_colorbox.png" alt="Se_p"></p></li><li><p>Se_s<br><img src="/image/Se_s.png" alt="Se_s"></p></li><li><p>Note: 因时间仓促，显示效果不是很理想，后期会对细节做进一步处理；绘图脚本可在我的<a href="https://github.com/yh-phys/vasp_tools/tree/master/fatband_gnuplot">Github</a>上下载。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> vasp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fatband </tag>
            
            <tag> gnuplot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Abinit的编译教程</title>
      <link href="/2019/11/29/abinit-install/"/>
      <url>/2019/11/29/abinit-install/</url>
      
        <content type="html"><![CDATA[<p>编译环境：Intel2015+impi</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>在<a href="https://www.abinit.org/" target="_blank" rel="noopener">Abinit</a>官网下载最新版安装包abinit-8.10.3。</li><li>下载附加程序包<a href="https://www.abinit.org/fallbacks" target="_blank" rel="noopener">这里</a>：LibXC 3.0.0，NetCDF 4.1.1和LAPACK for Abinit ≥ 6.10。</li></ul><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><ul><li>上传安装包与附加程序包到指定安装路径，此处以~/software/为例。</li><li>解压缩并在abinit-8.10.3中新建build与tarballs文件夹。<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">tar</span> zxvf abinit-8.10.3.tar.gz <span class="token operator">&amp;&amp;</span> <span class="token function">cd</span> abinit-8.10.3 <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> build tarballs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>将LibXC 3.0.0，NetCDF 4.1.1和LAPACK for Abinit ≥ 6.10拷贝到tarballs中。</li><li>进入build文件夹中，并查看计算机名称。<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">hostname</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>在build中建立hostname.ac文件，内容如下：<pre><code># ================================================================# Configuration file for ABINIT 8 compilation on COBALT# tested for Intel2015 + impi## ================================================================#FC=&quot;mpiifort&quot;CC=&quot;mpiicc&quot;CXX=&quot;mpicxx&quot;#enable_mpi=&quot;yes&quot;enable_openmp=&quot;yes&quot;#with_linalg_flavor=&quot;mkl+scalapack&quot;with_linalg_libs=${SCALAPACK_LDFLAGS}#with_fft_flavor=&quot;fftw3&quot;with_fft_incs=&quot;-I${MKL_INCDIR}&quot;with_fft_libs=${MKL_LDFLAGS}#with_trio_flavor=&quot;netcdf&quot;with_dft_flavor=&quot;libxc&quot;</code></pre></li><li>在build中执行configure如下：<pre><code>../configure --with-tardir=~/software/abinit-8.10.3/tarballs !根据自己机器路径修改</code></pre></li><li>如果configure过程没有报错，即可编译：<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">make</span> mj4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h1 id="编译测试"><a href="#编译测试" class="headerlink" title="编译测试"></a>编译测试</h1><p>在build中执行：</p><pre><code>cd tests &amp;&amp; ../../tests/runtests.py fast</code></pre><p>如果测试通过，则完成编译。<br>编译好的可执行文件为：</p><pre class="line-numbers language-bash"><code class="language-bash">~/software/abinit-8.10.3/build/src/98_main/abinit <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li>Abinit官网：<a href="https://www.abinit.org/" target="_blank" rel="noopener">https://www.abinit.org/</a></li><li>Course and Hands-on session material：<a href="https://school2019.abinit.org/course-material" target="_blank" rel="noopener">https://school2019.abinit.org/course-material</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Abinit </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Abinit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VASP计算二维材料的载流子迁移率</title>
      <link href="/2019/10/26/vasp-2D-mobility/"/>
      <url>/2019/10/26/vasp-2D-mobility/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;载流子迁移率通常指半导体内部电子和空穴整体的运动快慢情况，是衡量半导体器件性能的重要物理量。2004年，石墨烯的成功剥离引起了研究人员对于二维材料性质探索的浓厚兴趣。石墨烯、黑磷等二维材料展现出的高载流子迁移率是其中的一个重要研究课题，科研人员在理论计算方面已经做了大量的工作。由于电子在运动过程中不仅受到外电场力的作用，还会不断的与晶格、杂质、缺陷等发生无规则的碰撞，大大增加了理论计算的难度。<br>&emsp;&emsp;目前计算载流子迁移率比较常用的理论是形变势理论和玻尔兹曼输运理论，前者没有考虑电子和声子（晶格振动）以及电子与电子之间的相互作用等因素，计算结果存在一定的误差，但笔者的计算结果与实验值在数量级上是吻合的；玻尔兹曼输运理论的一种计算考虑了电子-声子的相互作用，基于第一性原理计算和最大局域化wannier函数插值方法，借助于<a href="http://www.quantum-espresso.org/" target="_blank" rel="noopener">Quantum-ESPRESSO</a>和<a href="http://www.quantum-espresso.org/" target="_blank" rel="noopener">EPW</a>软件可以完成载流子迁移率计算。缺点是计算量太大，一般的课题组很难承受起高昂的计算费用，另外<a href="http://www.quantum-espresso.org/" target="_blank" rel="noopener">EPW</a>软件对于二维材料的计算存在部分问题，在其官方论坛也有讨论，计算过程在后续文章中会提到。<br>&emsp;&emsp;本文以形变势理论方法为基础，详细介绍了二维InSe的电子和空穴的有效质量与载流子迁移率的计算方法。</p><h2 id="理论基础"><a href="#理论基础" class="headerlink" title="理论基础"></a>理论基础</h2><p>&emsp;&emsp;基于Bardeen和Shockley$^{[1]}$提出的形变势理论，二维材料载流子迁移率可以根据下式计算：</p><p>$$\mu_{\rm 2D} = \frac{e\hbar^3C_{2D}}{k_BTm^{\ast}m_dE_1^2}$$</p><p>其中，$m^{\ast}$是传输方向上的有效质量，$T$是温度，$k_B$是玻尔兹曼常数。$E_1$表示沿着传输方向上位于价带顶（VBM）的空穴或聚于导带底（CBM）的电子的形变势常数，由公式$E_1$=${\Delta}E/({\Delta}l/l_o)$确定，${\Delta}E$为在压缩或拉伸应变下CBM或VBM 的能量变化，$l_0$是传输方向上的晶格常数，${\Delta}l$是$l_0$的变形量。$m_d$是载流子的平均有效质量，由公式$m_d$=$\sqrt{m_x^{\ast}m_y^{\ast}}$定义。$C_{2D}$是均匀变形晶体的弹性模量，对于2D材料，弹性模量可以通过公式$C_{2D}=2[{\partial}^2E/{\partial}({\Delta}l/l_0)^2]/S_0$来计算，其中$E$是总能量，$S_0$是优化后的面积。<br>&emsp;&emsp;下面对公式中的单位（量纲）做一个简单换算，具体如下：</p><ul><li>$m_d=\sqrt{m_x^{\ast}m_y^{\ast}}$：（Kg）</li><li>$E_1 = {\Delta}E/({\Delta}l/l_o)$：（J） 在VASP中${\Delta}E$的单位是eV，1eV=1.6$\times$10$^{-19}$J，此处需要换算</li><li>$C_{2D} = 2[{\partial}^2E/{\partial}({\Delta}l/l_0)^2]/S_0$：（J/m$^2$) 其中$E$是总能（eV），$S_0$表示面积（Å$^2$）</li><li>$e$：1.6$\times$10$^{-19}$ C</li><li>$h$：6.626$\times$10$^{-34}$ J$\cdot$s</li><li>$k_B$：1.38$\times$10$^{-23}$ J/K</li><li>$m^{\ast}$：Kg<br>换算过程：<br><img src="/image/%E6%8D%A2%E7%AE%97%E8%BF%87%E7%A8%8B.png" alt="换算过程"></li></ul><h2 id="计算与数据处理工具"><a href="#计算与数据处理工具" class="headerlink" title="计算与数据处理工具"></a>计算与数据处理工具</h2><ul><li>VASP.5.4.4软件 (可以手动控制优化晶格方向)</li><li>OriginLab软件</li><li>Excel</li><li>Materials Studio软件</li><li>正格矢到倒格矢转化脚本，来源于<a href="http://muchong.com/bbs/viewthread.php?tid=7149817&fpage=1" target="_blank" rel="noopener">小木虫</a><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#! /usr/bin/python</span><span class="token comment" spellcheck="true"># This program reads in base vectors from a given file, calculates reciprocal vectors</span><span class="token comment" spellcheck="true"># then writes to outfile in different units</span><span class="token comment" spellcheck="true"># LinuxUsage: crecip.py infile outfile</span><span class="token comment" spellcheck="true"># Note:  the infile must be in the form below:</span><span class="token comment" spellcheck="true">#   inunit  ang/bohr</span><span class="token comment" spellcheck="true">#   _begin_vectors</span><span class="token comment" spellcheck="true">#     46.300000000   0.000000000   0.000000000</span><span class="token comment" spellcheck="true">#      0.000000000  40.500000000   0.000000000</span><span class="token comment" spellcheck="true">#      0.000000000   0.000000000  10.000000000</span><span class="token comment" spellcheck="true">#   _end_vectors</span><span class="token comment" spellcheck="true"># </span><span class="token comment" spellcheck="true"># Note: LATTICE VECTORS ARE SPECIFIED IN ROWS !</span><span class="token keyword">def</span> <span class="token function">GetInUnit</span><span class="token punctuation">(</span> incontent <span class="token punctuation">)</span><span class="token punctuation">:</span>  inunit <span class="token operator">=</span> <span class="token string">""</span>  <span class="token keyword">for</span> line <span class="token keyword">in</span> incontent<span class="token punctuation">:</span>      <span class="token keyword">if</span> line<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"inunit"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>          inunit <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>          <span class="token keyword">break</span>  <span class="token keyword">return</span> inunit<span class="token keyword">def</span> <span class="token function">GetVectors</span><span class="token punctuation">(</span> incontent <span class="token punctuation">)</span><span class="token punctuation">:</span>  indstart <span class="token operator">=</span> <span class="token number">0</span>  indend <span class="token operator">=</span> <span class="token number">0</span>  <span class="token keyword">for</span> s <span class="token keyword">in</span> incontent<span class="token punctuation">:</span>      <span class="token keyword">if</span> s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"_begin_vectors"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>          indstart <span class="token operator">=</span> incontent<span class="token punctuation">.</span>index<span class="token punctuation">(</span>s<span class="token punctuation">)</span>      <span class="token keyword">else</span><span class="token punctuation">:</span>          <span class="token keyword">if</span> s<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"_end_vectors"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>              indend <span class="token operator">=</span> incontent<span class="token punctuation">.</span>index<span class="token punctuation">(</span>s<span class="token punctuation">)</span>  result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span> indstart <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> indend <span class="token punctuation">)</span><span class="token punctuation">:</span>      line <span class="token operator">=</span> incontent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>      result<span class="token punctuation">.</span>append<span class="token punctuation">(</span> <span class="token punctuation">[</span> float<span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> float<span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> float<span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span>  <span class="token keyword">return</span> result<span class="token keyword">def</span> <span class="token function">Ang2Bohr</span><span class="token punctuation">(</span> LattVecAng <span class="token punctuation">)</span><span class="token punctuation">:</span>  LattVecBohr <span class="token operator">=</span> LattVecAng  <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>          LattVecBohr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> LattVecAng<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">*</span>  <span class="token number">1.8897261246</span>  <span class="token keyword">return</span> LattVecBohr<span class="token keyword">def</span> <span class="token function">DotProduct</span><span class="token punctuation">(</span> v1<span class="token punctuation">,</span> v2 <span class="token punctuation">)</span><span class="token punctuation">:</span>  dotproduct <span class="token operator">=</span> <span class="token number">0.0</span>  <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      dotproduct <span class="token operator">=</span> dotproduct <span class="token operator">+</span> v1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*</span> v2<span class="token punctuation">[</span>i<span class="token punctuation">]</span>  <span class="token keyword">return</span> dotproduct<span class="token keyword">def</span> <span class="token function">CrossProduct</span><span class="token punctuation">(</span> v1<span class="token punctuation">,</span> v2 <span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># v3 = v1 WILL LEAD TO WRONG RESULT</span>  v3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  v3<span class="token punctuation">.</span>append<span class="token punctuation">(</span> v1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> v2<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> v1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> v2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>  v3<span class="token punctuation">.</span>append<span class="token punctuation">(</span> v1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> v2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> v1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> v2<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>  v3<span class="token punctuation">.</span>append<span class="token punctuation">(</span> v1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> v2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> v1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> v2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>  <span class="token keyword">return</span> v3<span class="token keyword">def</span> <span class="token function">CalcRecVectors</span><span class="token punctuation">(</span> lattvec <span class="token punctuation">)</span><span class="token punctuation">:</span>  pi <span class="token operator">=</span> <span class="token number">3.141592653589793</span>  a1 <span class="token operator">=</span> lattvec<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  a2 <span class="token operator">=</span> lattvec<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  a3 <span class="token operator">=</span> lattvec<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>  b1 <span class="token operator">=</span> CrossProduct<span class="token punctuation">(</span> a2<span class="token punctuation">,</span> a3 <span class="token punctuation">)</span>  b2 <span class="token operator">=</span> CrossProduct<span class="token punctuation">(</span> a3<span class="token punctuation">,</span> a1 <span class="token punctuation">)</span>  b3 <span class="token operator">=</span> CrossProduct<span class="token punctuation">(</span> a1<span class="token punctuation">,</span> a2 <span class="token punctuation">)</span>  volume <span class="token operator">=</span> DotProduct<span class="token punctuation">(</span> a1<span class="token punctuation">,</span> CrossProduct<span class="token punctuation">(</span> a2<span class="token punctuation">,</span> a3 <span class="token punctuation">)</span> <span class="token punctuation">)</span>  RecVec <span class="token operator">=</span> <span class="token punctuation">[</span> b1<span class="token punctuation">,</span> b2<span class="token punctuation">,</span> b3 <span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># it follows the definition for b_j: a_i * b_j = 2pi * delta(i,j)</span>  <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>          RecVec<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> RecVec<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> pi <span class="token operator">/</span> volume  <span class="token keyword">return</span> RecVec    <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>argv <span class="token operator">=</span> None<span class="token punctuation">)</span><span class="token punctuation">:</span>    argv <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv  infilename  <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  outfilename <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>      pi <span class="token operator">=</span> <span class="token number">3.141592653589793</span>  bohr2ang <span class="token operator">=</span> <span class="token number">0.5291772109253</span>  ang2bohr <span class="token operator">=</span> <span class="token number">1.889726124546</span>      infile  <span class="token operator">=</span> open<span class="token punctuation">(</span>infilename<span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span>  incontent <span class="token operator">=</span> infile<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>  infile<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>      inunit <span class="token operator">=</span> GetInUnit<span class="token punctuation">(</span> incontent <span class="token punctuation">)</span>  LattVectors <span class="token operator">=</span> GetVectors<span class="token punctuation">(</span> incontent <span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># convert units from ang to bohr</span>  <span class="token keyword">if</span> inunit <span class="token operator">==</span> <span class="token string">"ang"</span><span class="token punctuation">:</span>      LattVectors <span class="token operator">=</span> Ang2Bohr<span class="token punctuation">(</span> LattVectors <span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># calculate reciprocal vectors in 1/bohr</span>  RecVectors <span class="token operator">=</span> CalcRecVectors<span class="token punctuation">(</span> LattVectors <span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># open outfile for output</span>  ofile <span class="token operator">=</span> open<span class="token punctuation">(</span>outfilename<span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># output lattice vectors in bohr</span>  ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"lattice vectors in bohr:\n"</span><span class="token punctuation">)</span>  <span class="token keyword">for</span> vi <span class="token keyword">in</span> LattVectors<span class="token punctuation">:</span>      ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"%14.9f%14.9f%14.9f\n"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>vi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> vi<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> vi<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># output lattice vectors in ang</span>  convfac <span class="token operator">=</span> bohr2ang  ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"lattice vectors in ang:\n"</span><span class="token punctuation">)</span>  <span class="token keyword">for</span> vi <span class="token keyword">in</span> LattVectors<span class="token punctuation">:</span>      ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"%14.9f%14.9f%14.9f\n"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>vi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>convfac<span class="token punctuation">,</span> vi<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>convfac<span class="token punctuation">,</span> vi<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>convfac<span class="token punctuation">)</span><span class="token punctuation">)</span>  ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># output reciprocal vectors in 1/bohr</span>  ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"reciprocal vectors in 1/bohr:\n"</span><span class="token punctuation">)</span>  <span class="token keyword">for</span> vi <span class="token keyword">in</span> RecVectors<span class="token punctuation">:</span>      ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"%14.9f%14.9f%14.9f\n"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>vi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> vi<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> vi<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># output reciprocal vectors in 1/ang</span>  convfac <span class="token operator">=</span> ang2bohr  ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"reciprocal vectors in 1/ang:\n"</span><span class="token punctuation">)</span>  <span class="token keyword">for</span> vi <span class="token keyword">in</span> RecVectors<span class="token punctuation">:</span>      ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"%14.9f%14.9f%14.9f\n"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>vi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>convfac<span class="token punctuation">,</span> vi<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>convfac<span class="token punctuation">,</span> vi<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>convfac<span class="token punctuation">)</span><span class="token punctuation">)</span>  ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># output reciprocal vectors in 2pi/bohr</span>  convfac <span class="token operator">=</span> <span class="token number">1.0</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2.0</span><span class="token operator">*</span>pi<span class="token punctuation">)</span>  ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"reciprocal vectors in 2pi/bohr:\n"</span><span class="token punctuation">)</span>  <span class="token keyword">for</span> vi <span class="token keyword">in</span> RecVectors<span class="token punctuation">:</span>      ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"%14.9f%14.9f%14.9f\n"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>vi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>convfac<span class="token punctuation">,</span> vi<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>convfac<span class="token punctuation">,</span> vi<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>convfac<span class="token punctuation">)</span><span class="token punctuation">)</span>  ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># output reciprocal vectors in 2pi/ang</span>  convfac <span class="token operator">=</span> ang2bohr<span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2.0</span><span class="token operator">*</span>pi<span class="token punctuation">)</span>  ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"reciprocal vectors in 2pi/ang:\n"</span><span class="token punctuation">)</span>  <span class="token keyword">for</span> vi <span class="token keyword">in</span> RecVectors<span class="token punctuation">:</span>      ofile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"%14.9f%14.9f%14.9f\n"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>vi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>convfac<span class="token punctuation">,</span> vi<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>convfac<span class="token punctuation">,</span> vi<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span>convfac<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true"># close</span>  ofile<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span> <span class="token keyword">import</span> sys sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="二维InSe有效质量计算过程"><a href="#二维InSe有效质量计算过程" class="headerlink" title="二维InSe有效质量计算过程"></a>二维InSe有效质量计算过程</h2><h3 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h3><p>&emsp;&emsp;由于计算过程中需要对二维InSe施加应变，但二维InSe原胞是六角结构，不容易施加应变。但是侯柱峰老师讲了对石墨烯原胞施加应变的方法，笔者认为虽然可行，但过于繁琐，故不采用此法。我们可以利用根号建模的方法讲六角结构InSe原胞变为方形结构的InSe超胞，然后施加应变可大大提高操作效率，但计算量的增加再可接受范围之内。下面给出关键的建模步骤，更多的根号建模部分可参考我的往期博客文章。</p><ul><li>切面并构建二维InSe原胞，同时调整晶格基矢，使其变为方形结构<br><img src="/image/2D-InSe-mobility.png" alt></li></ul><h3 id="能带计算"><a href="#能带计算" class="headerlink" title="能带计算"></a>能带计算</h3><h4 id="结构优化"><a href="#结构优化" class="headerlink" title="结构优化"></a>结构优化</h4><ul><li><p>INCAR</p><pre class="line-numbers language-shell"><code class="language-shell">SYSTEM = InSe             ISTART = 0       NWRITE = 2      PREC   = AccurateENCUT  = 500GGA    = PE      NSW    = 200ISIF   = 3         ISYM   = 2        IBRION = 2      NELM   = 80        EDIFF  = 1E-05         EDIFFG = -0.01 ALGO   = Normal            LDIAG  = .TRUE.  LREAL  = .FALSE.          ISMEAR = 0         SIGMA  = 0.05 ICHARG = 2LWAVE  =  .FALSE.          LCHARG = .FALSE.NPAR   = 4         <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>KPOINTS</p><pre class="line-numbers language-shell"><code class="language-shell">Monkhorst Pack0Gamma11   7   1.0   .0   .0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>POSCAR</p><pre class="line-numbers language-shell"><code class="language-shell">Se   In1.000     4.083622259999999      -0.000000000000001       0.000000000000000     0.000000000000000       7.073041233239241       0.000000000000000     0.000000000000000       0.000000000000000      25.377516849029359Se   In4   4Direct0.5000005000000000   0.1666665000000000   0.5271404971815050   !Se0.0000004999999997   0.6666665000000004   0.5271404971815050   !Se0.5000005000000000   0.1666665000000000   0.3152396685456632   !Se0.0000004999999997   0.6666665000000004   0.3152396685456632   !Se0.4999995000000003   0.8333335000000002   0.4767849697227853   !In-0.0000005000000000   0.3333335000000000   0.4767849697227853   !In0.4999995000000003   0.8333335000000002   0.3655951960043828   !In-0.0000005000000000   0.3333335000000000   0.3655951960043828   !In<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>OPTCELL</p><pre class="line-numbers language-shell"><code class="language-shell">100010000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>POTCAR</p><pre class="line-numbers language-shell"><code class="language-shell">cat Se/POTCAR In_d/POTCAR > POTCAR<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="静态自洽"><a href="#静态自洽" class="headerlink" title="静态自洽"></a>静态自洽</h4></li><li><p>INCAR</p><pre class="line-numbers language-shell"><code class="language-shell">SYSTEM = InSe             ISTART = 0       NWRITE = 2      PREC   = AccurateENCUT  = 500GGA    = PE      NSW    = 0ISIF   = 2         ISYM   = 2       IBRION = -1      NELM   = 80        EDIFF  = 1E-05         EDIFFG = -0.01 ALGO   = Normal            LDIAG  = .TRUE.  LREAL  = .FALSE.          ISMEAR = 0         SIGMA  = 0.05 ICHARG = 2NPAR   = 4         <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>KPOINTS</p><pre class="line-numbers language-shell"><code class="language-shell">Monkhorst Pack0Gamma21   13   1.0   .0   .0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>POSCAR</p><pre class="line-numbers language-shell"><code class="language-shell">cp CONTCAR scf/POSCAR<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="能带计算-1"><a href="#能带计算-1" class="headerlink" title="能带计算"></a>能带计算</h4></li><li><p>INCAR</p><pre class="line-numbers language-shell"><code class="language-shell">SYSTEM = InSe             ISTART = 1       NWRITE = 2      PREC   = AccurateENCUT  = 500GGA    = PE      NSW    = 0ISIF   = 2         ISYM   = 2       IBRION = -1      NELM   = 80        EDIFF  = 1E-05         EDIFFG = -0.01 ALGO   = Normal            LDIAG  = .TRUE.  LREAL  = .FALSE.          ISMEAR = 0         SIGMA  = 0.05 ICHARG = 2LORBIT = 11LWAVE  =  .FALSE.          LCHARG = .FALSE.NPAR   = 4         <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>KPOINTS</p><pre class="line-numbers language-shell"><code class="language-shell">k-points along high symmetry lines80Line-modeRec 0          0.5       0       !Y 0          0         0       !gamma 0          0         0       !gamma 0.5        0         0       !X 0.5        0         0       !X 0.5        0.5       0       !S 0.5        0.5       0       !S 0          0.5       0       !Y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="有效质量计算"><a href="#有效质量计算" class="headerlink" title="有效质量计算"></a>有效质量计算</h3><h4 id="计算说明"><a href="#计算说明" class="headerlink" title="计算说明"></a>计算说明</h4><p>&emsp;&emsp;对于包含了晶格周期性的有效质量的表达式，表示为如下表cp ./CHGCAR ./band/达式：<br><img src="/image/%E6%9C%89%E6%95%88%E8%B4%A8%E9%87%8F%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F.png" alt="有效质量计算公cp ./CHGCAR ./band/式"><br>在带入物理量进行cp ./CHGCAR ./band/计算时，涉及单位制问题。一般写输入文件时，长度单位为Å；而程序输出的能带结构中，能量单位为eV，计算起来比较繁琐。<br>&emsp;&emsp;原子单位制有两种，一种为Hartree原子单位制，另一种为Rydberg单位制。这两种单位制的区别在于，Hartree单位制下基本物理量简单，电子电荷和质量都为1；而Rydberg单位制下薛定谔方程简单，系数为1。Hartree单位制下，一个长度单位等于1$\rm L_{bohr}$=0.5292Å，一个能量单位1$\rm E_{Hartree}$=27.21eV，约化普朗克常数$\hbar=1$。这样有效质量表达式中的约化普朗克常数就没了。</p><h4 id="根据原胞基矢和正倒格子基矢间对应关系，算出倒格子基矢"><a href="#根据原胞基矢和正倒格子基矢间对应关系，算出倒格子基矢" class="headerlink" title="根据原胞基矢和正倒格子基矢间对应关系，算出倒格子基矢"></a>根据原胞基矢和正倒格子基矢间对应关系，算出倒格子基矢</h4><p><img src="/image/emass-1.png" alt></p><h4 id="将VASP计算band时的k点坐标（分数坐标）转变为笛卡尔坐标"><a href="#将VASP计算band时的k点坐标（分数坐标）转变为笛卡尔坐标" class="headerlink" title="将VASP计算band时的k点坐标（分数坐标）转变为笛卡尔坐标"></a>将VASP计算band时的k点坐标（分数坐标）转变为笛卡尔坐标</h4><p><img src="/image/emass-2.png" alt></p><h4 id="根据两点间的距离公式，计算出各K点之间的距离"><a href="#根据两点间的距离公式，计算出各K点之间的距离" class="headerlink" title="根据两点间的距离公式，计算出各K点之间的距离"></a>根据两点间的距离公式，计算出各K点之间的距离</h4><p><img src="/image/emass-3.png" alt></p><h4 id="求每个K点的位置值"><a href="#求每个K点的位置值" class="headerlink" title="求每个K点的位置值"></a>求每个K点的位置值</h4><p>&emsp;&emsp;根据VASP计算能带时各高对称点间均匀撒点，求出每个点的位置值，第一个点设为0，本例中为80个点，在excel中进行操作。<br>&emsp;&emsp;因计算时均匀撒点80个，故有79个小间隔，对于|$\rm Y{\Gamma}$|来说，每个小间隔为0.002975210683544，故1-80个点的坐标值都可算出，以此类推，后面的点的坐标在前面点的基础上加上间隔即可。（注意：在80个点结束处和81个点开始处的值是一样的，后面的点类似。）<br><img src="/image/emass-4.png" alt></p><h4 id="画出价带顶和导带底的能带"><a href="#画出价带顶和导带底的能带" class="headerlink" title="画出价带顶和导带底的能带"></a>画出价带顶和导带底的能带</h4><p>&emsp;&emsp;在origin中找出能带数据的价带顶（VBM）和导带底（CBM）的数据，把上面计算得到的K点路径做为X轴，VBM和CBM作为Y轴，在origin中画图如下：<br><img src="/image/emass-5.png" alt></p><h4 id="计算有效质量（以x方向电子的有效质量为例）"><a href="#计算有效质量（以x方向电子的有效质量为例）" class="headerlink" title="计算有效质量（以x方向电子的有效质量为例）"></a>计算有效质量（以x方向电子的有效质量为例）</h4><p>&emsp;&emsp;首先换算能量单位，由eV换算为原子单位制下的能量CBM/27.21然后选取$\Gamma$-X方向上以Γ开始的4-8个点的数据画能带图，如下:<br><img src="/image/emass-6.png" alt><br>用$y=a+bx+cx^2$函数拟合，操作如下：<br><img src="/image/emass-7.png" alt><br><img src="/image/emass-8.png" alt><br><img src="/image/emass-9.png" alt><br>有效质量为$\frac{1}{2c}$，其中C=2.69188，算得有效质量为0.19 ，为电子沿x方向的质量。文献计算结果为0.19，符合一致。</p></li></ul><h2 id="二维InSe载流子迁移率计算过程"><a href="#二维InSe载流子迁移率计算过程" class="headerlink" title="二维InSe载流子迁移率计算过程"></a>二维InSe载流子迁移率计算过程</h2><p>&emsp;&emsp;本文载流子迁移率的计算依据的是形变势理论，因此需要对二维InSe的x方向和y方向施加应变，施加应变的范围是-2%~2%。为了计算的准确性，计算过程中考虑了泊松效应，即对x轴施加应变时，固定x轴和z轴，优化y方向的晶格常数；对y轴施加应变时，固定y轴和z轴，优化x方向的晶格常数。</p><h3 id="能带计算过程"><a href="#能带计算过程" class="headerlink" title="能带计算过程"></a>能带计算过程</h3><h4 id="准备输入文件"><a href="#准备输入文件" class="headerlink" title="准备输入文件"></a>准备输入文件</h4><ul><li>首先建立mobility文件夹，然后在该文件夹下建立初始文件夹，命名为IS-x和IS-y，其结构目录如下：<pre class="line-numbers language-shell"><code class="language-shell">$ tree mobilitymobility├── IS-x│   ├── 2_scf│   │   ├── band│   │   │   ├── INCAR│   │   │   ├── KPOINTS│   │   │   └── POTCAR│   │   ├── INCAR│   │   ├── KPOINTS│   │   └── POTCAR│   ├── INCAR│   ├── KPOINTS│   ├── OPTCELL│   ├── pbs│   ├── POSCAR│   └── POTCAR├── IS-y│   ├── 2_scf│   │   ├── band│   │   │   ├── INCAR│   │   │   ├── KPOINTS│   │   │   └── POTCAR│   │   ├── INCAR│   │   ├── KPOINTS│   │   └── POTCAR│   ├── INCAR│   ├── KPOINTS│   ├── OPTCELL│   ├── pbs│   ├── POSCAR│   └── POTCAR└── mobility.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>说明：</li><li>pbs文件：<pre class="line-numbers language-shell"><code class="language-shell">#!/bin/bash#PBS -N mobility#PBS -l nodes=1:ppn=16#PBS -m abe#PBS -j n##PBS -o job.log##PBS -e job.err#PBS -l walltime=120:00:00cd $PBS_O_WORKDIRdate "+01 Today's date is: %D. The time execution %T" >> time.infompirun -np 16 /your-path/vasp.5.4.4/build/std/vasp  > logdate "+02 Today's date is: %D. The time finish %T" >> time.infocp ./CONTCAR ./2_scf/POSCARcd ./2_scf/date "+01 Today's date is: %D. The time execution %T" >> time.infompirun /your-path/vasp.5.4.4/build/std/vasp  > logdate "+02 Today's date is: %D. The time finish %T" >> time.infocp ./CONTCAR ./band/POSCARcp ./WAVECAR ./band/cd ./band/date "+01 Today's date is: %D. The time execution %T" >> time.infompirun -np 16 /your-path/vasp.5.4.4/build/std/vasp  > logdate "+02 Today's date is: %D. The time finish %T" >> time.info<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>OPTCELL文件</li></ul><p>—X 方向—</p><pre class="line-numbers language-shell"><code class="language-shell">000010000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>—Y 方向—</p><pre class="line-numbers language-shell"><code class="language-shell">100000000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>自洽计算时INCAR文件中加入计算真空能级的命令<pre class="line-numbers language-shell"><code class="language-shell">LVHAR = .TRUE.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>mobility.sh文件<pre class="line-numbers language-shell"><code class="language-shell">#!/bin/bash#3 November, 2018#To use it: bash mobility.shmkdir mobility-xcd mobility-xx=4.083622259999999                           #"x" stands for the lattice constant in x directionfor i in $(seq 0.98 0.005 1.02)                #"i" defines the range of straindocp -r ../IS-x ./$i                               #"IS-x" stands for the origin file sed -i "3s/$x/$(echo "$x*$i"|bc)/g" $i/POSCARcd $iqsub ./pbscd $OLDPWDdonecd ../mkdir mobility-ycd mobility-yy=7.073041233239241                            #"y" stands for the lattice constant in y directionfor j in $(seq 0.98 0.005 1.02)                #"j" defines the range of straindocp -r ../IS-y ./$j                               #"IS-y" stands for the origin file sed -i "4s/$y/$(echo "$y*$j"|bc)/g" $j/POSCARcd $jqsub ./pbscd $OLDPWDdone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>Note：计算过程中需要根据自己的体系修改x和y方向的晶格常数值</li><li>其余文件与前面计算能带过程的输入文件相同，在mobility文件夹下输入bash mobility.sh文件即可完成全部计算</li></ul><h3 id="数据处理（以x方向为例）"><a href="#数据处理（以x方向为例）" class="headerlink" title="数据处理（以x方向为例）"></a>数据处理（以x方向为例）</h3><h4 id="计算形变势常数-E-1"><a href="#计算形变势常数-E-1" class="headerlink" title="计算形变势常数$E_1$"></a>计算形变势常数$E_1$</h4><ul><li>以真空能级为参考，确定VBM和CBM的位置。思路是读取能带计算结果中的最高占据态VBM和最低非占据态CBM（未扣除费米能级）的结果，然后减去真空能级就可得到我们需要的结果。</li><li>对得到的数据以应变量为x轴（-0.02~0.02），VBM和CBM为y轴画图，然后在origin中做线性拟合，即可得到形变势常数，最终结果如下：<br><img src="/image/mobility-1.png" alt="形变势常数"><h4 id="计算弹性模量-C-2D-（以x方向为例）"><a href="#计算弹性模量-C-2D-（以x方向为例）" class="headerlink" title="计算弹性模量$C_{2D}$（以x方向为例）"></a>计算弹性模量$C_{2D}$（以x方向为例）</h4></li><li>读取每个应变下的体系总能量，然后画图。</li><li>对其做二次函数拟合，然后带入$C_{2D}$的计算公式，并对单位做换算后，得到的结果如下：<br><img src="/image/mobility-2.png" alt><h4 id="计算迁移率"><a href="#计算迁移率" class="headerlink" title="计算迁移率"></a>计算迁移率</h4>&emsp;&emsp;现已得到有效质量、形变势常数和弹性模量，依据载流子迁移率计算公式，并注意单位换算，即可得到载流子的迁移率具体数值。计算结果可参考我的<a href="https://pubs.acs.org/doi/abs/10.1021/acs.jpcc.9b01175" target="_blank" rel="noopener">JPCC</a>文章，如下：<br><img src="/image/mobility-3.png" alt="迁移率计算结果"></li></ul><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>&emsp;&emsp;因时间关系，本文写作比较仓促，文中一些数据处理的细节没有详细给出，并且可能存在一些小的错误，欢迎大家阅读过程中积极指出，以便在后续更正过程中改正。另外，本文公式较多，但mathjax环境对公式编辑不是很友好，排版过程中公式很容易乱，故而部分公式以插图的形式放入了本文中，看起来版面搅乱，后续会想办法处理。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] Bardeen J, Shockley W. Deformation Potentials and Mobilities in Non-Polar Crystals[J]. Physical Review, 2008, 80(1):72-80.</p>]]></content>
      
      
      <categories>
          
          <category> vasp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mobility </tag>
            
            <tag> effective mass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vasp计算光学性质</title>
      <link href="/2019/10/12/vasp-optics/"/>
      <url>/2019/10/12/vasp-optics/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;本文以二维InSe材料为例，详细介绍了二维InSe的光学性质计算过程。</p><h2 id="结构优化"><a href="#结构优化" class="headerlink" title="结构优化"></a>结构优化</h2><h4 id="INCAR"><a href="#INCAR" class="headerlink" title="INCAR"></a>INCAR</h4><pre class="line-numbers language-bash"><code class="language-bash">   SYSTEM <span class="token operator">=</span> 2D_InSe   ISTART <span class="token operator">=</span> 0   NWRITE <span class="token operator">=</span> 2      PREC   <span class="token operator">=</span> Accurate   ENCUT  <span class="token operator">=</span> 500   GGA    <span class="token operator">=</span> PE   NSW    <span class="token operator">=</span> 200   ISIF   <span class="token operator">=</span> 3   ISYM   <span class="token operator">=</span> 2   NBLOCK <span class="token operator">=</span> 1      KBLOCK <span class="token operator">=</span> 1   IBRION <span class="token operator">=</span> 2   NELM   <span class="token operator">=</span> 80        EDIFF  <span class="token operator">=</span> 1E-05   EDIFFG <span class="token operator">=</span> -0.01    ALGO   <span class="token operator">=</span> Normal   LDIAG  <span class="token operator">=</span> .TRUE.   LREAL  <span class="token operator">=</span> .FALSE.   ISMEAR <span class="token operator">=</span> 0   SIGMA  <span class="token operator">=</span> 0.02   ICHARG <span class="token operator">=</span> 2   LPLANE <span class="token operator">=</span> .TRUE.   NPAR   <span class="token operator">=</span> 4   LSCALU <span class="token operator">=</span> .FALSE.   NSIM   <span class="token operator">=</span> 4   LWAVE  <span class="token operator">=</span> .FALSE.   LCHARG <span class="token operator">=</span> .FALSE.   ICORELEVEL <span class="token operator">=</span>  1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="POSCAR"><a href="#POSCAR" class="headerlink" title="POSCAR"></a>POSCAR</h4><pre class="line-numbers language-bash"><code class="language-bash">2D_InSe1.0        4.0836000443         0.0000000000         0.0000000000       -2.0418000221         3.5365013772         0.0000000000        0.0000000000         0.0000000000        25.3775005341   In   Se    2    2Direct     0.666670026         0.333330010         0.589979992     0.666670026         0.333330010         0.478789968     0.333329978         0.666669998         0.428439986     0.333329978         0.666669998         0.640340007<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="KPOINTS"><a href="#KPOINTS" class="headerlink" title="KPOINTS"></a>KPOINTS</h4><pre class="line-numbers language-bash"><code class="language-bash">Monkhorst Pack of Gamma centered0Gamma 13    13    1 0.0   0.0   0.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="POTCAR"><a href="#POTCAR" class="headerlink" title="POTCAR"></a>POTCAR</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cat</span> In_d/POTCAR Se/POTCAR <span class="token operator">></span> POTCAR<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="OPTCELL"><a href="#OPTCELL" class="headerlink" title="OPTCELL"></a>OPTCELL</h4><pre class="line-numbers language-bash"><code class="language-bash">100110000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="静态自洽"><a href="#静态自洽" class="headerlink" title="静态自洽"></a>静态自洽</h2><h4 id="INCAR-1"><a href="#INCAR-1" class="headerlink" title="INCAR"></a>INCAR</h4><pre class="line-numbers language-bash"><code class="language-bash">SYSTEM <span class="token operator">=</span> 2D_InSeISTART <span class="token operator">=</span> 0NWRITE <span class="token operator">=</span> 2   PREC   <span class="token operator">=</span> AccurateENCUT  <span class="token operator">=</span> 500GGA    <span class="token operator">=</span> PE NSW    <span class="token operator">=</span> 0ISIF   <span class="token operator">=</span> 2ISYM   <span class="token operator">=</span> 2NBLOCK <span class="token operator">=</span> 1   KBLOCK <span class="token operator">=</span> 1IBRION <span class="token operator">=</span> -1 NELM   <span class="token operator">=</span> 80   EDIFF  <span class="token operator">=</span> 1E-05EDIFFG <span class="token operator">=</span> -0.01 ALGO   <span class="token operator">=</span> NormalLDIAG  <span class="token operator">=</span> .TRUE.LREAL  <span class="token operator">=</span> .FALSE.ISMEAR <span class="token operator">=</span> 0SIGMA  <span class="token operator">=</span> 0.02ICHARG <span class="token operator">=</span> 2LPLANE <span class="token operator">=</span> .TRUE.NPAR   <span class="token operator">=</span> 4LSCALU <span class="token operator">=</span> .FALSE.NSIM   <span class="token operator">=</span> 4LWAVE  <span class="token operator">=</span> .TRUE.LCHARG <span class="token operator">=</span> .TRUE.ICORELEVEL <span class="token operator">=</span>  1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="POSCAR-1"><a href="#POSCAR-1" class="headerlink" title="POSCAR"></a>POSCAR</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cp</span> CONTCAR POSCAR<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="KPOINTS-1"><a href="#KPOINTS-1" class="headerlink" title="KPOINTS"></a>KPOINTS</h4><p>&emsp;&emsp;自洽计算要求有密的k网格点，在计算条件允许的情况下要求自洽的k网格点大致为优化时的2倍左右。</p><pre class="line-numbers language-bash"><code class="language-bash">Monkhorst Pack of Gamma centered0Gamma 25    25    1 0.0   0.0   0.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="光学性质计算"><a href="#光学性质计算" class="headerlink" title="光学性质计算"></a>光学性质计算</h2><h4 id="INCAR-2"><a href="#INCAR-2" class="headerlink" title="INCAR"></a>INCAR</h4><pre class="line-numbers language-bash"><code class="language-bash">SYSTEM <span class="token operator">=</span> 2D_InSeISTART <span class="token operator">=</span> 1NWRITE <span class="token operator">=</span> 2   PREC   <span class="token operator">=</span> AccurateENCUT  <span class="token operator">=</span> 500GGA    <span class="token operator">=</span> PENSW    <span class="token operator">=</span> 0ISIF   <span class="token operator">=</span> 2ISYM   <span class="token operator">=</span> 2NBLOCK <span class="token operator">=</span> 1   KBLOCK <span class="token operator">=</span> 1IBRION <span class="token operator">=</span> -1NELM   <span class="token operator">=</span> 80     EDIFF  <span class="token operator">=</span> 1E-05EDIFFG <span class="token operator">=</span> -0.01 ALGO   <span class="token operator">=</span> NormalLDIAG  <span class="token operator">=</span> .TRUE.LREAL  <span class="token operator">=</span> .FALSE.ISMEAR <span class="token operator">=</span> 0SIGMA  <span class="token operator">=</span> 0.02ICHARG <span class="token operator">=</span> 11LPLANE <span class="token operator">=</span> .TRUE.NPAR   <span class="token operator">=</span> 4LSCALU <span class="token operator">=</span> .FALSE.NSIM   <span class="token operator">=</span> 4LWAVE  <span class="token operator">=</span> .FALSE.LCHARG <span class="token operator">=</span> .FALSE.LOPTICS <span class="token operator">=</span> .TRUE.NBANDS  <span class="token operator">=</span>  72 NEDOS   <span class="token operator">=</span>  2000CSHIFT  <span class="token operator">=</span>  0.1 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="KPOINTS-2"><a href="#KPOINTS-2" class="headerlink" title="KPOINTS"></a>KPOINTS</h4><pre class="line-numbers language-bash"><code class="language-bash">Monkhorst Pack of Gamma centered0Gamma 29    29    1 0.0   0.0   0.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="blue"> Note：对于光学性质的计算，也就是计算材料的介电函数，需要足够多的空带和致密的K网格点，使其达到非常好的收敛状态，我们才可以得到合理的光学性质；因此通常计算中，一般设置NBANDS为默认值（可在自洽的OUTCAR中以关键字NBANDS查找到）的2-3倍，K网格点为自洽值或适当增加 </font></p><ul><li>其余的POSCAR、POTCAR不变，并要求有WAVECAR和CHGCAR文件，以供读取<h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3></li><li>使用optics.sh脚本得到介电函数的实部和虚部<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># extract image and real parts of dielectric function from vasprun.xml</span><span class="token function">awk</span> <span class="token string">'BEGIN{i=1} /&lt;imag>/,\              /&lt;\/imag>/ \               {a[i]=<span class="token variable">$2</span> ; b[i]=<span class="token variable">$3</span> ; c[i]=<span class="token variable">$4</span>; d[i]=<span class="token variable">$5</span> ; e[i]=<span class="token variable">$6</span> ; f[i]=<span class="token variable">$7</span>; g[i]=<span class="token variable">$8</span>; i=i+1} \   END{for (j=12;j&lt;i-3;j++) print a[j],b[j],c[j],d[j],e[j],f[j],g[j]}'</span> vasprun.xml <span class="token operator">></span> IMAG.in<span class="token comment" spellcheck="true">#awk 'BEGIN{i=1} /imag/,\</span><span class="token comment" spellcheck="true">#                /\/imag/ \</span><span class="token comment" spellcheck="true">#                 {a[i]=$2 ; b[i]=$3 ; c[i]=$4; d[i]=$5 ; e[i]=$6 ; f[i]=$7; g[i]=$8; i=i+1} \</span><span class="token comment" spellcheck="true">#     END{for (j=12;j&lt;i-3;j++) print a[j],b[j],c[j],d[j],e[j],f[j],g[j]}' vasprun.xml > IMAG.in</span><span class="token function">awk</span> <span class="token string">'BEGIN{i=1} /&lt;real>/,\              /&lt;\/real>/ \               {a[i]=<span class="token variable">$2</span> ; b[i]=<span class="token variable">$3</span> ; c[i]=<span class="token variable">$4</span>; d[i]=<span class="token variable">$5</span> ; e[i]=<span class="token variable">$6</span> ; f[i]=<span class="token variable">$7</span>; g[i]=<span class="token variable">$8</span>; i=i+1} \   END{for (j=12;j&lt;i-3;j++) print a[j],b[j],c[j],d[j],e[j],f[j],g[j]}'</span> vasprun.xml <span class="token operator">></span> REAL.in<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>使用<a href="https://sourceforge.net/projects/vaspkit/" target="_blank" rel="noopener">vaspkit-1.00</a>后处理软件得到光学性质<pre class="line-numbers language-bash"><code class="language-bash">$ vaspkit-1.00          \\\///         / _  _ \       Hey, you must know what you are doing.       <span class="token punctuation">(</span><span class="token operator">|</span> <span class="token punctuation">(</span>.<span class="token punctuation">)</span><span class="token punctuation">(</span>.<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token punctuation">)</span>     Otherwise you might get wrong results<span class="token operator">!</span>+-----.OOOo--<span class="token punctuation">(</span><span class="token punctuation">)</span>--oOOO.------------------------------------------+<span class="token operator">|</span>             VASPKIT Version: 1.00 <span class="token punctuation">(</span>16 Sep. 2019<span class="token punctuation">)</span>              <span class="token operator">|</span><span class="token operator">|</span>       A Pre- and Post-Processing Program <span class="token keyword">for</span> VASP Code        <span class="token operator">|</span><span class="token operator">|</span>       Core Developers: Vei WANG, Nan XU, Jin-Cheng LIU        <span class="token operator">|</span><span class="token operator">|</span>    Please send Bugs and Suggestions to vaspkit@gmail.com      <span class="token operator">|</span>+-----.oooO-----------------------------------------------------+      <span class="token punctuation">(</span>   <span class="token punctuation">)</span>   Oooo.       \ <span class="token punctuation">(</span>    <span class="token punctuation">(</span>   <span class="token punctuation">)</span>        \_<span class="token punctuation">)</span>    <span class="token punctuation">)</span> /              <span class="token punctuation">(</span>_/<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> Structural Options <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>1<span class="token punctuation">)</span>  VASP Input Files Generator    2<span class="token punctuation">)</span>  Elastic-Properties3<span class="token punctuation">)</span>  K-Path Generator              4<span class="token punctuation">)</span>  Structure Editor5<span class="token punctuation">)</span>  Catalysis-ElectroChemi Kit    6<span class="token punctuation">)</span>  Symmetry Search<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> Electronic Options <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>11<span class="token punctuation">)</span> Density-of-States             21<span class="token punctuation">)</span> DFT Band-Structure23<span class="token punctuation">)</span> 3D Band-Structure             25<span class="token punctuation">)</span> Hybrid-DFT Band-Structure26<span class="token punctuation">)</span> Fermi-Surface                 28<span class="token punctuation">)</span> Band-Structure Unfolding<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> Charge <span class="token operator">&amp;</span> Potential <span class="token operator">&amp;</span> Wavefunction Options <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>31<span class="token punctuation">)</span> Charge <span class="token operator">&amp;</span> Spin Density         42<span class="token punctuation">)</span> Potential-Related51<span class="token punctuation">)</span> Wave-Function Analysis<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> Misc Utilities <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>71<span class="token punctuation">)</span> Optical-Properties            72<span class="token punctuation">)</span> Molecular-Dynamics Kit73<span class="token punctuation">)</span> VASP2BoltzTraP Interface91<span class="token punctuation">)</span> Semiconductor Calculator      92<span class="token punctuation">)</span> 2D-Materials Kit0<span class="token punctuation">)</span>  Quit------------<span class="token operator">>></span>71<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> Optical Options <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>711<span class="token punctuation">)</span> Linear Optical Spectrums712<span class="token punctuation">)</span> Transition Dipole Moment at Single Kpoint713<span class="token punctuation">)</span> Transition Dipole Moment <span class="token keyword">for</span> Band-Structure716<span class="token punctuation">)</span> Total Joint Density of States717<span class="token punctuation">)</span> Partial Joint Density of States0<span class="token punctuation">)</span>   Quit9<span class="token punctuation">)</span>   Back------------<span class="token operator">>></span>711+-------------------------- Warm Tips --------------------------+       See an example <span class="token keyword">in</span> vaspkit/examples/Si_bse_optical.   This module is NOT suitable <span class="token keyword">for</span> low-dimensional materials.+---------------------------------------------------------------+<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> Energy Unit <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>Which Energy Unit Do You Want to Adopt?1<span class="token punctuation">)</span> eV2<span class="token punctuation">)</span> nm3<span class="token punctuation">)</span> THz------------<span class="token operator">>></span>1--<span class="token operator">>></span> <span class="token punctuation">(</span>01<span class="token punctuation">)</span> Reading IMAG.in and REAL.in Files<span class="token punctuation">..</span>.--<span class="token operator">>></span> <span class="token punctuation">(</span>02<span class="token punctuation">)</span> Written Optical Files Succesfully<span class="token operator">!</span>+---------------------------------------------------------------+<span class="token operator">|</span>                         * DISCLAIMER *                        <span class="token operator">|</span><span class="token operator">|</span>      Check the Consistency of Your Results <span class="token keyword">if</span> Necessary       <span class="token operator">|</span><span class="token operator">|</span>         Any Suggestions <span class="token keyword">for</span> Improvements are Welcome          <span class="token operator">|</span><span class="token operator">|</span>                     <span class="token punctuation">(</span>^.^<span class="token punctuation">)</span> GOOD LUCK <span class="token punctuation">(</span>^.^<span class="token punctuation">)</span>                     <span class="token operator">|</span><span class="token operator">|</span>---------------------------------------------------------------<span class="token operator">|</span><span class="token operator">|</span> We Would Appreciate <span class="token keyword">if</span> You Cite <span class="token keyword">in</span> Your Research with VASPKIT.<span class="token operator">|</span><span class="token operator">|</span> Ref: V. Wang, N. Xu, J.C. LIU, G. Tang, et al, VASPKIT: A Pre-<span class="token operator">|</span><span class="token operator">|</span> and Post-Processing Program <span class="token keyword">for</span> VASP Code, arXiv:1908.08269.  <span class="token operator">|</span>+---------------------------------------------------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>得到的光学性质包括</li></ul><ol><li>光吸收系数ABSORB.dat<pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#energy      xx(cm^-1)       yy(cm^-1)       zz(cm^-1)       xy(cm^-1)       yz(cm^-1)       zx(cm^-1)</span>0.000      0.0000E+00      0.0000E+00      0.0000E+00      0.0000E+00      0.0000E+00      0.0000E+000.020      0.3820E+00      0.3820E+00      0.5428E+00      0.0000E+00      0.0000E+00      0.0000E+000.040      0.1415E+01      0.1415E+01      0.2057E+01      0.0000E+00      0.0000E+00      0.0000E+000.060      0.3268E+01      0.3268E+01      0.4714E+01      0.0000E+00      0.0000E+00      0.0000E+000.080      0.5885E+01      0.5885E+01      0.8238E+01      0.0000E+00      0.0000E+00      0.0000E+000.100      0.9265E+01      0.9265E+01      0.1301E+02      0.0000E+00      0.0000E+00      0.0000E+000.120      0.1307E+02      0.1307E+02      0.1885E+02      0.0000E+00      0.0000E+00      0.0000E+000.141      0.1792E+02      0.1792E+02      0.2540E+02      0.0000E+00      0.0000E+00      0.0000E+000.161      0.2353E+02      0.2353E+02      0.3336E+02      0.0000E+00      0.0000E+00      0.0000E+000.181      0.2990E+02      0.2990E+02      0.4240E+02      0.0000E+00      0.0000E+00      0.0000E+000.201      0.3701E+02      0.3702E+02      0.5250E+02      0.0000E+00      0.0000E+00      0.0000E+000.221      0.4431E+02      0.4431E+02      0.6369E+02      0.0000E+00      0.0000E+00      0.0000E+000.241      0.5290E+02      0.5290E+02      0.7596E+02      0.0000E+00      0.0000E+00      0.0000E+000.261      0.6223E+02      0.6223E+02      0.8927E+02      0.0000E+00      0.0000E+00      0.0000E+000.281      0.7233E+02      0.7234E+02      0.1037E+03      0.0000E+00      0.0000E+00      0.0000E+00<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>能量损失谱ENERGYLOSSSPECTRUM.dat</li><li>消光系数EXTINCTION.dat</li><li>反射系数REFLECTIVITY.dat</li><li>折射系数REFRACTIVE.dat</li></ol><ul><li>可以选择自己感兴趣的性质进一步作图，例如对于吸收系数作图如下<br><img src="/image/2D_InSe-absorption.png" alt="2D_InSe-absorption"></li></ul>]]></content>
      
      
      <categories>
          
          <category> vasp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> optics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QE计算能带过程</title>
      <link href="/2019/10/11/qe-band/"/>
      <url>/2019/10/11/qe-band/</url>
      
        <content type="html"><![CDATA[<p>说明：</p><ol><li>以二维InSe原胞为例</li><li>QE版本：qe-6.4.1</li><li>赝势：SSSP</li></ol><h2 id="结构优化"><a href="#结构优化" class="headerlink" title="结构优化"></a>结构优化</h2><ul><li>通过Materials studio 2018的建模功能切出二维InSe原胞，如图所示，并导出为InSe.cif格式。<br><img src="/image/2D_InSe.png" alt="二维InSe原胞"></li><li>使用VESTA软件打开InSe.cif文件，然后File$\rightarrow$Export Date，保存格式选择vasp，原子坐标选择Fractional coordinates，最后点击确定。<h3 id="QE输入文件结构"><a href="#QE输入文件结构" class="headerlink" title="QE输入文件结构"></a>QE输入文件结构</h3>&emsp;&emsp;QE的结构优化主要使用的是pw.x模块，该模块包含非常多的输入参数，建议在计算过程中逐步学习，无需一次性学完所有命令，即使学完也是徒劳，因为几乎无法记住。<br>&emsp;&emsp;结构优化在QE中是比较诟病的一个地方，优化速度非常慢，对于大体系实现结构优化是非常慢的，如果计算的体系包含较多的原子，建议使用VASP。QE结合EPW计算材料的与声子有关的性质比较合适，且这类计算一般不需要建立超胞，能够达到计算目的。总之，根据计算的任务和目的合理选择第一性原理计算软件是比较明智的。</li><li>pw.x模块输入文件结构<pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&amp;</span>CONTROL<span class="token punctuation">..</span>./<span class="token operator">&amp;</span>SYSTEM<span class="token punctuation">..</span>./<span class="token operator">&amp;</span>ELECTRONS<span class="token punctuation">..</span>./<span class="token punctuation">[</span> <span class="token operator">&amp;</span>IONS<span class="token punctuation">..</span>./ <span class="token punctuation">]</span><span class="token punctuation">[</span> <span class="token operator">&amp;</span>CELL<span class="token punctuation">..</span>./ <span class="token punctuation">]</span>ATOMIC_SPECIESX  Mass_X  PseudoPot_XY  Mass_Y  PseudoPot_YZ  Mass_Z  PseudoPot_ZATOMIC_POSITIONS <span class="token punctuation">{</span> alat <span class="token operator">|</span> bohr <span class="token operator">|</span> crystal <span class="token operator">|</span> angstrom <span class="token operator">|</span> crystal_sg <span class="token punctuation">}</span>X 0.0  0.0  0.0  <span class="token punctuation">{</span>if_pos<span class="token punctuation">(</span>1<span class="token punctuation">)</span> if_pos<span class="token punctuation">(</span>2<span class="token punctuation">)</span> if_pos<span class="token punctuation">(</span>3<span class="token punctuation">)</span><span class="token punctuation">}</span>Y 0.5  0.0  0.0Z O.0  0.2  0.2K_POINTS <span class="token punctuation">{</span> tpiba <span class="token operator">|</span> automatic <span class="token operator">|</span> crystal <span class="token operator">|</span> gamma <span class="token operator">|</span> tpiba_b <span class="token operator">|</span> crystal_b <span class="token operator">|</span> tpiba_c <span class="token operator">|</span> crystal_c <span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>gamma<span class="token punctuation">)</span> nothing to <span class="token function">read</span><span class="token keyword">if</span> <span class="token punctuation">(</span>automatic<span class="token punctuation">)</span> nk1, nk2, nk3, k1, k2, k3<span class="token keyword">if</span> <span class="token punctuation">(</span>not automatic<span class="token punctuation">)</span> nks xk_x, xk_y, xk_z,  wk<span class="token punctuation">[</span> CELL_PARAMETERS <span class="token punctuation">{</span> alat <span class="token operator">|</span> bohr <span class="token operator">|</span> angstrom <span class="token punctuation">}</span> v1<span class="token punctuation">(</span>1<span class="token punctuation">)</span> v1<span class="token punctuation">(</span>2<span class="token punctuation">)</span> v1<span class="token punctuation">(</span>3<span class="token punctuation">)</span> v2<span class="token punctuation">(</span>1<span class="token punctuation">)</span> v2<span class="token punctuation">(</span>2<span class="token punctuation">)</span> v2<span class="token punctuation">(</span>3<span class="token punctuation">)</span> v3<span class="token punctuation">(</span>1<span class="token punctuation">)</span> v3<span class="token punctuation">(</span>2<span class="token punctuation">)</span> v3<span class="token punctuation">(</span>3<span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token punctuation">[</span> OCCUPATIONS f_inp1<span class="token punctuation">(</span>1<span class="token punctuation">)</span>  f_inp1<span class="token punctuation">(</span>2<span class="token punctuation">)</span>  f_inp1<span class="token punctuation">(</span>3<span class="token punctuation">)</span> <span class="token punctuation">..</span>. f_inp1<span class="token punctuation">(</span>10<span class="token punctuation">)</span> f_inp1<span class="token punctuation">(</span>11<span class="token punctuation">)</span> f_inp1<span class="token punctuation">(</span>12<span class="token punctuation">)</span> <span class="token punctuation">..</span>. f_inp1<span class="token punctuation">(</span>nbnd<span class="token punctuation">)</span><span class="token punctuation">[</span> f_inp2<span class="token punctuation">(</span>1<span class="token punctuation">)</span>  f_inp2<span class="token punctuation">(</span>2<span class="token punctuation">)</span>  f_inp2<span class="token punctuation">(</span>3<span class="token punctuation">)</span> <span class="token punctuation">..</span>. f_inp2<span class="token punctuation">(</span>10<span class="token punctuation">)</span> f_inp2<span class="token punctuation">(</span>11<span class="token punctuation">)</span> f_inp2<span class="token punctuation">(</span>12<span class="token punctuation">)</span> <span class="token punctuation">..</span>. f_inp2<span class="token punctuation">(</span>nbnd<span class="token punctuation">)</span> <span class="token punctuation">]</span> <span class="token punctuation">]</span><span class="token punctuation">[</span> CONSTRAINTS nconstr  <span class="token punctuation">{</span> constr_tol <span class="token punctuation">}</span> constr_type<span class="token punctuation">(</span>.<span class="token punctuation">)</span>   constr<span class="token punctuation">(</span>1,.<span class="token punctuation">)</span>   constr<span class="token punctuation">(</span>2,.<span class="token punctuation">)</span> <span class="token punctuation">[</span> constr<span class="token punctuation">(</span>3,.<span class="token punctuation">)</span>   constr<span class="token punctuation">(</span>4,.<span class="token punctuation">)</span> <span class="token punctuation">]</span> <span class="token punctuation">{</span> constr_target<span class="token punctuation">(</span>.<span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">[</span> ATOMIC_FORCES label_1 Fx<span class="token punctuation">(</span>1<span class="token punctuation">)</span> Fy<span class="token punctuation">(</span>1<span class="token punctuation">)</span> Fz<span class="token punctuation">(</span>1<span class="token punctuation">)</span> <span class="token punctuation">..</span><span class="token punctuation">..</span>. label_n Fx<span class="token punctuation">(</span>n<span class="token punctuation">)</span> Fy<span class="token punctuation">(</span>n<span class="token punctuation">)</span> Fz<span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二维InSe原胞结构优化输入文件"><a href="#二维InSe原胞结构优化输入文件" class="headerlink" title="二维InSe原胞结构优化输入文件"></a>二维InSe原胞结构优化输入文件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&amp;</span>CONTROLcalculation<span class="token operator">=</span><span class="token string">'vc-relax'</span>, <span class="token operator">!</span>　vc-relax <span class="token operator">|</span> relaxrestart_mode<span class="token operator">=</span><span class="token string">'from_scratch'</span>, <span class="token operator">!</span> normal usedprefix<span class="token operator">=</span><span class="token string">'InSe'</span>, <span class="token operator">!</span> prepended to input/output filenamespseudo_dir<span class="token operator">=</span><span class="token string">'../pseudo/'</span>, <span class="token operator">!</span> directory containing pseudopotential filesoutdir<span class="token operator">=</span><span class="token string">'../tmp/'</span>, <span class="token operator">!</span> input, temporary, output files are found <span class="token keyword">in</span> this directoryforc_conv_thr<span class="token operator">=</span>1d-5, <span class="token operator">!</span> forces convergence threshold 1d-03/<span class="token operator">&amp;</span>SYSTEMibrav <span class="token operator">=</span> 0 <span class="token operator">!</span> Bravais-lattice index nat<span class="token operator">=</span>4 <span class="token operator">!</span> number of atoms <span class="token keyword">in</span> the unit cellntyp<span class="token operator">=</span>2 <span class="token operator">!</span> number of types of atoms <span class="token keyword">in</span> the unit cell ecutwfc<span class="token operator">=</span>60.0, <span class="token operator">!</span> kinetic energy cutoff <span class="token punctuation">(</span>Ry<span class="token punctuation">)</span> <span class="token keyword">for</span> wavefunctions ecutrho<span class="token operator">=</span>720.0, <span class="token operator">!</span> Kinetic energy cutoff <span class="token punctuation">(</span>Ry<span class="token punctuation">)</span> <span class="token keyword">for</span> charge density/<span class="token operator">&amp;</span>ELECTRONSmixing_beta<span class="token operator">=</span>0.7, <span class="token operator">!</span> mixing factor <span class="token keyword">for</span> self-consistencyconv_thr<span class="token operator">=</span>1d-8, <span class="token operator">!</span> Convergence threshold <span class="token keyword">for</span> selfconsistency 1d-6/<span class="token operator">&amp;</span>IONSion_dynamics<span class="token operator">=</span><span class="token string">'bfgs'</span>, <span class="token operator">!</span> Specify the <span class="token function">type</span> of ionic dynamics/<span class="token operator">&amp;</span>CELLcell_dynamics<span class="token operator">=</span><span class="token string">'bfgs'</span>, <span class="token operator">!</span> Specify the <span class="token function">type</span> of dynamics <span class="token keyword">for</span> the cellpress<span class="token operator">=</span>0.0, <span class="token operator">!</span> press_conv_thr<span class="token operator">=</span>0.5, <span class="token operator">!</span> Convergence threshold on the pressure <span class="token keyword">for</span> variable cellcell_dofree<span class="token operator">=</span>2Dxy, <span class="token operator">!</span> <span class="token keyword">for</span> 2D materials/CELL_PARAMETERS <span class="token punctuation">{</span>angstrom<span class="token punctuation">}</span> <span class="token operator">!</span> specify the structure      4.0836000443         0.0000000000         0.0000000000     -2.0418000221         3.5365013772         0.0000000000      0.0000000000         0.0000000000        25.3775005341ATOMIC_SPECIES <span class="token operator">!</span> In   114.80   In.pbe-dn-rrkjus_psl.0.2.2.UPFSe   78.960   Se_pbe_v1.uspp.F.UPFATOMIC_POSITIONS <span class="token punctuation">{</span>crystal<span class="token punctuation">}</span>In     0.333333347         0.666666695         0.555589958In     0.333333347         0.666666695         0.444410042Se     0.666666674         0.333333347         0.394049989Se     0.666666674         0.333333347         0.605950011K_POINTS automatic12 12 1 0 0 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="结构优化的经验总结"><a href="#结构优化的经验总结" class="headerlink" title="结构优化的经验总结"></a>结构优化的经验总结</h3></li><li>pw.x模块用于结构优化时，对于体系的对称性非常敏感，也就是QE自身不会寻找体系的对称性，只能依靠手动输入体系的对称性，这点与VASP相比是非常欠缺的，因为VASP是可以自己寻找对称性的。对于二维InSe原胞，有对称性与无对称性的结构优化使用时间相差了近５倍。</li><li>查看优化所用时间<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">grep</span> PWSCF InSe.vc-relax.out <span class="token operator">|</span> <span class="token function">tail</span> -n 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>输入对称性<pre class="line-numbers language-bash"><code class="language-bash">   PWSCF        <span class="token keyword">:</span>   4m10.53s CPU   4m51.82s WALL<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>没有输入对称性<pre class="line-numbers language-bash"><code class="language-bash">   PWSCF        <span class="token keyword">:</span>   21m5.53s CPU   4m51.82s WALL<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>对于离子的受力，一般使用准牛顿迭代算法<pre class="line-numbers language-bash"><code class="language-bash">ion_dynamics<span class="token operator">=</span><span class="token string">'bfgs'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>pwscf模块做结构优化时，对于二维材料无需重新编译软件，即可做到不优化真空层，这点比VASP方便，具体设置如下<pre class="line-numbers language-bash"><code class="language-bash">cell_dofree    CHARACTERDefault:    <span class="token string">'all'</span>Select <span class="token function">which</span> of the cell parameters should be moved:            <span class="token string">'all'</span> <span class="token keyword">:</span>all axis and angles are moved            <span class="token string">'ibrav'</span> <span class="token keyword">:</span>all axis and angles are moved, but the lattice but be representable with the initial ibrav choice            <span class="token string">'x'</span> <span class="token keyword">:</span>only the x component of axis 1 <span class="token punctuation">(</span>v1_x<span class="token punctuation">)</span> is moved            <span class="token string">'y'</span> <span class="token keyword">:</span>only the y component of axis 2 <span class="token punctuation">(</span>v2_y<span class="token punctuation">)</span> is moved            <span class="token string">'z'</span> <span class="token keyword">:</span>only the z component of axis 3 <span class="token punctuation">(</span>v3_z<span class="token punctuation">)</span> is moved            <span class="token string">'xy'</span> <span class="token keyword">:</span>only v1_x and v2_y are moved            <span class="token string">'xz'</span> <span class="token keyword">:</span>only v1_x and v3_z are moved            <span class="token string">'yz'</span> <span class="token keyword">:</span>only v2_y and v3_z are moved            <span class="token string">'xyz'</span> <span class="token keyword">:</span>only v1_x, v2_y, v3_z are moved           <span class="token string">'shape'</span> <span class="token keyword">:</span>all axis and angles, keeping the volume fixed            <span class="token string">'volume'</span> <span class="token keyword">:</span>the volume changes, keeping all angles fixed <span class="token punctuation">(</span>i.e. only celldm<span class="token punctuation">(</span>1<span class="token punctuation">)</span> changes<span class="token punctuation">)</span><span class="token string">'2Dxy'</span> <span class="token keyword">:</span>only x and y components are allowed to change            <span class="token string">'2Dshape'</span> <span class="token keyword">:</span>as above, keeping the area <span class="token keyword">in</span> xy plane fixed            <span class="token string">'epitaxial_ab'</span> <span class="token keyword">:</span>fix axis 1 and 2 <span class="token keyword">while</span> allowing axis 3 to move            <span class="token string">'epitaxial_ac'</span> <span class="token keyword">:</span>fix axis 1 and 3 <span class="token keyword">while</span> allowing axis 2 to move            <span class="token string">'epitaxial_bc'</span> <span class="token keyword">:</span>fix axis 2 and 3 <span class="token keyword">while</span> allowing axis 1 to move            <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><font color="blue"> BEWARE: if axis are not orthogonal, some of these options do not work (symmetry is broken). If you are not happy with them, edit subroutine init_dofree in file Modules/cell_base.f90 </font></li></ul><h2 id="结构自洽计算"><a href="#结构自洽计算" class="headerlink" title="结构自洽计算"></a>结构自洽计算</h2><h3 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&amp;</span>CONTROL calculation<span class="token operator">=</span><span class="token string">'scf'</span>, restart_mode<span class="token operator">=</span><span class="token string">'from_scratch'</span>, prefix<span class="token operator">=</span><span class="token string">'InSe'</span>, pseudo_dir<span class="token operator">=</span><span class="token string">'../pseudo/'</span>, outdir<span class="token operator">=</span><span class="token string">'../tmp/'</span>,/<span class="token operator">&amp;</span>SYSTEM  ibrav <span class="token operator">=</span> 0  nat<span class="token operator">=</span>4  ntyp<span class="token operator">=</span>2 ecutwfc<span class="token operator">=</span>60.0, ecutrho<span class="token operator">=</span>480.0,/<span class="token operator">&amp;</span>ELECTRONS mixing_beta<span class="token operator">=</span>0.7, conv_thr<span class="token operator">=</span>1d-8,/CELL_PARAMETERS <span class="token punctuation">{</span>angstrom<span class="token punctuation">}</span>   4.081910567   0.000000000   0.000000000  -2.040955283   3.535038247   0.000000000   0.000000000   0.000000000  25.377500534ATOMIC_SPECIES  In   114.80   In.pbe-dn-rrkjus_psl.0.2.2.UPF  Se   78.960   Se_pbe_v1.uspp.F.UPFATOMIC_POSITIONS <span class="token punctuation">{</span>crystal<span class="token punctuation">}</span>In       0.333333347   0.666666695   0.555619036In       0.333333347   0.666666695   0.444380964Se       0.666666674   0.333333347   0.394016400Se       0.666666674   0.333333347   0.605983600K_POINTS automatic12 12 1 0 0 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ecutwfc测试"><a href="#ecutwfc测试" class="headerlink" title="ecutwfc测试"></a>ecutwfc测试</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">for</span> ecutwfc <span class="token keyword">in</span> 50 55 60 65 70 75 80 <span class="token punctuation">;</span> <span class="token keyword">do</span><span class="token comment" spellcheck="true"># self-consistent calculation</span><span class="token function">cat</span> <span class="token operator">></span> InSe.scf.in.<span class="token variable">$ecutwfc</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOF&amp;CONTROL calculation='scf', restart_mode='from_scratch', prefix='InSe', pseudo_dir='../pseudo/', outdir='../test_tmp/',/&amp;SYSTEM  ibrav = 0  nat=4  ntyp=2 ecutwfc=<span class="token variable">$ecutwfc</span>, ecutrho=<span class="token variable"><span class="token variable">$((</span><span class="token number">8</span><span class="token operator">*</span>$ecutwfc<span class="token variable">))</span></span>,/&amp;ELECTRONS mixing_beta=0.7, conv_thr=1d-8,/CELL_PARAMETERS {angstrom}   4.081910567   0.000000000   0.000000000  -2.040955283   3.535038247   0.000000000   0.000000000   0.000000000  25.377500534ATOMIC_SPECIES  In   114.80   In.pbe-dn-rrkjus_psl.0.2.2.UPF  Se   78.960   Se_pbe_v1.uspp.F.UPFATOMIC_POSITIONS {crystal}In       0.333333347   0.666666695   0.555619036In       0.333333347   0.666666695   0.444380964Se       0.666666674   0.333333347   0.394016400Se       0.666666674   0.333333347   0.605983600K_POINTS automatic12 12 1 0 0 0EOF</span>mpirun -np 16 pw.x <span class="token operator">&lt;</span> InSe.scf.in.<span class="token variable">$ecutwfc</span> <span class="token operator">></span> InSe.scf.out.<span class="token variable">$ecutwfc</span><span class="token function">grep</span> -e <span class="token string">'kinetic-energy cutoff'</span> -e <span class="token operator">!</span> InSe.scf.out.<span class="token variable">$ecutwfc</span> <span class="token operator">|</span> \      <span class="token function">awk</span> <span class="token string">'/kinetic/{ecutwfc=<span class="token variable"><span class="token variable">$(</span>NF-1<span class="token variable">)</span></span>}/!/{print ecutwfc, <span class="token variable"><span class="token variable">$(</span>NF-1<span class="token variable">)</span></span>}'</span> <span class="token operator">>></span> InSe.etot_vs_ecutwfc<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试结果：<br><img src="/image/qe-encut.png" alt="encut"></p><h4 id="kpoints测试"><a href="#kpoints测试" class="headerlink" title="kpoints测试"></a>kpoints测试</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">for</span> kpoints <span class="token keyword">in</span> 4 6 8 10 12 14 16 18 20 <span class="token punctuation">;</span> <span class="token keyword">do</span><span class="token comment" spellcheck="true"># self-consistent calculation</span><span class="token function">cat</span> <span class="token operator">></span> InSe.scf.in.<span class="token variable">$kpoints</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOF&amp;CONTROL calculation='scf', restart_mode='from_scratch', prefix='InSe', pseudo_dir='../pseudo/', outdir='../test_tmp/',/&amp;SYSTEM  ibrav = 0  nat=4  ntyp=2 ecutwfc=70, ecutrho=840,/&amp;ELECTRONS mixing_beta=0.7, conv_thr=1d-8,/CELL_PARAMETERS {angstrom}   4.081910567   0.000000000   0.000000000  -2.040955283   3.535038247   0.000000000   0.000000000   0.000000000  25.377500534ATOMIC_SPECIES  In   114.80   In.pbe-dn-rrkjus_psl.0.2.2.UPF  Se   78.960   Se_pbe_v1.uspp.F.UPFATOMIC_POSITIONS {crystal}In       0.333333347   0.666666695   0.555619036In       0.333333347   0.666666695   0.444380964Se       0.666666674   0.333333347   0.394016400Se       0.666666674   0.333333347   0.605983600K_POINTS automatic<span class="token variable">$kpoints</span> <span class="token variable">$kpoints</span> 1 0 0 0EOF</span>mpirun -np 16 pw.x <span class="token operator">&lt;</span> InSe.scf.in.<span class="token variable">$kpoints</span> <span class="token operator">></span> InSe.scf.out.<span class="token variable">$kpoints</span><span class="token keyword">echo</span> -e <span class="token string">"<span class="token variable">$kpoints</span> \c"</span> <span class="token operator">>></span> InSe.etot_vs_kpoints<span class="token function">grep</span> <span class="token operator">!</span> InSe.scf.out.<span class="token variable">$kpoints</span> <span class="token operator">|</span> \      <span class="token function">awk</span> <span class="token string">'/!/{print <span class="token variable"><span class="token variable">$(</span>NF-1<span class="token variable">)</span></span>}'</span> <span class="token operator">>></span> InSe.etot_vs_kpoints<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试结果：<br><img src="/image/qe-kpoints.png" alt="kpoints"></p><h3 id="结构自洽计算总结"><a href="#结构自洽计算总结" class="headerlink" title="结构自洽计算总结"></a>结构自洽计算总结</h3><p>&emsp;&emsp;通过对ecutwfc和kpoints的测试，我们选定ecutwfc的值为80 Ry，kpoints的值为８ ８ 1，用这个值返回去重新优化结构和自洽，然后开始计算下面的性质。</p><h2 id="能带计算"><a href="#能带计算" class="headerlink" title="能带计算"></a>能带计算</h2><h3 id="输入文件-1"><a href="#输入文件-1" class="headerlink" title="输入文件"></a>输入文件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&amp;</span>CONTROL calculation<span class="token operator">=</span><span class="token string">'bands'</span>, restart_mode<span class="token operator">=</span><span class="token string">'from_scratch'</span>, prefix<span class="token operator">=</span><span class="token string">'InSe'</span>, pseudo_dir<span class="token operator">=</span><span class="token string">'../pseudo/'</span>, outdir<span class="token operator">=</span><span class="token string">'../tmp/'</span>, verbosity<span class="token operator">=</span><span class="token string">'high'</span>,/<span class="token operator">&amp;</span>SYSTEM  ibrav <span class="token operator">=</span> 0  nat<span class="token operator">=</span>4  ntyp<span class="token operator">=</span>2 ecutwfc<span class="token operator">=</span>80.0, ecutrho<span class="token operator">=</span>960.0, nbnd<span class="token operator">=</span>26,/<span class="token operator">&amp;</span>ELECTRONS mixing_beta<span class="token operator">=</span>0.7, conv_thr<span class="token operator">=</span>1d-8,/CELL_PARAMETERS <span class="token punctuation">{</span>angstrom<span class="token punctuation">}</span>   4.085963663  -0.000000000   0.000000000  -2.042981832   3.538548331   0.000000000   0.000000000   0.000000000  25.377500534ATOMIC_SPECIES  In   114.80   In.pbe-dn-rrkjus_psl.0.2.2.UPF  Se   78.960   Se_pbe_v1.uspp.F.UPFATOMIC_POSITIONS <span class="token punctuation">{</span>crystal<span class="token punctuation">}</span>In       0.333333347   0.666666695   0.555623200In       0.333333347   0.666666695   0.444376800Se       0.666666674   0.333333347   0.394099781Se       0.666666674   0.333333347   0.605900219 K_POINTS crystal_b40.5     0.0     0.0 100 <span class="token operator">!</span>M0.0     0.0     0.0 100 <span class="token operator">!</span>G0.33333 0.33333 0.0 100 <span class="token operator">!</span>K0.5     0.0     0.0 100 <span class="token operator">!</span>M<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="后处理文件band2-in文件"><a href="#后处理文件band2-in文件" class="headerlink" title="后处理文件band2.in文件"></a>后处理文件band2.in文件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&amp;</span>bandsprefix<span class="token operator">=</span><span class="token string">'InSe'</span>,outdir<span class="token operator">=</span><span class="token string">'../tmp/'</span>,filband<span class="token operator">=</span><span class="token string">'InSebands.dat'</span>,lsym<span class="token operator">=</span>.true./<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="画能带图的后处理程序plotband-x"><a href="#画能带图的后处理程序plotband-x" class="headerlink" title="画能带图的后处理程序plotband.x"></a>画能带图的后处理程序plotband.x</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">></span> plotband.x InSebands.datReading   26 bands at    301 k-points<span class="token function">file</span> with representations not compatible with bandsRange:  -16.4500    5.4820eV  Emin, Emax <span class="token operator">></span> -4 4high-symmetry point:  0.5000 0.2887 0.0000   x coordinate   0.0000high-symmetry point:  0.0000 0.0000 0.0000   x coordinate   0.5774high-symmetry point:  0.3333 0.5773 0.0000   x coordinate   1.2440high-symmetry point:  0.5000 0.2887 0.0000   x coordinate   1.5773output <span class="token function">file</span> <span class="token punctuation">(</span>gnuplot/xmgr<span class="token punctuation">)</span> <span class="token operator">></span> InSebands.plotbands <span class="token keyword">in</span> gnuplot/xmgr <span class="token function">format</span> written to <span class="token function">file</span> InSebands.plot   output <span class="token function">file</span> <span class="token punctuation">(</span>ps<span class="token punctuation">)</span> <span class="token operator">></span> InSebands.psEfermi <span class="token operator">></span> -1.5444deltaE, reference E <span class="token punctuation">(</span>for tics<span class="token punctuation">)</span> 2 -1.5444bands <span class="token keyword">in</span> PostScript <span class="token function">format</span> written to <span class="token function">file</span> InSebands.ps<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：QE自带的画图程序plotband.x画出的能带图几乎无法直接用于文章中，因此这步处理意义不大。可以直接使用band.x计算出的InSebands.dat.gnu文件，通过origin等专业的绘图软件绘制能带图。</p><h3 id="能带图计算结果"><a href="#能带图计算结果" class="headerlink" title="能带图计算结果"></a>能带图计算结果</h3><p><img src="/image/2D_InSe-band_qe.png" alt="2D_InSe-band_qe"></p>]]></content>
      
      
      <categories>
          
          <category> Quantum ESPRESSO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PWSCF </tag>
            
            <tag> vc-relax </tag>
            
            <tag> band structure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vasp计算声子谱</title>
      <link href="/2019/10/11/vasp-phonon/"/>
      <url>/2019/10/11/vasp-phonon/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;在第一性原理计算过程中考察体系稳定性是经常遇到的一个问题，也是大部分审稿人容易提问的地方；通常，使用声子谱研究体系的动力学稳定性，使用分子动力学研究体系的热稳定性；另外，可以借助于一些其他方法进一步说明体系的稳定性，例如研究钙钛矿体系时通过离子半径判断稳定性，研究异质结时通过计算结合能判断稳定性等。</p><h2 id="声子谱计算方法"><a href="#声子谱计算方法" class="headerlink" title="声子谱计算方法"></a>声子谱计算方法</h2><p>&emsp;&emsp;声子谱的计算主要有两种方法，一种是直接法，另一种是微扰密度泛函方法（DFPT）。<br>&emsp;&emsp;直接法，或称frozen-phonon方法，是通过在优化后的平衡结构中引入原子位移，计算作用在原子上的Hellmann-Feynman力，进而由动力学矩阵算出声子色散曲线。直接法的缺陷在于它要求声子波矢与原胞边界(super size)正交，或者原胞足够大使得Hellmann-Feynman力在原胞外可以忽略不计。这使得对于复杂系统，如对称性高的晶体、合金、超晶格等材料需要采用超原胞。超原胞的采用使计算量急剧增加，极大的限制了该方法的使用。<br>&emsp;&emsp;1987年，Baroni、Giannozzi和Testa提出了DFPT方法。DFPT通过计算系统能量对外场微扰的响应来求出晶格动力学性质。该方法最大的优势在于它不限定微扰的波矢与原胞边界正交，不需要超原胞也可以对任意波矢求解。Castep、Vasp等采用的是一种linear response theory 的方法（或者称为 density perturbation functional theory，DFPT），直接计算出原子的移动而导致的势场变化，再进一步构造出动力学矩阵。进而计算出声子谱。</p><h2 id="计算环境的搭建"><a href="#计算环境的搭建" class="headerlink" title="计算环境的搭建"></a>计算环境的搭建</h2><p>&emsp;&emsp;计算所用的软件为VASP与phonopy code。</p><h3 id="phonopy-code编译"><a href="#phonopy-code编译" class="headerlink" title="phonopy code编译"></a>phonopy code编译</h3><ul><li><p>搭建Anaconda环境，下载链接，点<a href="https://www.anaconda.com/distribution/" target="_blank" rel="noopener">这里</a></p></li><li><p>安装Anaconda</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">bash</span> Anaconda3-2019.07-Linux-x86_64.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>写入环境变量</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">echo</span> <span class="token string">"export PATH=/……/anaconda3/bin:<span class="token variable">$PATH</span>"</span> <span class="token operator">>></span> ~/.bashrc<span class="token function">source</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><font color="blue"> Note: /……/表示自己服务器路径 </font></p></li><li><p>下载phonopy code，点<a href="https://pypi.org/project/phonopy/2.2.0/#files" target="_blank" rel="noopener">这里</a></p></li><li><p>编译phonopy code</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">tar</span> zxvf phonopy-2.2.0.tar.gz<span class="token function">cd</span> phonopy-2.2.0python3 setup.py <span class="token function">install</span> --user<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>写入phonopy的环境变量</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token keyword">echo</span> <span class="token string">"export PATH=/……/phonopy-2.2.0/build/scripts-3.7:<span class="token variable">$PATH</span>"</span> <span class="token operator">>></span> ~/.bashrc<span class="token function">source</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><font color="blue"> Note: /……/表示自己服务器路径 </font></p></li><li><p>检查phonopy code是否安装完成</p><pre class="line-numbers language-bash"><code class="language-bash">$ phonopy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/image/phonopy.png" alt="phonopy"></p></li></ul><h2 id="声子谱计算步骤"><a href="#声子谱计算步骤" class="headerlink" title="声子谱计算步骤"></a>声子谱计算步骤</h2><h3 id="结构优化"><a href="#结构优化" class="headerlink" title="结构优化"></a>结构优化</h3><p>&emsp;&emsp;声子谱的计算需要对原胞结构做高精度的充分优化，否则很容易出现虚频；下面以二维InSe为例，详细说明声子谱的计算步骤。</p><h4 id="INCAR"><a href="#INCAR" class="headerlink" title="INCAR"></a>INCAR</h4><pre class="line-numbers language-bash"><code class="language-bash">   SYSTEM <span class="token operator">=</span> 2D_InSe   ISTART <span class="token operator">=</span> 0   NWRITE <span class="token operator">=</span> 2      PREC   <span class="token operator">=</span> Accurate   ENCUT  <span class="token operator">=</span> 500   GGA    <span class="token operator">=</span> PE   NSW    <span class="token operator">=</span> 200   ISIF   <span class="token operator">=</span> 3   ISYM   <span class="token operator">=</span> 2   NBLOCK <span class="token operator">=</span> 1      KBLOCK <span class="token operator">=</span> 1   IBRION <span class="token operator">=</span> 2   NELM   <span class="token operator">=</span> 80        EDIFF  <span class="token operator">=</span> 1E-08   EDIFFG <span class="token operator">=</span> -0.001    ALGO   <span class="token operator">=</span> Normal   LDIAG  <span class="token operator">=</span> .TRUE.   LREAL  <span class="token operator">=</span> .FALSE.   ISMEAR <span class="token operator">=</span> 0   SIGMA  <span class="token operator">=</span> 0.02   ICHARG <span class="token operator">=</span> 2   LPLANE <span class="token operator">=</span> .TRUE.   NPAR   <span class="token operator">=</span> 4   LSCALU <span class="token operator">=</span> .FALSE.   NSIM   <span class="token operator">=</span> 4   LWAVE  <span class="token operator">=</span> .FALSE.   LCHARG <span class="token operator">=</span> .FALSE.   ICORELEVEL <span class="token operator">=</span>  1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="POSCAR"><a href="#POSCAR" class="headerlink" title="POSCAR"></a>POSCAR</h4><pre class="line-numbers language-bash"><code class="language-bash">2D_InSe1.0        4.0836000443         0.0000000000         0.0000000000       -2.0418000221         3.5365013772         0.0000000000        0.0000000000         0.0000000000        25.3775005341   In   Se    2    2Direct     0.666670026         0.333330010         0.589979992     0.666670026         0.333330010         0.478789968     0.333329978         0.666669998         0.428439986     0.333329978         0.666669998         0.640340007<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="KPOINTS"><a href="#KPOINTS" class="headerlink" title="KPOINTS"></a>KPOINTS</h4><pre class="line-numbers language-bash"><code class="language-bash">Monkhorst Pack of Gamma centered0Gamma 13    13    1 0.0   0.0   0.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="POTCAR"><a href="#POTCAR" class="headerlink" title="POTCAR"></a>POTCAR</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cat</span> In_d/POTCAR Se/POTCAR <span class="token operator">></span> POTCAR<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="OPTCELL"><a href="#OPTCELL" class="headerlink" title="OPTCELL"></a>OPTCELL</h4><pre class="line-numbers language-bash"><code class="language-bash">100110000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="通过phonopy-code建立超胞"><a href="#通过phonopy-code建立超胞" class="headerlink" title="通过phonopy code建立超胞"></a>通过phonopy code建立超胞</h3><ul><li><p>将优化后的结构文件拷贝为POSCAR</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cp</span> CONTCAR POSCAR<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>建立超胞</p><pre class="line-numbers language-bash"><code class="language-bash">$ phonopy -d --dim<span class="token operator">=</span><span class="token string">"4 4 1"</span>$ <span class="token function">ls</span>phonopy_disp.yaml  POSCAR-002  POSCAR-005  POSCAR-008  POSCAR-011  POSCAR-014  SPOSCARPOSCAR             POSCAR-003  POSCAR-006  POSCAR-009  POSCAR-012  POSCAR-015POSCAR-001         POSCAR-004  POSCAR-007  POSCAR-010  POSCAR-013  POSCAR-016<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="red"> Note: 建立超胞之前，一定要在MS中找好对称性，否则会增加大量的计算量 </font></p></li><li><p>POSCAR和SPOSCAR的重命名</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cp</span> POSCAR POSCAR-unitcell<span class="token function">cp</span> SPOSCAR POSCAR<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="计算力学Hessian矩阵"><a href="#计算力学Hessian矩阵" class="headerlink" title="计算力学Hessian矩阵"></a>计算力学Hessian矩阵</h3><p>&emsp;&emsp;力学Hessian矩阵可由VASP计算得到，该矩阵保存于VASP的输出文件vasprun.xml中；计算过程中KPOINTS文件根据服务器计算能力，可适当增加，POTCAR文件无需改变，INCAR文件设置如下：</p></li><li><p>INCAR</p><pre class="line-numbers language-bash"><code class="language-bash"> SYSTEM <span class="token operator">=</span> 2D_InSe ISTART <span class="token operator">=</span> 0 NWRITE <span class="token operator">=</span> 2 IBRION <span class="token operator">=</span> 8  NSW    <span class="token operator">=</span> 1 IALGO  <span class="token operator">=</span> 38 NELM   <span class="token operator">=</span> 200 EDIFF  <span class="token operator">=</span> 1E-07 EDIFFG <span class="token operator">=</span> -0.001 ISMEAR <span class="token operator">=</span> 0 SIGMA  <span class="token operator">=</span> 0.02 ENCUT  <span class="token operator">=</span> 500 PREC   <span class="token operator">=</span> Accurate LREAL  <span class="token operator">=</span> .FALSE. LWAVE  <span class="token operator">=</span> .FALSE. LCHARG <span class="token operator">=</span> .FALSE. ADDGRID <span class="token operator">=</span> .TRUE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3></li><li><p>根据vasprun.xml文件生成力学文件FORCE_CONSTRAINS</p><pre class="line-numbers language-bash"><code class="language-bash">phonopy --fc vasprun.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>编辑band.conf文件，该文件给出了高对称点路径的信息</p><pre class="line-numbers language-bash"><code class="language-bash">ATOM_NAME <span class="token operator">=</span> In SeDIM <span class="token operator">=</span> 4 4 1BAND <span class="token operator">=</span> 0.5 0.0 0.0  0.0 0.0 0.0  0.333333 0.333333 0.0  0.5 0.0 0.0FORCE_CONSTANTS <span class="token operator">=</span> READ<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><font color="blue"> Note:<br>line 1：元素名称，顺序与POSCAR保持一致<br>line 2：建立超胞的大小<br>line 3：高对称点路径，每组高对称点之间用两个空格隔开<br>line 4：表示读取力常数文件FORCE_CONSTANTS</font></p></li><li><p>生成band.yaml文件</p><pre class="line-numbers language-bash"><code class="language-bash">phonopy --dim<span class="token operator">=</span><span class="token string">"4 4 1"</span> -c POSCAR-unitcell band.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color="blue"> Note：4 4 1为建立超胞的大小 </font></p></li><li><p>得到声子谱数据文件PBAND.dat文件</p><pre class="line-numbers language-bash"><code class="language-bash">phonopy-bandplot  --gnuplot<span class="token operator">></span> PBAND.dat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color="blue"> Note: 高对称点标注说明：phonopy软件默认在两个高对称点之间打点51个，且在PBAND.dat中每组高对称点数据以一个空行分割，据此即可得到完整的声子谱图像 </font></p></li><li><p>计算结果<br><img src="/image/InSe-our-calculation.jpg" alt="InSe-our-Claculation"></p></li><li><p>文献结果<br><img src="/image/InSe-Reference.png" alt="InSe-Reference"></p></li></ul><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>&emsp;&emsp;如果计算完的声子谱其他地方都好，就是在Γ点有一点点虚频，那么这个材料很可能是稳定的，只是你优化做得不够好，进一步提高优化的精度可消除这一点点虚频。<br>&emsp;&emsp;对于二维材料，如果在Γ点出现很小的虚频，基本可以认为这个材料是稳定的，大部分二维材料都会有此现象；尤其是VASP结合phonopy code计算二维材料的声子谱在Γ点更是容易出现虚频；使用Quantum-ESPRESSO的PWSCF和PH模块计算声子谱对于内存的需求较小一些，且对于二维材料的声子谱计算更友好一些，后期会详细介绍Quantum-ESPRESSO计算声子谱的具体步骤。</p>]]></content>
      
      
      <categories>
          
          <category> vasp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phonon spectrum </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VASP计算能带和态密度</title>
      <link href="/2019/10/04/vasp-band-structure-dos/"/>
      <url>/2019/10/04/vasp-band-structure-dos/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;本文以二维InSe材料为例，详细介绍了二维材料的结构优化、静态自洽，能带计算和态密度计算的计算过程和注意事项。<br>&emsp;&emsp;为了对二维材料的晶格常数进行充分优化，且不对真空层厚度做优化，需要修改vasp安装包～/vasp.5.4.4/src/constr_cell_relax.F源文件，修改的具体说明可以参考清华大学刘锦程博士的<a href="http://blog.wangruixing.cn/2019/05/05/constr/" target="_blank" rel="noopener">博文</a>，编译时直接覆盖掉原文件即可，新的constr_cell_relax.F文件如下：</p><pre><code>!-----------------------------------------------------------------------!! At present, VASP does not allow to relax the cellshape selectively! i.e. for instance only cell relaxation in x direction.! To be more precisse, this behaviour can not be achived via the INCAR! or POSCAR file.! However, it is possible to set selected components of the stress tensor! to zero.! The most conveninent position to do this is the routines ! CONSTR_CELL_RELAX  (constraint cell relaxation).! FCELL contains the forces on the basis vectors.! These forces are used to modify the basis vectors according! to the following equations:!!      A_OLD(1:3,1:3)=A(1:3,1:3) ! F90 style !      DO J=1,3!      DO I=1,3!      DO K=1,3!        A(I,J)=A(I,J) + FCELL(I,K)*A_OLD(K,J)*STEP_SIZE!      ENDDO!      ENDDO!      ENDDO! where A holds the basis vectors (in cartesian coordinates).!!-----------------------------------------------------------------------      SUBROUTINE CONSTR_CELL_RELAX(FCELL)      USE prec      REAL(q) FCELL(3,3)!     just one simple example!     relaxation in x directions only!      SAVE=FCELL(1,1)!      FCELL=0   ! F90 style: set the whole array to zero!      FCELL(1,1)=SAVE!     relaxation in z direction only!      SAVE=FCELL(3,3)!      FCELL=0   ! F90 style: set the whole array to zero!      FCELL(3,3)=SAVE      LOGICAL FILFLG      INTEGER ICELL(3,3)      INQUIRE(FILE=&#39;OPTCELL&#39;,EXIST=FILFLG)      IF (FILFLG) THEN         OPEN(67,FILE=&#39;OPTCELL&#39;,FORM=&#39;FORMATTED&#39;,STATUS=&#39;OLD&#39;)         DO J=1,3            READ(67,&quot;(3I1)&quot;) (ICELL(I,J),I=1,3)         ENDDO         CLOSE(67)         DO J=1,3         DO I=1,3            IF (ICELL(I,J)==0) FCELL(I,J)=0.0         ENDDO         ENDDO      ENDIF      RETURN      END SUBROUTINE</code></pre><p>使用方法：在INCAR中设置ISIF = 3，同时在计算目录下新建OPTCELL文件，该文件为3$\times$3矩阵，在对称性满足的情况下可以对体系的9个自由度做弛豫。例如对于正交的二维材料，OPTCELL文件可写为：</p><pre><code>100  # 优化x方向010  # 优化y方向000  # 不优化z方向</code></pre><h2 id="结构优化"><a href="#结构优化" class="headerlink" title="结构优化"></a>结构优化</h2><h3 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h3><h4 id="INCAR"><a href="#INCAR" class="headerlink" title="INCAR"></a>INCAR</h4><pre><code>   SYSTEM = 2D_InSe   ISTART = 0   NWRITE = 2      PREC   = Accurate   ENCUT  = 500   GGA    = PE   NSW    = 200   ISIF   = 3   ISYM   = 2   NBLOCK = 1      KBLOCK = 1   IBRION = 2   NELM   = 80        EDIFF  = 1E-05   EDIFFG = -0.01    ALGO   = Normal   LDIAG  = .TRUE.   LREAL  = .FALSE.   ISMEAR = 0   SIGMA  = 0.02   ICHARG = 2   LPLANE = .TRUE.   NPAR   = 4   LSCALU = .FALSE.   NSIM   = 4   LWAVE  = .FALSE.   LCHARG = .FALSE.   ICORELEVEL =  1</code></pre><h4 id="POSCAR"><a href="#POSCAR" class="headerlink" title="POSCAR"></a>POSCAR</h4><pre><code>2D_InSe1.0        4.0836000443         0.0000000000         0.0000000000       -2.0418000221         3.5365013772         0.0000000000        0.0000000000         0.0000000000        25.3775005341   In   Se    2    2Direct     0.666670026         0.333330010         0.589979992     0.666670026         0.333330010         0.478789968     0.333329978         0.666669998         0.428439986     0.333329978         0.666669998         0.640340007</code></pre><h4 id="KPOINTS"><a href="#KPOINTS" class="headerlink" title="KPOINTS"></a>KPOINTS</h4><pre><code>Monkhorst Pack of Gamma centered0Gamma 13    13    1 0.0   0.0   0.0</code></pre><h4 id="POTCAR"><a href="#POTCAR" class="headerlink" title="POTCAR"></a>POTCAR</h4><pre><code>cat In_d/POTCAR Se/POTCAR &gt; POTCAR</code></pre><h4 id="OPTCELL"><a href="#OPTCELL" class="headerlink" title="OPTCELL"></a>OPTCELL</h4><pre><code>100110000</code></pre><h3 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h3><ul><li>判断是否达到收敛精度<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">grep</span> <span class="token string">"reached required accuracy"</span> log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>reached required accuracy - stopping structural energy minimisation</code></pre></li><li>产看体系总能<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">grep</span> TOTEN OUTCAR <span class="token operator">|</span> <span class="token function">tail</span> -n 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre><code>free  energy   TOTEN  =       -14.21463638 eV</code></pre></li><li>对比优化前后晶格常数的变化</li></ul><p>—优化前—</p><pre><code>4.0836000443         0.0000000000         0.0000000000-2.0418000221         3.5365013772         0.00000000000.0000000000         0.0000000000        25.3775005341</code></pre><p>—优化后—</p><pre><code>4.0830388054550770    0.0000000000000000    0.0000000000000000-2.0415069539304227    3.5360297046777429    0.00000000000000000.0000000000000000    0.0000000000000000   25.3775005341000011</code></pre><p><font color="blue"> 分析：对比发现优化后a轴和b轴方向的晶格常数略微发生了变化，而c轴方向的真空层厚度并没有发生变化，说明使用固定基矢的方法是可以对二维材料做充分优化的 </font></p><ul><li>现使用只优化原子位置、不优化晶格常数（ISIF=2）的方法对二维InSe重新进行优化，对比体系总能变化情况</li></ul><p>—ISIF=3—</p><pre><code>free  energy   TOTEN  =       -14.21463638 eV</code></pre><p>—ISIF=2—</p><pre><code>free  energy   TOTEN  =       -14.21464001 eV</code></pre><p><font color="blue"> 分析：对比发现，两个总能几乎没有差别，说明对于初始结构比较好的体系来说，两种优化方式基本没有差别；但是对于初始结构不是很好的体系，这两种优化方法应该是有差别的，本人推荐使用固定基矢的方法充分优化二维材料晶格；另外，对于材料施加应变，且需要考虑泊松效应时，固定基矢优化是非常好的方式 </font></p><h2 id="截断能和k网格点收敛性测试"><a href="#截断能和k网格点收敛性测试" class="headerlink" title="截断能和k网格点收敛性测试"></a>截断能和k网格点收敛性测试</h2><p>&emsp;&emsp;在第一性原理计算过程中，截断能和k网格点的选取非常重要，选的太小容易造成体系没有达到最低能量状态，选的太大会耗费大量计算资源，尤其对于计算资源比较紧张的课题组，大量浪费计算资源会引起同学和导师的不满。在实际计算中对于截断能和k点选取的方法，一是参考已发表的论文值，这样有一定的说服力；二是需要自己去测试，一般保证体系总能变化范围在0.01~0.02 eV之间，就可认为截断能和k点达到了我们的计算要求。</p><h3 id="二维InSe的截断能测试"><a href="#二维InSe的截断能测试" class="headerlink" title="二维InSe的截断能测试"></a>二维InSe的截断能测试</h3><p>&emsp;&emsp;首先对二维InSe的截断能做测试，测试范围是400-900 eV，能量间隔为50 eV。</p><h4 id="输入文件-1"><a href="#输入文件-1" class="headerlink" title="输入文件"></a>输入文件</h4><p>&emsp;&emsp;在这一系列计算中，只需对INCAR文件做修改，其他文件无需修改；且计算完成后自动将体系总能随截断能的变化写入toten_vs_encut.dat文件，只需画图即可。实现方法是将INCAR以及一系列操作命令写入提交任务的脚本文件中。计算文件夹中包括：</p><pre><code>KPOINTS POSCAR OPTCELL POTCAR vasp5.4.4.job</code></pre><p>—vasp5.4.4.job—</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment" spellcheck="true">#PBS -N 2D_InSe</span><span class="token comment" spellcheck="true">#PBS -l nodes=1:ppn=16</span><span class="token comment" spellcheck="true">#PBS -m abe</span><span class="token comment" spellcheck="true">#PBS -j n</span><span class="token comment" spellcheck="true">##PBS -o job.log</span><span class="token comment" spellcheck="true">##PBS -e job.err</span><span class="token comment" spellcheck="true">#PBS -l walltime=250:00:00</span><span class="token function">cd</span> <span class="token variable">$PBS_O_WORKDIR</span><span class="token function">touch</span> toten_vs_encut.dat<span class="token keyword">for</span> ENCUT <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">seq</span> 400 50 800<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span><span class="token comment" spellcheck="true"># generate INCAR</span><span class="token function">cat</span> <span class="token operator">></span> INCAR <span class="token operator">&lt;&lt;</span> <span class="token string">EOFSYSTEM = 2D_InSeISTART = 0NWRITE = 2   PREC   = AccurateENCUT  = <span class="token variable">$ENCUT</span>GGA    = PE NSW    = 200ISIF   = 3ISYM   = 2NBLOCK = 1   KBLOCK = 1IBRION = 2NELM   = 80   EDIFF  = 1E-05EDIFFG = -0.01 ALGO   = NormalLDIAG  = .TRUE.LREAL  = .FALSE.ISMEAR = 0SIGMA  = 0.02ICHARG = 2LPLANE = .TRUE.NPAR   = 4LSCALU = .FALSE.NSIM   = 4LWAVE  = .FALSE.LCHARG = .FALSE.ICORELEVEL =  1EOF</span><span class="token function">date</span> <span class="token string">"+01 Today's date is: %D. The time execution %T"</span> <span class="token operator">>></span> time.infompirun -np 16 /your direction/vasp.5.4.4/bin/vasp_std  <span class="token operator">></span> log<span class="token function">date</span> <span class="token string">"+02 Today's date is: %D. The time finish %T"</span> <span class="token operator">>></span> time.info<span class="token keyword">echo</span> -e <span class="token string">"<span class="token variable">$ENCUT</span> \c"</span> <span class="token operator">>></span> toten_vs_encut.dat<span class="token function">grep</span> TOTEN OUTCAR <span class="token operator">|</span> <span class="token function">tail</span> -n 1 <span class="token operator">|</span> \      <span class="token function">awk</span> <span class="token string">'/TOTEN/{print <span class="token variable"><span class="token variable">$(</span>NF-1<span class="token variable">)</span></span>}'</span> <span class="token operator">>></span> toten_vs_encut.dat<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="计算结果"><a href="#计算结果" class="headerlink" title="计算结果"></a>计算结果</h4><p>—toten_vs_encut.dat—</p><pre><code>400 -14.21435689450 -14.21513620500 -14.21463059550 -14.21432926600 -14.21451881650 -14.21462419700 -14.21461680750 -14.21457254800 -14.21462319</code></pre><p><img src="/image/encut.png" alt="encut"><br>—encut.gnu—</p><pre><code>set term post eps color enh solid datafile=&#39;toten_vs_encut.dat&#39;set output &#39;encut.eps&#39;set title &#39;toten\_vs\_encut&#39; font &#39;Times_New_Roman,24&#39;set xlabel &#39;encut&#39; font &#39;Times_New_Roman,18&#39;set ylabel &#39;TOTEN&#39; font &#39;Times_New_Roman,18&#39;plot datafile  with linespoints lt 7 lw 4 pt 9 pointsize 2set output</code></pre><h3 id="二维InSe的k点测试"><a href="#二维InSe的k点测试" class="headerlink" title="二维InSe的k点测试"></a>二维InSe的k点测试</h3><h4 id="输入文件-2"><a href="#输入文件-2" class="headerlink" title="输入文件"></a>输入文件</h4><p>&emsp;&emsp;在这一系列计算中，只需对KPOINTS文件做修改，其他文件无需修改；且计算完成后自动将体系总能随k点的变化写入toten_vs_kpoints.dat文件，只需画图即可。实现方法是将kpoints以及一系列操作命令写入提交任务的脚本文件中。计算文件夹中包括：</p><pre><code>INCAR POSCAR OPTCELL POTCAR vasp5.4.4.job</code></pre><p>—vasp5.4.4.job—</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment" spellcheck="true">#PBS -N 2D_InSe</span><span class="token comment" spellcheck="true">#PBS -l nodes=1:ppn=16</span><span class="token comment" spellcheck="true">#PBS -m abe</span><span class="token comment" spellcheck="true">#PBS -j n</span><span class="token comment" spellcheck="true">##PBS -o job.log</span><span class="token comment" spellcheck="true">##PBS -e job.err</span><span class="token comment" spellcheck="true">#PBS -l walltime=250:00:00</span><span class="token function">cd</span> <span class="token variable">$PBS_O_WORKDIR</span><span class="token function">touch</span> toten_vs_kpoints.dat<span class="token keyword">for</span> KPOINTS <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">seq</span> 5 2 29<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span><span class="token comment" spellcheck="true"># generate KPOINTS</span><span class="token function">cat</span> <span class="token operator">></span> KPOINTS <span class="token operator">&lt;&lt;</span> <span class="token string">EOFMonkhorst Pack of Gamma centered0Gamma <span class="token variable">$KPOINTS</span>    <span class="token variable">$KPOINTS</span>    1 0.0   0.0   0.0EOF</span><span class="token function">date</span> <span class="token string">"+01 Today's date is: %D. The time execution %T"</span> <span class="token operator">>></span> time.infompirun -np 16 /your direction/vasp.5.4.4/bin/vasp_std  <span class="token operator">></span> log<span class="token function">date</span> <span class="token string">"+02 Today's date is: %D. The time finish %T"</span> <span class="token operator">>></span> time.info<span class="token keyword">echo</span> -e <span class="token string">"<span class="token variable">$KPOINTS</span> \c"</span> <span class="token operator">>></span> toten_vs_kpoints.dat<span class="token function">grep</span> TOTEN OUTCAR <span class="token operator">|</span> <span class="token function">tail</span> -n 1 <span class="token operator">|</span> \      <span class="token function">awk</span> <span class="token string">'/TOTEN/{print <span class="token variable"><span class="token variable">$(</span>NF-1<span class="token variable">)</span></span>}'</span> <span class="token operator">>></span> toten_vs_kpoints.dat<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="计算结果-1"><a href="#计算结果-1" class="headerlink" title="计算结果"></a>计算结果</h4><p>—toten_vs_kpoints.dat—</p><pre><code>5 -14.196027737 -14.212665569 -14.2143946211 -14.2146125713 -14.2146363815 -14.2146440517 -14.2146483119 -14.2146482121 -14.2146474123 -14.2146505325 -14.2146475227 -14.2146472029 -14.21464820</code></pre><p><img src="/image/kpoints.png" alt="kpoints"><br>—kpoints.gnu—</p><pre><code>set term post eps color enh solid datafile=&#39;toten_vs_kpoints.dat&#39;set output &#39;kpoints.eps&#39;set title &#39;toten\_vs\_kpoints&#39; font &#39;Times_New_Roman,24&#39;set xlabel &#39;kpoints&#39; font &#39;Times_New_Roman,18&#39;set ylabel &#39;TOTEN&#39; font &#39;Times_New_Roman,18&#39;plot datafile  with linespoints lt 7 lw 4 pt 9 pointsize 2set output</code></pre><h3 id="整体分析"><a href="#整体分析" class="headerlink" title="整体分析"></a>整体分析</h3><p>&emsp;&emsp;整体分析发现，对于二维InSe的截断能和k点取值分别为500 eV和13$\times$13$\times$1已经足够精确;与<a href="https://pubs.rsc.org/en/content/articlelanding/2018/NR/C8NR03172J#!divAbstract" target="_blank" rel="noopener">Meng Wu</a>等人报道的计算细节基本一致，说明测试是合理的。</p><h2 id="静态自洽"><a href="#静态自洽" class="headerlink" title="静态自洽"></a>静态自洽</h2><h3 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h3><p>&emsp;&emsp;VASP做静态自洽的目的主要是为了得到好的电子密度和波函数文件，为了使后续的性质计算可以读取电子密度和波函数，进而增加收敛速度。</p><h3 id="输入文件-3"><a href="#输入文件-3" class="headerlink" title="输入文件"></a>输入文件</h3><p>—INCAR—</p><pre><code>SYSTEM = 2D_InSeISTART = 0NWRITE = 2   PREC   = AccurateENCUT  = 500GGA    = PE NSW    = 0ISIF   = 2ISYM   = 2NBLOCK = 1   KBLOCK = 1IBRION = -1 NELM   = 80   EDIFF  = 1E-05EDIFFG = -0.01 ALGO   = NormalLDIAG  = .TRUE.LREAL  = .FALSE.ISMEAR = 0SIGMA  = 0.02ICHARG = 2LPLANE = .TRUE.NPAR   = 4LSCALU = .FALSE.NSIM   = 4LWAVE  = .TRUE.LCHARG = .TRUE.ICORELEVEL =  1</code></pre><p>—POSCAR—<br>将优化完后的CONTCAR直接拷贝为POSCAR即可<br>—POTCAR—<br>与优化时的POTCAR文件相同<br>—KPOINTS—<br>自洽计算要求有密的k网格点，在计算条件允许的情况下要求自洽的k网格点大致为优化时的2倍左右。</p><pre><code>Monkhorst Pack of Gamma centered0Gamma 25    25    1 0.0   0.0   0.0</code></pre><h2 id="态密度"><a href="#态密度" class="headerlink" title="态密度"></a>态密度</h2><h3 id="前言-2"><a href="#前言-2" class="headerlink" title="前言"></a>前言</h3><p>&emsp;&emsp;态密度是固体物理中一个非常重要的概念，在实验上可利用X射线发射光谱方法测定，在理论上可使用第一性原理计算软件计算得出；可以用于分析材料材料能隙特性、体系成键的特性、体系的自旋极化、相邻原子之间的作用强弱、电子比热和顺磁磁化率等性质。</p><h3 id="输入文件-4"><a href="#输入文件-4" class="headerlink" title="输入文件"></a>输入文件</h3><p>—INCAR—</p><pre><code>SYSTEM = 2D_InSeISTART = 1NWRITE = 2PREC   = AccurateENCUT  = 500GGA    = PENSW    = 0ISIF   = 2ISYM   = 2NBLOCK = 1KBLOCK = 1IBRION = -1NELM   = 80EDIFF  = 1E-05EDIFFG = -0.01ALGO   = NormalLDIAG  = .TRUE.LREAL  = .FALSE.ISMEAR = -5SIGMA  = 0.02ICHARG = 11LPLANE = .TRUE.NPAR   = 4LSCALU = .FALSE.NSIM   = 4LWAVE  = .FALSE.LCHARG = .FALSE.ICORELEVEL =  1LORBIT = 11  # output PDOS</code></pre><p>—KPOINTS—<br>DOS计算要求非常密集的k网格点，至少要求与自洽时k网格点相同，或可适当增加。</p><pre><code>Monkhorst Pack of Gamma centered0Gamma 29    29    1 0.0   0.0   0.0</code></pre><p>POSCAR、POTCAR文件与自洽时相同；并保证在计算目录下有自洽时产生的CHGCAR和WAVECAR文件，以供读取。</p><h3 id="结果分析-1"><a href="#结果分析-1" class="headerlink" title="结果分析"></a>结果分析</h3><h4 id="总的态密度"><a href="#总的态密度" class="headerlink" title="总的态密度"></a>总的态密度</h4><p><img src="/image/TDOS.png" alt="TDOS"></p><h4 id="局域态密度"><a href="#局域态密度" class="headerlink" title="局域态密度"></a>局域态密度</h4><p><img src="/image/LDOS.png" alt="LDOS"></p><h4 id="Se的分波态密度"><a href="#Se的分波态密度" class="headerlink" title="Se的分波态密度"></a>Se的分波态密度</h4><p><img src="/image/Se_PDOS.png" alt="Se_PDOS"></p><h4 id="In的分波态密度"><a href="#In的分波态密度" class="headerlink" title="In的分波态密度"></a>In的分波态密度</h4><p><img src="/image/In_PDOS.png" alt="In_PDOS"></p><h2 id="能带"><a href="#能带" class="headerlink" title="能带"></a>能带</h2><h3 id="前言-3"><a href="#前言-3" class="headerlink" title="前言"></a>前言</h3><p>&emsp;&emsp;能带理论是研究材料性质的重要方法，现利用VASP软件计算二维InSe的能带。</p><h3 id="输入文件-5"><a href="#输入文件-5" class="headerlink" title="输入文件"></a>输入文件</h3><p>—INCAR—</p><pre><code>SYSTEM = 2D_InSeISTART = 1NWRITE = 2PREC   = AccurateENCUT  = 500GGA    = PENSW    = 0ISIF   = 2ISYM   = 2NBLOCK = 1KBLOCK = 1IBRION = -1NELM   = 80EDIFF  = 1E-05EDIFFG = -0.01ALGO   = NormalLDIAG  = .TRUE.LREAL  = .FALSE.ISMEAR = 0SIGMA  = 0.02ICHARG = 11LPLANE = .TRUE.NPAR   = 4LSCALU = .FALSE.NSIM   = 4LWAVE  = .FALSE.LCHARG = .FALSE.ICORELEVEL =  1LORBIT = 11</code></pre><p>—KPOINTS—</p><pre class="line-numbers language-bash"><code class="language-bash">k-points along high symmetry lines  100Line-modeRec   0.3333333  0.3333333 0       <span class="token operator">!</span>K   0          0         0       <span class="token operator">!</span>GAMMA   0          0         0       <span class="token operator">!</span>GAMMA   0.5        0         0       <span class="token operator">!</span>M   0.5        0         0       <span class="token operator">!</span>M   0.3333333  0.3333333 0       <span class="token operator">!</span>K<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>POSCAR、POTCAR文件与自洽时相同；并保证在计算目录下有自洽时产生的CHGCAR和WAVECAR文件，以供读取。</p><h3 id="结果分析-2"><a href="#结果分析-2" class="headerlink" title="结果分析"></a>结果分析</h3><p>二维InSe能带<br><img src="/image/band.png" alt="band.png"><br>漂亮的二维InSe能带<br><img src="/image/new_band.png" alt="band.png"><br>二维InSe按原子投影的能带图<br><img src="/image/PBAND.png" alt="PBAND.png"><br>二维InSe按原子的$s$、$p$、$d$轨道投影的能带图<br>In原子<br><img src="/image/PBANDInspd.png" alt="PBANDInspd.png"><br>Se原子<br><img src="/image/PBANDSespd.png" alt="PBANDSespd.png"><br>InSe<br><img src="/image/PBNDSeInspd.png" alt="PBNDSeInspd.png"><br>二维InSe按原子的$s$、$p_x$、$p_y$、$p_z$轨道投影的能带图<br>In原子<br><img src="/image/PBANDInspxpypz.png" alt="PBANDInspxpypz.png"><br><img src="/image/PBANDIn.png" alt="PBANDInspxpypz.png"><br>Se原子<br><img src="/image/PBANDSespxpypz.png" alt="PBANDSespxpypz.png"><br><img src="/image/PBANDSe.png" alt="PBANDSespxpypz.png"></p><p><font color="blue"> Note：通过做投影能带图，与分波态密度做对比发现，对于带边位置的贡献是一致的 </font></p>]]></content>
      
      
      <categories>
          
          <category> vasp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> band structure </tag>
            
            <tag> density of states </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vasp_kpoints文件设置详解</title>
      <link href="/2019/09/27/vasp-kpoints/"/>
      <url>/2019/09/27/vasp-kpoints/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;kpoints文件是vasp计算过程中必不可少的输入文件，虽然从vasp.5.2.2版本后可以在INCAR中设置简单的KPOINTS信息，但是不推荐在INCAR中直接设置，原因是INCAR中无法设置复杂的KPOINTS信息。合理的kpoints设置不仅可以增加计算效率，而且可以得到合理的计算结果，下面对kpoints的一般格式和设置方法做一个简单的介绍，并且给出自身计算过程中的经验总结。</p><h2 id="kpoints文件简述"><a href="#kpoints文件简述" class="headerlink" title="kpoints文件简述"></a>kpoints文件简述</h2><p>&emsp;&emsp;kpoints文件可以分为两个大类，一是vasp程序自动分割产生k点，二是通过手动输入指定k点信息。在实际计算过程中，除能带计算时手动指定k点信息外，其他计算一律推荐使用自动产生k点方法。</p><h2 id="自动产生k点的kpoints文件设置"><a href="#自动产生k点的kpoints文件设置" class="headerlink" title="自动产生k点的kpoints文件设置"></a>自动产生k点的kpoints文件设置</h2><p>&emsp;&emsp;自动产生k点主要用于结构优化、自洽计算、DOS计算、光学性质计算等，基本格式如下：<br>情形一：</p><pre class="line-numbers language-bash"><code class="language-bash">Automatic k-mesh generation0Gamma4    4    4 0.0  0.0  0.0 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="blue">说明：<br>line 1：注释行，没有实际意义，但是不能没有<br>line 2：表示自动生成k点网格<br>line 3：第三行可用的选项有Gamma（vasp程序只识别首字母，即G或g都可，下同），表示按M-P方法以Γ点为中心自动产生k点；选项Monkhorst-pack表示按原始Monkhorst-Pack方法产生k点网格。<br>line 4：确定沿倒格子各方向（x，y，z）上K网格点的数目<br>line 5：对所按网格分割产生的k点进行平移的量，此处不平移。 </font><br>情形二：</p><pre class="line-numbers language-bash"><code class="language-bash">Automatic mesh0Auto10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><font color="blue">说明：<br>line 1：注释行，没有实际意义，但是不能没有<br>line 2：表示自动生成k点网格<br>line 3：表示完全自动产生k点<br>line 4：表示a linear k-point density of 10 $\overset{\circ}{A}$，其含义为每1/$\overset{\circ}{A}$上的k点数 </font></p><h2 id="手动指定k点的kpoints文件设置"><a href="#手动指定k点的kpoints文件设置" class="headerlink" title="手动指定k点的kpoints文件设置"></a>手动指定k点的kpoints文件设置</h2><p>&emsp;&emsp;手动指定k点的情形主要用于能带计算，一般格式为：</p><pre class="line-numbers language-bash"><code class="language-bash">k-points along high symmetry lines <span class="token keyword">for</span> hexagonal structure 40Line-modeRec0.000    0.000    0.500  <span class="token operator">!</span> A0.000    0.000    0.000  <span class="token operator">!</span> Gamma0.000    0.000    0.000  <span class="token operator">!</span> Gamma 0.500    0.000    0.000  <span class="token operator">!</span> M0.500    0.000    0.000  <span class="token operator">!</span> M0.333333 0.333333 0.000  <span class="token operator">!</span> K 0.333333 0.333333 0.000  <span class="token operator">!</span> K0.000    0.000    0.000  <span class="token operator">!</span> Gamma<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><font color="blue">说明：<br>line 1：注释行，没有实际意义，但是不能没有<br>line 2：每对高对称点之间产生40个k点<br>line 3：以字母L开头表示按line模式产生k点<br>line 4：以字母R开头表示k点按倒格子坐标系<br>line 5-~~：每对高对称点的坐标，此处的路径为A-G-M-K-G </font></p><h2 id="经验"><a href="#经验" class="headerlink" title="经验"></a>经验</h2><ul><li>结构优化时，k点数目与晶格常数的乘积大约达到40-45之间就够用了。</li><li>自洽计算时k点数目数目大致为结构优化时的2倍。</li><li>DOS计算、光学性质计算时可在自洽的k点基础上适当增大，至少达到自洽计算时k点数目。</li><li>对于六方晶系，强烈推荐使用Gamma方法，对于大部分体系都推荐使用此方法。</li><li>能带计算时高对称点查找可依据如下方法：<br>(1) 通过seek-path工具寻找高对称点，具体用法<a href="https://www.materialscloud.org/work/tools/seekpath" target="_blank" rel="noopener">$这里$</a>。<br>(2) 依据文献<a href="https://doi.org/10.1016/j.commatsci.2010.05.010" target="_blank" rel="noopener">High-throughput electronic band structure calculations: Challenges and tools</a>选取。</li></ul>]]></content>
      
      
      <categories>
          
          <category> vasp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kpoints </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phono3py软件的编译方法</title>
      <link href="/2019/09/25/phono3py-install/"/>
      <url>/2019/09/25/phono3py-install/</url>
      
        <content type="html"><![CDATA[<p>编译环境：Ubuntu18.04.3 LTS<br>phono3py版本：phono3py–1.17.0.post1<br>phonopy版本：phonopy–2.2.0<br>python版本：python–3.6.8</p><h2 id="phono3py概述"><a href="#phono3py概述" class="headerlink" title="phono3py概述"></a><a href="https://atztogo.github.io/phono3py/index.html" target="_blank" rel="noopener">phono3py</a>概述</h2><p>&emsp;&emsp;phono3py是基于超原胞方法计算声子-声子相互作用以及与其相关性质的软件包，可以计算的性质主要包括：</p><ul><li>Lattice thermal conductivity (RTA and <a href="https://atztogo.github.io/phono3py/direct-solution.html#direct-solution" target="_blank" rel="noopener">direct solution of LBTE</a>)</li><li>Phonon lifetime/linewidth</li><li>Imaginary part of self energy</li><li>Joint density of states (JDOS) and weighted-JDOS<br>&emsp;&emsp;phono3py可以与常见的第一性原理计算软件结合使用，例如：<br><a href="https://atztogo.github.io/phono3py/vasp.html#vasp-interface" target="_blank" rel="noopener">VASP</a>, <a href="https://atztogo.github.io/phono3py/pwscf.html#pwscf-interface" target="_blank" rel="noopener">QE</a>, <a href="https://atztogo.github.io/phono3py/crystal.html#crystal-interface" target="_blank" rel="noopener">CRYSTAL</a>, <a href="https://atztogo.github.io/phono3py/turbomole.html#turbomole-interface" target="_blank" rel="noopener">TURBOMOLE</a>等，具体内容可参考<a href="https://atztogo.github.io/phono3py/interfaces.html#calculator-interfaces" target="_blank" rel="noopener">官网说明</a>。<h2 id="phono3py编译方法介绍"><a href="#phono3py编译方法介绍" class="headerlink" title="phono3py编译方法介绍"></a>phono3py编译方法介绍</h2>&emsp;&emsp;对于phono3py的编译是花了许多精力在里边的，尤其是对于新手而言，可能碰到许多奇怪的错误，在<a href="https://www.google.com.hk/" target="_blank" rel="noopener">Google</a>上也没有搜到合适的解决办法，为了新手方便编译，特将编译过程写出来，以供参考。<br>&emsp;&emsp;phono3py的编译主要有3种方法：</li><li>使用conda利用如下命令自动安装：<pre class="line-numbers language-bash"><code class="language-bash">conda <span class="token function">install</span> -c atztogo phono3py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>但是安装完成后phono3py无法使用，会报一些奇怪的错误。</li><li>使用pip利用如下命令自动安装：<pre class="line-numbers language-bash"><code class="language-bash">pip <span class="token function">install</span> phono3py --user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>同样，安装完成后phono3py无法使用，会报一些奇怪的错误。</li><li>基于源码编译安装<h2 id="phono3py源码编译方法"><a href="#phono3py源码编译方法" class="headerlink" title="phono3py源码编译方法"></a>phono3py源码编译方法</h2>说明：由于phono3py的运行依赖于phonopy，因此经过测试后发现，phono3py–1.17.0.post1版本可以与phonopy–2.2.0或phonopy–2.1.4版本兼容，phonopy–2.1.4以前的版本没有测试。但是与phonopy–2.3.0以及phonopy–2.3.0.post5版本不兼容，会报错。</li><li>安装编译环境：<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3-numpy<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3-scipy<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3-h5py<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3-scipy<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3-matplotlib<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3-yaml<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libopenblas-dev<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libgomp1<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> liblapack-dev<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> liblapacke-dev<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3-distutils<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3-pip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>phonopy-2.2.0的下载与编译：<br><a href="https://pypi.org/project/phonopy/2.2.0/#files" target="_blank" rel="noopener">下载</a><br>编译<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">tar</span> zxvf phono3py-1.17.0.post1.tar.gz<span class="token function">cd</span> phono3py-1.17.0.post1.tar.gzpython3.6 setup.py <span class="token function">install</span> --user<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>phono3py的下载与编译：<br><a href="https://pypi.org/project/phono3py/#files" target="_blank" rel="noopener">下载</a><br>编译<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">tar</span> zxvf phono3py-1.17.0.post1.tar.gz<span class="token function">cd</span> phono3py-1.17.0.post1.tar.gzpython3.6 setup.py <span class="token function">install</span> --user<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>设置环境变量：<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">vi</span> ~/.bashrc<span class="token function">export</span> PYTHONPATH<span class="token operator">=</span>~/.local/lib/python3.6/site-packages:<span class="token variable">$PYTHONPATH</span><span class="token function">export</span> PATH<span class="token operator">=</span>~/.local/bin:<span class="token variable">$PATH</span><span class="token function">source</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>测试结果：<br><img src="/image/phonopy.png" alt="phonopy测试结果"></li></ul><p><img src="/image/phono3py.png" alt="phono3py测试结果"></p>]]></content>
      
      
      <categories>
          
          <category> phonopy </category>
          
          <category> phono3py </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phonopy </tag>
            
            <tag> phono3py </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建根号界面晶体模型</title>
      <link href="/2019/09/25/materials-studio-build/"/>
      <url>/2019/09/25/materials-studio-build/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Materials Studio </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 根号表面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QE和EPW软件的编译</title>
      <link href="/2019/09/25/quantum-espresso-compile/"/>
      <url>/2019/09/25/quantum-espresso-compile/</url>
      
        <content type="html"><![CDATA[<p>编译环境：Ubuntu18.04.2<br>Intel编译器：parallel_studio_xe_2019_update4</p><h2 id="Intel编译器的安装与配置"><a href="#Intel编译器的安装与配置" class="headerlink" title="Intel编译器的安装与配置"></a>Intel编译器的安装与配置</h2><h3 id="Intel编译器的申请"><a href="#Intel编译器的申请" class="headerlink" title="Intel编译器的申请"></a>Intel编译器的申请</h3><p>&emsp;&emsp;使用学校邮箱在<a href="https://software.intel.com/en-us/qualify-for-free-software/student#" target="_blank" rel="noopener">Intel官网</a>可免费申请Intel编译器，使用时间为一年，到期后可重复申请，然后将新申请的license复制到安装路径文件夹license中即可。</p><pre class="line-numbers language-bash"><code class="language-bash">/opt/intel/license<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">source</span> /opt/intel/bin/compilervars.sh intel64<span class="token function">source</span> /opt/intel/mkl/bin/mklvars.sh intel64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意：普通用户配置环境变量需要依据自己的安装路径修改</p><h2 id="二、QE的下载编译"><a href="#二、QE的下载编译" class="headerlink" title="二、QE的下载编译"></a>二、QE的下载编译</h2><h3 id="QE下载"><a href="#QE下载" class="headerlink" title="QE下载"></a>QE下载</h3><p>&emsp;&emsp;在<a href="https://github.com/QEF/q-e/releases">QE官网</a>下载最新版q-e-qe-6.4.1.tar以及补丁文件backports-6.4.1.diff。</p><h3 id="赝势库的下载"><a href="#赝势库的下载" class="headerlink" title="赝势库的下载"></a>赝势库的下载</h3><p>&emsp;&emsp;一般情况下，为了计算结果的可靠性，在编译完软件时需要测试自带的算例，此时需要联网下载赝势库。考虑到大部分集群无法联网，需要借助于安装了Linux系统的主机下载赝势库。进入test-suite子目录，修改check_pseudo.sh文件，取消部分echo命令前的注释#号，以便及时查看下载进度，修改后的check_pseudo.sh文件如下：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># Copyright (C) 2001-2016 Quantum ESPRESSO group</span><span class="token comment" spellcheck="true">#</span><span class="token comment" spellcheck="true"># This program is free software; you can redistribute it and/or</span><span class="token comment" spellcheck="true"># modify it under the terms of the GNU General Public License</span><span class="token comment" spellcheck="true"># as published by the Free Software Foundation; either version 2</span><span class="token comment" spellcheck="true"># of the License. See the file `License' in the root directory</span><span class="token comment" spellcheck="true"># of the present distribution.</span><span class="token function">source</span> <span class="token variable">${ESPRESSO_ROOT}</span>/test-suite/ENVIRONMENT<span class="token keyword">if</span> <span class="token function">test</span> <span class="token string">"<span class="token variable"><span class="token variable">`</span><span class="token function">which</span> curl<span class="token variable">`</span></span>"</span> <span class="token operator">=</span> <span class="token string">""</span> <span class="token punctuation">;</span> <span class="token keyword">then</span>   <span class="token keyword">if</span> <span class="token function">test</span> <span class="token string">"<span class="token variable"><span class="token variable">`</span><span class="token function">which</span> <span class="token function">wget</span><span class="token variable">`</span></span>"</span> <span class="token operator">=</span> <span class="token string">""</span> <span class="token punctuation">;</span> <span class="token keyword">then</span>      <span class="token keyword">echo</span> <span class="token string">"### wget or curl not found: will not be able to download missing PP ###"</span>   <span class="token keyword">else</span>      DOWNLOADER<span class="token operator">=</span><span class="token string">"wget -O"</span>       <span class="token keyword">echo</span> <span class="token string">"wget found"</span>   <span class="token keyword">fi</span><span class="token keyword">else</span>   DOWNLOADER<span class="token operator">=</span><span class="token string">"curl -o"</span>    <span class="token keyword">echo</span> <span class="token string">"curl found"</span><span class="token keyword">fi</span>inputs<span class="token operator">=</span>`find <span class="token variable">$1*</span> -type f -name <span class="token string">"*.in"</span> -not -name <span class="token string">"test.*"</span> -not -name <span class="token string">"benchmark.*"</span><span class="token variable"><span class="token variable">`</span>pp_files<span class="token operator">=</span><span class="token variable">`</span></span><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token variable">${inputs}</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token function">grep</span> UPF <span class="token variable">${x}</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$3</span>}'</span><span class="token punctuation">;</span> done`<span class="token keyword">for</span> pp_file <span class="token keyword">in</span> <span class="token variable">${pp_files}</span> <span class="token punctuation">;</span> <span class="token keyword">do</span><span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">test</span> -f <span class="token variable">${ESPRESSO_PSEUDO}</span>/<span class="token variable">${pp_file}</span> <span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token keyword">echo</span> -n <span class="token string">"Downloading <span class="token variable">${pp_file}</span> to <span class="token variable">${ESPRESSO_PSEUDO}</span> ... "</span>    <span class="token variable">${DOWNLOADER}</span> <span class="token variable">${ESPRESSO_PSEUDO}</span>/<span class="token variable">${pp_file}</span> <span class="token variable">${NETWORK_PSEUDO}</span>/<span class="token variable">${pp_file}</span> 2<span class="token operator">></span> /dev/null    <span class="token keyword">if</span> <span class="token function">test</span> <span class="token variable">$?</span> <span class="token operator">!=</span> 0 <span class="token punctuation">;</span> <span class="token keyword">then</span>        <span class="token keyword">echo</span> <span class="token string">"Download of"</span> <span class="token variable">${pp_file}</span> <span class="token string">"FAILED, do it manually -- Testing aborted!"</span>        <span class="token keyword">exit</span> -1    <span class="token keyword">else</span>        <span class="token keyword">echo</span> <span class="token string">"done."</span>    <span class="token keyword">fi</span><span class="token keyword">else</span>    <span class="token keyword">echo</span> <span class="token string">"No need to download <span class="token variable">${pp_file}</span>."</span><span class="token keyword">fi</span><span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重新打包后上传服务器开始编译。</p><h3 id="编译具体步骤"><a href="#编译具体步骤" class="headerlink" title="编译具体步骤"></a>编译具体步骤</h3><ol><li>将补丁文件backports-6.4.1.diff拷贝到QE主目录，进入QE主目录并执行如下命令为QE打补丁：<pre class="line-numbers language-bash"><code class="language-bash">patch -p1 --merge <span class="token operator">&lt;</span> backports-6.4.1.diff<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>利用QE的configure实现对编译器和数学库的自动配置，执行命令：</li></ol><pre class="line-numbers language-bash"><code class="language-bash">./configure MPIF90<span class="token operator">=</span>mpiifort CC<span class="token operator">=</span>mpiicc F90<span class="token operator">=</span>ifort F77<span class="token operator">=</span>mpiifort -enable-parallel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>修改make.inc文件<pre class="line-numbers language-bash"><code class="language-bash">106 FFLAGS         <span class="token operator">=</span> -O3 -assume byterecl -g -traceback<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">132 BLAS_LIBS      <span class="token operator">=</span>   -L<span class="token variable">${MKLROOT}</span>/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lm -ldl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">141 LAPACK_LIBS    <span class="token operator">=</span> -L<span class="token variable">${MKLROOT}</span>/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lm -ldl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">144 SCALAPACK_LIBS <span class="token operator">=</span> -L<span class="token variable">${MKLROOT}</span>/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lm -ldl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">149 FFT_LIBS       <span class="token operator">=</span> -L<span class="token variable">${MKLROOT}</span>/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lm -ldl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash">159 MPI_LIBS       <span class="token operator">=</span> -L/opt/intel/impi/2019.4.243/intel64/lib -lmpi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>编译</li></ol><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">make</span> -j n all <span class="token comment" spellcheck="true">#n为并行编译时调用的核数</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：并行编译时有时会遇到无法排除的错误，如果出现未知错误，建议使用单个核编译<br>5. 测试</p><pre class="line-numbers language-bash"><code class="language-bash">To run Quantum ESPRESSO test-suite, <span class="token function">type</span> at the shell prompt:  <span class="token function">make</span> targetwhere <span class="token operator">&lt;</span>target<span class="token operator">></span> identifies an action run-tests                   <span class="token keyword">:</span> run-tests-serial <span class="token punctuation">(</span>default<span class="token punctuation">)</span> run-tests-serial            <span class="token keyword">:</span> run all tests <span class="token keyword">in</span> SERIAL run-tests-XX-serial         <span class="token keyword">:</span> run tests <span class="token keyword">for</span> XX<span class="token operator">=</span><span class="token punctuation">{</span>pw,cp<span class="token punctuation">}</span> only, as above run-tests-parallel          <span class="token keyword">:</span> run all tests <span class="token keyword">in</span> PARALLEL <span class="token punctuation">(</span>4 MPI<span class="token punctuation">)</span> run-tests-XX-parallel       <span class="token keyword">:</span> run tests <span class="token keyword">for</span> XX<span class="token operator">=</span><span class="token punctuation">{</span>pw,cp<span class="token punctuation">}</span> only, as above run-custom-test testdir<span class="token operator">=</span>DIR <span class="token keyword">:</span> run <span class="token function">test</span> <span class="token keyword">in</span> DIR only <span class="token punctuation">(</span>serial<span class="token punctuation">)</span> run-custom-test-parallel testdir<span class="token operator">=</span>DIR <span class="token keyword">:</span> run <span class="token function">test</span> <span class="token keyword">in</span> DIR only <span class="token punctuation">(</span>parallel 4 MPI<span class="token punctuation">)</span> compare                     <span class="token keyword">:</span> compare last output with reference clean                       <span class="token keyword">:</span> clean stdout/sderr of all testsFor additional advanced commands and settings please manually inspectENVIRONMENT and Makefile files<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果测试结果为全部通过，或个别结果的数值计算出现微小误差的情况则不影响对QE的使用。</p><h2 id="Electron-phonon-Wannier-（EPW-的编译"><a href="#Electron-phonon-Wannier-（EPW-的编译" class="headerlink" title="Electron-phonon Wannier （EPW)的编译"></a>Electron-phonon Wannier （EPW)的编译</h2><h3 id="EPW简介"><a href="#EPW简介" class="headerlink" title="EPW简介"></a>EPW简介</h3><p>&emsp;&emsp;EPW是Electron-phonon Wannier的缩写，主要用于计算与电声相互作用相关的物理性质，主要包括：</p><ol><li>The total electron-phonon coupling strenght $\lambda$</li><li>The anisotropic Eliashberg spectral function $\alpha^{2}F$</li><li>The transport spectral function $\alpha^{2}F_{\rm tr}$</li><li>The anisotropic superconducting gap  ${\Delta}_{n\rm k}$ within the Eliashberg theory</li><li>The electron and phonon self-energies arising from electron-phonon interaction</li><li>The phonon linewidths and lifetimes arising from electron-phonon interaction</li><li>The electron linewidths and lifetimes arising from electron-phonon interaction</li><li>The temperature-dependence of the carrier lifetimes</li><li>The spectral functions needed for the calculation of ARPES spectra</li><li>The electron and hole mobility $\mu$</li></ol><p>从EPW v4.1（26 April 2016）开始，EPW并入了Quantum-ESPRESSO软件，编译和计算都是基于QE基础上进行的，目前的最新版本是EPW v5.1。</p><h3 id="EPW学习资料"><a href="#EPW学习资料" class="headerlink" title="EPW学习资料"></a>EPW学习资料</h3><ol><li><a href="http://epw.org.uk/Documentation/Tutorial" target="_blank" rel="noopener">Tutorial</a></li><li><a href="http://epw.org.uk/Documentation/School2018" target="_blank" rel="noopener">School on Electron-Phonon Physics from First Principles</a></li><li><a href="https://www.youtube.com/playlist?list=PLGntAYRT8AVmQMyurFoncyOdHljqeGU_R" target="_blank" rel="noopener">Projects: Quantum Espresso Tutorial 2019</a></li><li><a href="https://www.youtube.com/channel/UCr3qjMlMoPVtgcdlJUMUJJQ" target="_blank" rel="noopener">Samuel Poncé</a></li></ol><h3 id="EPW编译"><a href="#EPW编译" class="headerlink" title="EPW编译"></a>EPW编译</h3><ol><li>下载<a href="http://www.wannier.org/" target="_blank" rel="noopener">Wannier90 (v3.0.0)</a>，并重命名为v3.0.0.tar.gz，然后拷贝到QE下的archive文件夹下。</li><li>编译<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">make</span> epw<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>测试<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> test-suite<span class="token function">make</span> run-tests-epw-parallel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>如果测试结果为全部通过，则可以使用EPW软件计算了。</li></ol><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol><li><a href="http://blog.sciencenet.cn/blog-2909108-1152511.html" target="_blank" rel="noopener">QE使用经验总结：（一）编译</a></li><li><a href="https://www.youtube.com/playlist?list=PLGntAYRT8AVk9EV5Fm8qRboc3RCReTqGm" target="_blank" rel="noopener">Hands-on: Quantum Espresso Tutorial 2019</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Quantum ESPRESSO </category>
          
          <category> EPW </category>
          
      </categories>
      
      
        <tags>
            
            <tag> quantum ESPRESSO </tag>
            
            <tag> EPW </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
