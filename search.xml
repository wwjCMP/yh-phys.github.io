<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ShengBTE软件编译方法</title>
      <link href="2020/09/04/shengbte-install/"/>
      <url>2020/09/04/shengbte-install/</url>
      
        <content type="html"><![CDATA[<ul><li>编译环境：Ubuntu20.04.1 LTS</li><li>编译器：Intel 2020_update2</li><li><a href="https://spglib.github.io/spglib/index.html" target="_blank" rel="noopener">spglib</a></li><li><a href="https://bitbucket.org/sousaw/thirdorder/src/master/" target="_blank" rel="noopener">thirdorder</a></li><li><a href="http://www.shengbte.org/home" target="_blank" rel="noopener">ShengBTE</a><h2 id="一、-spglib-1-8-3"><a href="#一、-spglib-1-8-3" class="headerlink" title="一、 spglib-1.8.3"></a>一、 spglib-1.8.3</h2></li><li>tar zxvf spglib-1.8.3.tar.gz</li><li>cd spglib-1.8.3</li><li>mkdir build</li><li>cd build &amp;&amp; pwd &amp;&amp; cd ../</li><li>./configure –prefix=/home/hey/.App/ShengBTE/spglib-1.8.3/build</li><li>make</li><li>make install<h4 id="加载spglib-1-8-3的数据库文件"><a href="#加载spglib-1-8-3的数据库文件" class="headerlink" title="加载spglib-1.8.3的数据库文件"></a>加载spglib-1.8.3的数据库文件</h4>假定将ShengBTE文件所需环境变量和数学库文件写入<code>ShengBTE.env</code>文件:</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib:<span class="variable">$LD_LIBRARY_PATH</span></span><br></pre></td></tr></table></figure><ul><li><code>source ShengBTE.env</code></li></ul><h2 id="二、-ShengBTE-v1-1-1"><a href="#二、-ShengBTE-v1-1-1" class="headerlink" title="二、 ShengBTE_v1.1.1"></a>二、 ShengBTE_v1.1.1</h2><ul><li>tar jxvf ShengBTE-v1.1.1-8a63749.tar.bz2</li><li>mv ShengBTE ShengBTE_v1.1.1</li><li>cd ShengBTE_v1.1.1</li><li>cp arch.make.example Src/arch.make</li><li>根据服务器intel编译器路径修改arch.make文件，提供模板如下：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> FFLAGS=-traceback -debug -O3 <span class="comment"># -static_intel</span></span><br><span class="line"><span class="built_in">export</span> LDFLAGS=-L/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib/libsymspg.a</span><br><span class="line"><span class="built_in">export</span> LDFLAGS=-L/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib -lsymspg</span><br><span class="line"><span class="built_in">export</span> MPIFC=mpiifort</span><br><span class="line">MKLROOT = /opt/intel/compilers_and_libraries_2020.2.254/linux/mkl</span><br><span class="line">MKL=$(MKLROOT)/lib/intel64/libmkl_lapack95_lp64.a -Wl,--start-group \</span><br><span class="line">$(MKLROOT)/lib/intel64/libmkl_intel_lp64.a \</span><br><span class="line">$(MKLROOT)/lib/intel64/libmkl_sequential.a \</span><br><span class="line">$(MKLROOT)/lib/intel64/libmkl_core.a -Wl,--end-group -lpthread -lm</span><br><span class="line"><span class="built_in">export</span> LAPACK=$(MKL)</span><br><span class="line"><span class="built_in">export</span> LIBS=$(LAPACK)</span><br></pre></td></tr></table></figure></li></ul><p>Note: 主要修改spglib库文件路径，mpiifort编译器路径与MKL数学库路径即可</p><ul><li>make</li><li>cd ../ &amp;&amp; ls</li><li>如果没有报错，会在Src的上级目录生成<code>ShengBTE</code>可执行文件</li></ul><h4 id="对ShengBTE做测试，以确保编译没有问题"><a href="#对ShengBTE做测试，以确保编译没有问题" class="headerlink" title="对ShengBTE做测试，以确保编译没有问题"></a>对ShengBTE做测试，以确保编译没有问题</h4><ul><li>cd Test-VASP</li><li>mpirun -np 4 ../ShengBTE</li><li>屏幕输出如下内容且没有报错则确认编译成功<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Info: symmetry group F-43m detected</span><br><span class="line">Info:           24  symmetry operations</span><br><span class="line">Info: Ntot =        1728</span><br><span class="line">Info: Nlist =          72</span><br><span class="line">Info: about to obtain the spectrum</span><br><span class="line">Info: expecting Phonopy 2nd-order format</span><br><span class="line">Info: about to <span class="built_in">set</span> the acoustic frequencies at Gamma to zero</span><br><span class="line">Info: original values:</span><br><span class="line">Info: omega(1,1) =  6.400137459983242E-007 rad/ps</span><br><span class="line">Info: omega(1,2) =  9.163852030886527E-007 rad/ps</span><br><span class="line">Info: omega(1,3) =  1.066791524454142E-006 rad/ps</span><br><span class="line">Info: spectrum calculation finished</span><br><span class="line">Info: start calculating specific heat and kappa <span class="keyword">in</span> the small-grain <span class="built_in">limit</span> </span><br><span class="line">Info: Temperature=   300.000000000000     </span><br><span class="line">Info: Ntotal_plus =      467371</span><br><span class="line">Info: Ntotal_minus =      524356</span><br><span class="line">Info: start calculating kappa</span><br><span class="line">Info: Temperature=   300.000000000000     </span><br><span class="line">Info: Iteration           1</span><br><span class="line">Info:Relative change=  2.338493701468276E-002</span><br><span class="line">Info: Iteration           2</span><br><span class="line">Info:Relative change=  1.376466188522221E-002</span><br><span class="line">Info: Iteration           3</span><br><span class="line">Info:Relative change=  1.354818430557603E-003</span><br><span class="line">Info: Iteration           4</span><br><span class="line">Info:Relative change=  2.125374794450190E-004</span><br><span class="line">Info: Iteration           5</span><br><span class="line">Info:Relative change=  3.362189820605527E-005</span><br><span class="line">Info: Iteration           6</span><br><span class="line">Info:Relative change=  5.619469853262435E-006</span><br><span class="line">Info: nanowires with orientation 1: 1 0 0</span><br><span class="line">Info: nanowires with orientation 2: 1 1 0</span><br><span class="line">Info: nanowires with orientation 3: 1 1 1</span><br><span class="line">Info: normal <span class="built_in">exit</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="设定ShengBTE环境变量"><a href="#设定ShengBTE环境变量" class="headerlink" title="设定ShengBTE环境变量"></a>设定<code>ShengBTE</code>环境变量</h4><ul><li>将<code>ShengBTE</code>写入<code>ShengBTE.env</code><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib:<span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/home/hey/.App/ShengBTE/ShengBTE_v1.1.1</span><br></pre></td></tr></table></figure></li></ul><h2 id="三、thirdorder"><a href="#三、thirdorder" class="headerlink" title="三、thirdorder"></a>三、thirdorder</h2><h4 id="配置python3环境变量"><a href="#配置python3环境变量" class="headerlink" title="配置python3环境变量"></a>配置python3环境变量</h4><ul><li><p>下载<a href="https://www.anaconda.com/" target="_blank" rel="noopener">Anaconda3</a>包</p></li><li><p>安装Anaconda3包</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash Anaconda3-2020.02-Linux-x86_64.sh</span><br></pre></td></tr></table></figure></li><li><p>将python3的环境变量写入脚本<code>anaconda3.env</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">alias</span> python=<span class="string">'/home/hey/.App/anaconda3/bin/python3.7'</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/home/hey/.App/anaconda3/bin</span><br><span class="line"><span class="built_in">export</span> PYTHONPATH=<span class="variable">$PYTHONPATH</span>:/home/hey/.App/anaconda3/lib/python3.7/site-packages</span><br></pre></td></tr></table></figure></li><li><p>使python3环境变量生效</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> anaconda3.env</span><br></pre></td></tr></table></figure></li><li><p>tar jxvf thirdorder-v1.1.1-8526f47.tar.bz2</p></li><li><p>cd thirdorder</p></li><li><p>修改setup.py中的spglib库文件路径，具体为8~13行内容，如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Add the location of the "spglib/spglib.h" to this list if necessary.</span></span><br><span class="line"><span class="comment"># Example: INCLUDE_DIRS=["/home/user/local/include"]</span></span><br><span class="line">INCLUDE_DIRS = [<span class="string">"/home/hey/.App/ShengBTE/spglib-1.8.3/build/include"</span>]</span><br><span class="line"><span class="comment"># Add the location of the spglib shared library to this list if necessary.</span></span><br><span class="line"><span class="comment"># Example: LIBRARY_DIRS=["/home/user/local/lib"]</span></span><br><span class="line">LIBRARY_DIRS = [<span class="string">"/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib"</span>]</span><br></pre></td></tr></table></figure></li><li><p>使用如下命令编译</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash compile.sh</span><br></pre></td></tr></table></figure></li><li><p>编译过程中会出现警告，忽略之；最后如果没有报错，会生成如下文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">thirdorder_core.cpython-37m-x86_64-linux-gnu.so</span><br></pre></td></tr></table></figure></li><li><p>如果编译过程中发现gcc编译器报错，可换icc编译器完成编译，命令如下</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">icc -pthread -shared -B /home/hey/.App/anaconda3/compiler_compat \</span><br><span class="line">-L/home/hey/.App/anaconda3/lib \</span><br><span class="line">-Wl,-rpath=/home/hey/.App/anaconda3/lib -Wl,--no-as-needed -Wl,\</span><br><span class="line">--sysroot=/ build/temp.linux-x86_64-3.7/thirdorder_core.o \</span><br><span class="line">-L/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib \</span><br><span class="line">-Wl,-R/home/hey/.App/ShengBTE/spglib-1.8.3/build/lib \</span><br><span class="line">-lsymspg -o ./thirdorder_core.cpython-37m-x86_64-linux-gnu.so</span><br></pre></td></tr></table></figure><p>Note: 注意此处为了完整显示代码块，使用了换行符，在实际编译过程中，如果报错后会出现上述代码块里的内容，可直接复制使用</p><ul><li>测试<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hey@Dell:~$ python thirdorder_vasp.py </span><br><span class="line">Usage: thirdorder_vasp.py sow|reap na nb nc cutoff[nm/-<span class="built_in">integer</span>]</span><br></pre></td></tr></table></figure></li></ul><h4 id="配置thirdorder环境"><a href="#配置thirdorder环境" class="headerlink" title="配置thirdorder环境"></a>配置thirdorder环境</h4><ul><li><p>将thirdorder运行环境写入<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">``` bash </span><br><span class="line">#!/bin/bash</span><br><span class="line">alias python=&apos;/home/hey/.App/anaconda3/bin/python3.7&apos;</span><br><span class="line">export PATH=$PATH:/home/hey/.App/anaconda3/bin</span><br><span class="line">export PYTHONPATH=$PYTHONPATH:/home/hey/.App/anaconda3/lib/python3.7/site-packages</span><br><span class="line">export PYTHONPATH=$PYTHONPATH:/home/hey/.App/ShengBTE/thirdorder</span><br></pre></td></tr></table></figure></p></li><li><p>使环境变量生效</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> thirdorder.env</span><br></pre></td></tr></table></figure></li><li><p>使用：可将<code>thirdorder_vasp.py</code>复制到工作目录使用</p><h4 id="例子如下："><a href="#例子如下：" class="headerlink" title="例子如下："></a>例子如下：</h4></li><li><p>POSCAR</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">InAs</span><br><span class="line">   6.00000000000000</span><br><span class="line">     0.0000000000000000    0.5026468896190005    0.5026468896190005</span><br><span class="line">     0.5026468896190005    0.0000000000000000    0.5026468896190005</span><br><span class="line">     0.5026468896190005    0.5026468896190005    0.0000000000000000</span><br><span class="line">   In   As</span><br><span class="line">   1   1</span><br><span class="line">Direct</span><br><span class="line">  0.0000000000000000  0.0000000000000000  0.0000000000000000</span><br><span class="line">  0.2500000000000000  0.2500000000000000  0.2500000000000000</span><br></pre></td></tr></table></figure></li><li><p>使用thirdorder_vasp.py生成VASP输入文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python thirdorder_vasp.py sow 4 4 4 -3</span><br></pre></td></tr></table></figure></li><li><p>输出信息如下</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hey@Dell:~$ python thirdorder_vasp.py sow 4 4 4 -3</span><br><span class="line">Reading POSCAR</span><br><span class="line">Analyzing the symmetries</span><br><span class="line">- Symmetry group b<span class="string">'F-43m'</span> detected</span><br><span class="line">- 24 symmetry operations</span><br><span class="line">Creating the supercell</span><br><span class="line">Computing all distances <span class="keyword">in</span> the supercell</span><br><span class="line">- Automatic cutoff: 0.5516518040072121 nm</span><br><span class="line">Looking <span class="keyword">for</span> an irreducible <span class="built_in">set</span> of third-order IFCs</span><br><span class="line">- 20 triplet equivalence classes found</span><br><span class="line">- 144 DFT runs are needed</span><br><span class="line">-</span><br><span class="line">.d88888b   .88888.  dP   dP   dP</span><br><span class="line">1.     <span class="string">"' d8'   `8b 88   88   88</span></span><br><span class="line"><span class="string">`Y88888b. 88     88 88  .8P  .8P</span></span><br><span class="line"><span class="string">      `8b 88     88 88  d8'  d8'</span></span><br><span class="line"><span class="string">d8'   .8P Y8.   .8P 88.d8P8.d8P</span></span><br><span class="line"><span class="string"> Y88888P   `8888P'  8888' Y88'</span></span><br><span class="line"><span class="string">ooooooooooooooooooooooooooooooooo</span></span><br><span class="line"><span class="string">-</span></span><br><span class="line"><span class="string">Writing undisplaced coordinates to 3RD.SPOSCAR</span></span><br><span class="line"><span class="string">Writing displaced coordinates to 3RD.POSCAR.*</span></span><br><span class="line"><span class="string">-</span></span><br><span class="line"><span class="string">888888ba   .88888.  888888ba   88888888b</span></span><br><span class="line"><span class="string">88    `8b d8'   `8b 88    `8b  88</span></span><br><span class="line"><span class="string">88     88 88     88 88     88 a88aaaa</span></span><br><span class="line"><span class="string">88     88 88     88 88     88  88</span></span><br><span class="line"><span class="string">88    .8P Y8.   .8P 88     88  88</span></span><br><span class="line"><span class="string">8888888P   `8888P'  dP     dP  88888888P</span></span><br><span class="line"><span class="string">ooooooooooooooooooooooooooooooooooooooooo</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ShengBTE </category>
          
          <category> thirdorder </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ShengBTE </tag>
            
            <tag> thirdorder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用gnuplot画投影能带图</title>
      <link href="2019/12/07/fatband-gnuplot/"/>
      <url>2019/12/07/fatband-gnuplot/</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><ul><li>gnuplot的安装：Ubuntu系统可直接如下命令安装<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install gnuplot-qt</span><br></pre></td></tr></table></figure></li></ul><p>其余操作系统安装方式可参考<a href="http://gnuplot.sourceforge.net/" target="_blank" rel="noopener">官网</a></p><ul><li>投影能带数据处理是基于vaspkit code完成的，可参考<a href="https://sourceforge.net/projects/vaspkit/" target="_blank" rel="noopener">这里</a>, <a href="http://blog.wangruixing.cn/" target="_blank" rel="noopener">这里</a>,<a href="http://vaspkit.com/" target="_blank" rel="noopener">这里</a>和<a href="https://arxiv.org/abs/1908.08269" target="_blank" rel="noopener">这里</a></li></ul><h1 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h1><ul><li><p>绘图方法</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gnuplot fat_band.gnu</span><br></pre></td></tr></table></figure></li><li><p>fat_band.gnu</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> encoding iso_8859_1</span><br><span class="line"><span class="comment"># set terminal  postscript enhanced color font "TimesNewRoman, 11" size 5, 4</span></span><br><span class="line"><span class="built_in">set</span> terminal  pngcairo truecolor enhanced lw 5.0 font <span class="string">"TimesNewRoman, 44"</span> size 1920, 1680</span><br><span class="line"><span class="built_in">set</span> palette rgbformulae 22, 13, -31</span><br><span class="line"><span class="comment"># set palette rgbformulae 7,5,15</span></span><br><span class="line"><span class="built_in">set</span> output <span class="string">'Se_s.png'</span></span><br><span class="line"><span class="built_in">set</span> border</span><br><span class="line"><span class="built_in">unset</span> colorbox</span><br><span class="line"><span class="built_in">set</span> title <span class="string">"Se\\_s"</span> offset 0, -0.8 font <span class="string">"TimesNewRoman, 54"</span></span><br><span class="line"><span class="built_in">set</span> style data linespoints</span><br><span class="line"><span class="built_in">unset</span> ztics</span><br><span class="line"><span class="built_in">unset</span> key</span><br><span class="line"><span class="comment"># set key outside top vertical center</span></span><br><span class="line"><span class="comment"># set pointsize 0.3</span></span><br><span class="line"><span class="built_in">set</span> view 0,0</span><br><span class="line"><span class="built_in">set</span> xtics font <span class="string">"TimesNewRoman, 44"</span></span><br><span class="line"><span class="built_in">set</span> xtics offset 0, 0.3</span><br><span class="line"><span class="built_in">set</span> ytics font <span class="string">"TimesNewRoman, 40"</span></span><br><span class="line"><span class="built_in">set</span> ytics -4, 2, 4</span><br><span class="line"><span class="built_in">set</span> ylabel font <span class="string">"TimesNewRoman, 48"</span></span><br><span class="line"><span class="built_in">set</span> ylabel offset 1.0, 0</span><br><span class="line"><span class="built_in">set</span> xrange [0:2.426]</span><br><span class="line"><span class="built_in">set</span> ylabel <span class="string">"Energy (eV)"</span></span><br><span class="line"><span class="built_in">set</span> yrange [-4:4]</span><br><span class="line"><span class="built_in">set</span> xtics (<span class="string">"M"</span> 0.00000, <span class="string">"G"</span> 0.888, <span class="string">"K"</span> 1.913, <span class="string">"M"</span> 2.426)</span><br><span class="line">plot -4 with filledcurves y1=4 lc rgb <span class="string">"navy"</span>, \</span><br><span class="line"><span class="string">'PBAND_Se.dat'</span> u (<span class="variable">$1</span>):(<span class="variable">$2</span>):(<span class="variable">$3</span>) w lines lw 1.5 lc palette, \</span><br><span class="line">0 w l dt 2 lc rgb <span class="string">"gray"</span>, \</span><br><span class="line"><span class="string">'&lt; echo "0.888 -4 \n 0.888 4"'</span> w l dt 2 lc rgb <span class="string">"gray"</span>, \</span><br><span class="line"><span class="string">'&lt; echo "1.913 -4 \n 1.913 4"'</span> w l dt 2 lc rgb <span class="string">"gray"</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="绘图结果"><a href="#绘图结果" class="headerlink" title="绘图结果"></a>绘图结果</h1><ul><li><p>In_p<br><img src="/image/In_p.png" alt="In_p"></p></li><li><p>In_s<br><img src="/image/In_s.png" alt="In_s"></p></li><li><p>Se_p<br><img src="/image/Se_p.png" alt="Se_p"></p></li><li><p>Se_p_colorbox<br><img src="/image/Se_p_colorbox.png" alt="Se_p"></p></li><li><p>Se_s<br><img src="/image/Se_s.png" alt="Se_s"></p></li><li><p>Note: 因时间仓促，显示效果不是很理想，后期会对细节做进一步处理；绘图脚本可在我的<a href="https://github.com/yh-phys/vasp_tools/tree/master/fatband_gnuplot">Github</a>上下载。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> vasp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fatband </tag>
            
            <tag> gnuplot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Abinit的编译教程</title>
      <link href="2019/11/29/abinit-install/"/>
      <url>2019/11/29/abinit-install/</url>
      
        <content type="html"><![CDATA[<p>编译环境：Intel2015+impi</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>在<a href="https://www.abinit.org/" target="_blank" rel="noopener">Abinit</a>官网下载最新版安装包abinit-8.10.3。</li><li>下载附加程序包<a href="https://www.abinit.org/fallbacks" target="_blank" rel="noopener">这里</a>：LibXC 3.0.0，NetCDF 4.1.1和LAPACK for Abinit ≥ 6.10。</li></ul><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><ul><li><p>上传安装包与附加程序包到指定安装路径，此处以~/software/为例。</p></li><li><p>解压缩并在abinit-8.10.3中新建build与tarballs文件夹。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar zxvf abinit-8.10.3.tar.gz &amp;&amp; <span class="built_in">cd</span> abinit-8.10.3 &amp;&amp; mkdir build tarballs</span><br></pre></td></tr></table></figure></li><li><p>将LibXC 3.0.0，NetCDF 4.1.1和LAPACK for Abinit ≥ 6.10拷贝到tarballs中。</p></li><li><p>进入build文件夹中，并查看计算机名称。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure></li><li><p>在build中建立hostname.ac文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ================================================================</span><br><span class="line"># Configuration file for ABINIT 8 compilation on COBALT</span><br><span class="line"># tested for Intel2015 + impi</span><br><span class="line">#</span><br><span class="line"># ================================================================</span><br><span class="line">#</span><br><span class="line"> FC=&quot;mpiifort&quot;</span><br><span class="line"> CC=&quot;mpiicc&quot;</span><br><span class="line"> CXX=&quot;mpicxx&quot;</span><br><span class="line">#</span><br><span class="line"> enable_mpi=&quot;yes&quot;</span><br><span class="line"> enable_openmp=&quot;yes&quot;</span><br><span class="line">#</span><br><span class="line"> with_linalg_flavor=&quot;mkl+scalapack&quot;</span><br><span class="line"> with_linalg_libs=$&#123;SCALAPACK_LDFLAGS&#125;</span><br><span class="line">#</span><br><span class="line"> with_fft_flavor=&quot;fftw3&quot;</span><br><span class="line"> with_fft_incs=&quot;-I$&#123;MKL_INCDIR&#125;&quot;</span><br><span class="line"> with_fft_libs=$&#123;MKL_LDFLAGS&#125;</span><br><span class="line">#</span><br><span class="line"> with_trio_flavor=&quot;netcdf&quot;</span><br><span class="line"> with_dft_flavor=&quot;libxc&quot;</span><br></pre></td></tr></table></figure></li><li><p>在build中执行configure如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">../configure --with-tardir=~/software/abinit-8.10.3/tarballs !根据自己机器路径修改</span><br></pre></td></tr></table></figure></li><li><p>如果configure过程没有报错，即可编译：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make mj4</span><br></pre></td></tr></table></figure></li></ul><h1 id="编译测试"><a href="#编译测试" class="headerlink" title="编译测试"></a>编译测试</h1><p>在build中执行：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd tests &amp;&amp; ../../tests/runtests.py fast</span><br></pre></td></tr></table></figure><p>如果测试通过，则完成编译。<br>编译好的可执行文件为：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~/software/abinit-8.10.3/build/src/98_main/abinit</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li>Abinit官网：<a href="https://www.abinit.org/" target="_blank" rel="noopener">https://www.abinit.org/</a></li><li>Course and Hands-on session material：<a href="https://school2019.abinit.org/course-material" target="_blank" rel="noopener">https://school2019.abinit.org/course-material</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Abinit </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Abinit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VASP计算二维材料的载流子迁移率</title>
      <link href="2019/10/26/vasp-2d-mobility/"/>
      <url>2019/10/26/vasp-2d-mobility/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;载流子迁移率通常指半导体内部电子和空穴整体的运动快慢情况，是衡量半导体器件性能的重要物理量。2004年，石墨烯的成功剥离引起了研究人员对于二维材料性质探索的浓厚兴趣。石墨烯、黑磷等二维材料展现出的高载流子迁移率是其中的一个重要研究课题，科研人员在理论计算方面已经做了大量的工作。由于电子在运动过程中不仅受到外电场力的作用，还会不断的与晶格、杂质、缺陷等发生无规则的碰撞，大大增加了理论计算的难度。<br>&emsp;&emsp;目前计算载流子迁移率比较常用的理论是形变势理论和玻尔兹曼输运理论，前者没有考虑电子和声子（晶格振动）以及电子与电子之间的相互作用等因素，计算结果存在一定的误差，但笔者的计算结果与实验值在数量级上是吻合的；玻尔兹曼输运理论的一种计算考虑了电子-声子的相互作用，基于第一性原理计算和最大局域化wannier函数插值方法，借助于<a href="http://www.quantum-espresso.org/" target="_blank" rel="noopener">Quantum-ESPRESSO</a>和<a href="http://www.quantum-espresso.org/" target="_blank" rel="noopener">EPW</a>软件可以完成载流子迁移率计算。缺点是计算量太大，一般的课题组很难承受起高昂的计算费用，另外<a href="http://www.quantum-espresso.org/" target="_blank" rel="noopener">EPW</a>软件对于二维材料的计算存在部分问题，在其官方论坛也有讨论，计算过程在后续文章中会提到。<br>&emsp;&emsp;本文以形变势理论方法为基础，详细介绍了二维InSe的电子和空穴的有效质量与载流子迁移率的计算方法。</p><h2 id="理论基础"><a href="#理论基础" class="headerlink" title="理论基础"></a>理论基础</h2><p>&emsp;&emsp;基于Bardeen和Shockley$^{[1]}$提出的形变势理论，二维材料载流子迁移率可以根据下式计算：</p><p>$$\mu_{\rm 2D} = \frac{e\hbar^3C_{2D}}{k_BTm^{\ast}m_dE_1^2}$$</p><p>其中，$m^{\ast}$是传输方向上的有效质量，$T$是温度，$k_B$是玻尔兹曼常数。$E_1$表示沿着传输方向上位于价带顶（VBM）的空穴或聚于导带底（CBM）的电子的形变势常数，由公式$E_1$=${\Delta}E/({\Delta}l/l_o)$确定，${\Delta}E$为在压缩或拉伸应变下CBM或VBM 的能量变化，$l_0$是传输方向上的晶格常数，${\Delta}l$是$l_0$的变形量。$m_d$是载流子的平均有效质量，由公式$m_d$=$\sqrt{m_x^{\ast}m_y^{\ast}}$定义。$C_{2D}$是均匀变形晶体的弹性模量，对于2D材料，弹性模量可以通过公式$C_{2D}=2[{\partial}^2E/{\partial}({\Delta}l/l_0)^2]/S_0$来计算，其中$E$是总能量，$S_0$是优化后的面积。<br>&emsp;&emsp;下面对公式中的单位（量纲）做一个简单换算，具体如下：</p><ul><li>$m_d=\sqrt{m_x^{\ast}m_y^{\ast}}$：（Kg）</li><li>$E_1 = {\Delta}E/({\Delta}l/l_o)$：（J） 在VASP中${\Delta}E$的单位是eV，1eV=1.6$\times$10$^{-19}$J，此处需要换算</li><li>$C_{2D} = 2[{\partial}^2E/{\partial}({\Delta}l/l_0)^2]/S_0$：（J/m$^2$) 其中$E$是总能（eV），$S_0$表示面积（Å$^2$）</li><li>$e$：1.6$\times$10$^{-19}$ C</li><li>$h$：6.626$\times$10$^{-34}$ J$\cdot$s</li><li>$k_B$：1.38$\times$10$^{-23}$ J/K</li><li>$m^{\ast}$：Kg<br>换算过程：<br><img src="/image/%E6%8D%A2%E7%AE%97%E8%BF%87%E7%A8%8B.png" alt="换算过程"></li></ul><h2 id="计算与数据处理工具"><a href="#计算与数据处理工具" class="headerlink" title="计算与数据处理工具"></a>计算与数据处理工具</h2><ul><li>VASP.5.4.4软件 (可以手动控制优化晶格方向)</li><li>OriginLab软件</li><li>Excel</li><li>Materials Studio软件</li><li>正格矢到倒格矢转化脚本，来源于<a href="http://muchong.com/bbs/viewthread.php?tid=7149817&fpage=1" target="_blank" rel="noopener">小木虫</a><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python</span></span><br><span class="line"><span class="comment"># This program reads in base vectors from a given file, calculates reciprocal vectors</span></span><br><span class="line"><span class="comment"># then writes to outfile in different units</span></span><br><span class="line"><span class="comment"># LinuxUsage: crecip.py infile outfile</span></span><br><span class="line"><span class="comment"># Note:  the infile must be in the form below:</span></span><br><span class="line"><span class="comment">#   inunit  ang/bohr</span></span><br><span class="line"><span class="comment">#   _begin_vectors</span></span><br><span class="line"><span class="comment">#     46.300000000   0.000000000   0.000000000</span></span><br><span class="line"><span class="comment">#      0.000000000  40.500000000   0.000000000</span></span><br><span class="line"><span class="comment">#      0.000000000   0.000000000  10.000000000</span></span><br><span class="line"><span class="comment">#   _end_vectors</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># Note: LATTICE VECTORS ARE SPECIFIED IN ROWS !</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetInUnit</span><span class="params">( incontent )</span>:</span></span><br><span class="line">    inunit = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> incontent:</span><br><span class="line">        <span class="keyword">if</span> line.find(<span class="string">"inunit"</span>) == <span class="number">0</span>:</span><br><span class="line">            inunit = line.split()[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> inunit</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetVectors</span><span class="params">( incontent )</span>:</span></span><br><span class="line">    indstart = <span class="number">0</span></span><br><span class="line">    indend = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> incontent:</span><br><span class="line">        <span class="keyword">if</span> s.find(<span class="string">"_begin_vectors"</span>) != <span class="number">-1</span>:</span><br><span class="line">            indstart = incontent.index(s)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> s.find(<span class="string">"_end_vectors"</span>) != <span class="number">-1</span>:</span><br><span class="line">                indend = incontent.index(s)</span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range( indstart + <span class="number">1</span>, indend ):</span><br><span class="line">        line = incontent[i].split()</span><br><span class="line">        result.append( [ float(line[<span class="number">0</span>]), float(line[<span class="number">1</span>]), float(line[<span class="number">2</span>]) ] )</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Ang2Bohr</span><span class="params">( LattVecAng )</span>:</span></span><br><span class="line">    LattVecBohr = LattVecAng</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">3</span>):</span><br><span class="line">            LattVecBohr[i][j] = LattVecAng[i][j] *  <span class="number">1.8897261246</span></span><br><span class="line">    <span class="keyword">return</span> LattVecBohr</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DotProduct</span><span class="params">( v1, v2 )</span>:</span></span><br><span class="line">    dotproduct = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">3</span>):</span><br><span class="line">        dotproduct = dotproduct + v1[i] * v2[i]</span><br><span class="line">    <span class="keyword">return</span> dotproduct</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrossProduct</span><span class="params">( v1, v2 )</span>:</span></span><br><span class="line">    <span class="comment"># v3 = v1 WILL LEAD TO WRONG RESULT</span></span><br><span class="line">    v3 = []</span><br><span class="line">    v3.append( v1[<span class="number">1</span>] * v2[<span class="number">2</span>] - v1[<span class="number">2</span>] * v2[<span class="number">1</span>] )</span><br><span class="line">    v3.append( v1[<span class="number">2</span>] * v2[<span class="number">0</span>] - v1[<span class="number">0</span>] * v2[<span class="number">2</span>] )</span><br><span class="line">    v3.append( v1[<span class="number">0</span>] * v2[<span class="number">1</span>] - v1[<span class="number">1</span>] * v2[<span class="number">0</span>] )</span><br><span class="line">    <span class="keyword">return</span> v3</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CalcRecVectors</span><span class="params">( lattvec )</span>:</span></span><br><span class="line">    pi = <span class="number">3.141592653589793</span></span><br><span class="line">    a1 = lattvec[<span class="number">0</span>]</span><br><span class="line">    a2 = lattvec[<span class="number">1</span>]</span><br><span class="line">    a3 = lattvec[<span class="number">2</span>]</span><br><span class="line">    b1 = CrossProduct( a2, a3 )</span><br><span class="line">    b2 = CrossProduct( a3, a1 )</span><br><span class="line">    b3 = CrossProduct( a1, a2 )</span><br><span class="line">    volume = DotProduct( a1, CrossProduct( a2, a3 ) )</span><br><span class="line">    RecVec = [ b1, b2, b3 ]</span><br><span class="line">    <span class="comment"># it follows the definition for b_j: a_i * b_j = 2pi * delta(i,j)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">3</span>):</span><br><span class="line">            RecVec[i][j] = RecVec[i][j] * <span class="number">2</span> * pi / volume</span><br><span class="line">    <span class="keyword">return</span> RecVec    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(argv = None)</span>:</span>  </span><br><span class="line">    argv = sys.argv</span><br><span class="line">    infilename  = argv[<span class="number">1</span>]</span><br><span class="line">    outfilename = argv[<span class="number">2</span>]    </span><br><span class="line">    pi = <span class="number">3.141592653589793</span></span><br><span class="line">    bohr2ang = <span class="number">0.5291772109253</span></span><br><span class="line">    ang2bohr = <span class="number">1.889726124546</span>    </span><br><span class="line">    infile  = open(infilename,<span class="string">"r"</span>)</span><br><span class="line">    incontent = infile.readlines()</span><br><span class="line">    infile.close()    </span><br><span class="line">    inunit = GetInUnit( incontent )</span><br><span class="line">    LattVectors = GetVectors( incontent )</span><br><span class="line">    <span class="comment"># convert units from ang to bohr</span></span><br><span class="line">    <span class="keyword">if</span> inunit == <span class="string">"ang"</span>:</span><br><span class="line">        LattVectors = Ang2Bohr( LattVectors )    </span><br><span class="line">    <span class="comment"># calculate reciprocal vectors in 1/bohr</span></span><br><span class="line">    RecVectors = CalcRecVectors( LattVectors )    </span><br><span class="line">    <span class="comment"># open outfile for output</span></span><br><span class="line">    ofile = open(outfilename,<span class="string">"w"</span>)    </span><br><span class="line">    <span class="comment"># output lattice vectors in bohr</span></span><br><span class="line">    ofile.write(<span class="string">"lattice vectors in bohr:\n"</span>)</span><br><span class="line">    <span class="keyword">for</span> vi <span class="keyword">in</span> LattVectors:</span><br><span class="line">        ofile.write(<span class="string">"%14.9f%14.9f%14.9f\n"</span> % (vi[<span class="number">0</span>], vi[<span class="number">1</span>], vi[<span class="number">2</span>]))</span><br><span class="line">    ofile.write(<span class="string">"\n"</span>)    </span><br><span class="line">    <span class="comment"># output lattice vectors in ang</span></span><br><span class="line">    convfac = bohr2ang</span><br><span class="line">    ofile.write(<span class="string">"lattice vectors in ang:\n"</span>)</span><br><span class="line">    <span class="keyword">for</span> vi <span class="keyword">in</span> LattVectors:</span><br><span class="line">        ofile.write(<span class="string">"%14.9f%14.9f%14.9f\n"</span> % (vi[<span class="number">0</span>]*convfac, vi[<span class="number">1</span>]*convfac, vi[<span class="number">2</span>]*convfac))</span><br><span class="line">    ofile.write(<span class="string">"\n"</span>)    </span><br><span class="line">    <span class="comment"># output reciprocal vectors in 1/bohr</span></span><br><span class="line">    ofile.write(<span class="string">"reciprocal vectors in 1/bohr:\n"</span>)</span><br><span class="line">    <span class="keyword">for</span> vi <span class="keyword">in</span> RecVectors:</span><br><span class="line">        ofile.write(<span class="string">"%14.9f%14.9f%14.9f\n"</span> % (vi[<span class="number">0</span>], vi[<span class="number">1</span>], vi[<span class="number">2</span>]))</span><br><span class="line">    ofile.write(<span class="string">"\n"</span>)    </span><br><span class="line">    <span class="comment"># output reciprocal vectors in 1/ang</span></span><br><span class="line">    convfac = ang2bohr</span><br><span class="line">    ofile.write(<span class="string">"reciprocal vectors in 1/ang:\n"</span>)</span><br><span class="line">    <span class="keyword">for</span> vi <span class="keyword">in</span> RecVectors:</span><br><span class="line">        ofile.write(<span class="string">"%14.9f%14.9f%14.9f\n"</span> % (vi[<span class="number">0</span>]*convfac, vi[<span class="number">1</span>]*convfac, vi[<span class="number">2</span>]*convfac))</span><br><span class="line">    ofile.write(<span class="string">"\n"</span>)    </span><br><span class="line"><span class="comment"># output reciprocal vectors in 2pi/bohr</span></span><br><span class="line">    convfac = <span class="number">1.0</span>/(<span class="number">2.0</span>*pi)</span><br><span class="line">    ofile.write(<span class="string">"reciprocal vectors in 2pi/bohr:\n"</span>)</span><br><span class="line">    <span class="keyword">for</span> vi <span class="keyword">in</span> RecVectors:</span><br><span class="line">        ofile.write(<span class="string">"%14.9f%14.9f%14.9f\n"</span> % (vi[<span class="number">0</span>]*convfac, vi[<span class="number">1</span>]*convfac, vi[<span class="number">2</span>]*convfac))</span><br><span class="line">    ofile.write(<span class="string">"\n"</span>)</span><br><span class="line">    <span class="comment"># output reciprocal vectors in 2pi/ang</span></span><br><span class="line">    convfac = ang2bohr/(<span class="number">2.0</span>*pi)</span><br><span class="line">    ofile.write(<span class="string">"reciprocal vectors in 2pi/ang:\n"</span>)</span><br><span class="line">    <span class="keyword">for</span> vi <span class="keyword">in</span> RecVectors:</span><br><span class="line">        ofile.write(<span class="string">"%14.9f%14.9f%14.9f\n"</span> % (vi[<span class="number">0</span>]*convfac, vi[<span class="number">1</span>]*convfac, vi[<span class="number">2</span>]*convfac))    </span><br><span class="line">    <span class="comment"># close</span></span><br><span class="line">    ofile.close()    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">   <span class="keyword">import</span> sys</span><br><span class="line">   sys.exit(main())</span><br></pre></td></tr></table></figure></li></ul><h2 id="二维InSe有效质量计算过程"><a href="#二维InSe有效质量计算过程" class="headerlink" title="二维InSe有效质量计算过程"></a>二维InSe有效质量计算过程</h2><h3 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h3><p>&emsp;&emsp;由于计算过程中需要对二维InSe施加应变，但二维InSe原胞是六角结构，不容易施加应变。但是侯柱峰老师讲了对石墨烯原胞施加应变的方法，笔者认为虽然可行，但过于繁琐，故不采用此法。我们可以利用根号建模的方法讲六角结构InSe原胞变为方形结构的InSe超胞，然后施加应变可大大提高操作效率，但计算量的增加再可接受范围之内。下面给出关键的建模步骤，更多的根号建模部分可参考我的往期博客文章。</p><ul><li>切面并构建二维InSe原胞，同时调整晶格基矢，使其变为方形结构<br><img src="/image/2D-InSe-mobility.png" alt></li></ul><h3 id="能带计算"><a href="#能带计算" class="headerlink" title="能带计算"></a>能带计算</h3><h4 id="结构优化"><a href="#结构优化" class="headerlink" title="结构优化"></a>结构优化</h4><ul><li><p>INCAR</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SYSTEM = InSe             </span><br><span class="line">ISTART = 0       </span><br><span class="line">NWRITE = 2      </span><br><span class="line">PREC   = Accurate</span><br><span class="line">ENCUT  = 500</span><br><span class="line">GGA    = PE      </span><br><span class="line">NSW    = 200</span><br><span class="line">ISIF   = 3         </span><br><span class="line">ISYM   = 2        </span><br><span class="line">IBRION = 2      </span><br><span class="line">NELM   = 80        </span><br><span class="line">EDIFF  = 1E-05         </span><br><span class="line">EDIFFG = -0.01 </span><br><span class="line">ALGO   = Normal            </span><br><span class="line">LDIAG  = .TRUE.  </span><br><span class="line">LREAL  = .FALSE.          </span><br><span class="line">ISMEAR = 0         </span><br><span class="line">SIGMA  = 0.05 </span><br><span class="line">ICHARG = 2</span><br><span class="line">LWAVE  =  .FALSE.          </span><br><span class="line">LCHARG = .FALSE.</span><br><span class="line">NPAR   = 4</span><br></pre></td></tr></table></figure></li><li><p>KPOINTS</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Monkhorst Pack</span><br><span class="line">0</span><br><span class="line">Gamma</span><br><span class="line"> 11   7   1</span><br><span class="line">.0   .0   .0</span><br></pre></td></tr></table></figure></li><li><p>POSCAR</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Se   In</span><br><span class="line">  1.000</span><br><span class="line">       4.083622259999999      -0.000000000000001       0.000000000000000</span><br><span class="line">       0.000000000000000       7.073041233239241       0.000000000000000</span><br><span class="line">       0.000000000000000       0.000000000000000      25.377516849029359</span><br><span class="line">  Se   In</span><br><span class="line">  4   4</span><br><span class="line">Direct</span><br><span class="line">  0.5000005000000000   0.1666665000000000   0.5271404971815050   !Se</span><br><span class="line">  0.0000004999999997   0.6666665000000004   0.5271404971815050   !Se</span><br><span class="line">  0.5000005000000000   0.1666665000000000   0.3152396685456632   !Se</span><br><span class="line">  0.0000004999999997   0.6666665000000004   0.3152396685456632   !Se</span><br><span class="line">  0.4999995000000003   0.8333335000000002   0.4767849697227853   !In</span><br><span class="line"> -0.0000005000000000   0.3333335000000000   0.4767849697227853   !In</span><br><span class="line">  0.4999995000000003   0.8333335000000002   0.3655951960043828   !In</span><br><span class="line"> -0.0000005000000000   0.3333335000000000   0.3655951960043828   !In</span><br></pre></td></tr></table></figure></li><li><p>OPTCELL</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">100</span><br><span class="line">010</span><br><span class="line">000</span><br></pre></td></tr></table></figure></li><li><p>POTCAR</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat Se/POTCAR In_d/POTCAR &gt; POTCAR</span><br></pre></td></tr></table></figure></li></ul><h4 id="静态自洽"><a href="#静态自洽" class="headerlink" title="静态自洽"></a>静态自洽</h4><ul><li><p>INCAR</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SYSTEM = InSe             </span><br><span class="line">ISTART = 0       </span><br><span class="line">NWRITE = 2      </span><br><span class="line">PREC   = Accurate</span><br><span class="line">ENCUT  = 500</span><br><span class="line">GGA    = PE      </span><br><span class="line">NSW    = 0</span><br><span class="line">ISIF   = 2         </span><br><span class="line">ISYM   = 2       </span><br><span class="line">IBRION = -1      </span><br><span class="line">NELM   = 80        </span><br><span class="line">EDIFF  = 1E-05         </span><br><span class="line">EDIFFG = -0.01 </span><br><span class="line">ALGO   = Normal            </span><br><span class="line">LDIAG  = .TRUE.  </span><br><span class="line">LREAL  = .FALSE.          </span><br><span class="line">ISMEAR = 0         </span><br><span class="line">SIGMA  = 0.05 </span><br><span class="line">ICHARG = 2</span><br><span class="line">NPAR   = 4</span><br></pre></td></tr></table></figure></li><li><p>KPOINTS</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Monkhorst Pack</span><br><span class="line">0</span><br><span class="line">Gamma</span><br><span class="line"> 21   13   1</span><br><span class="line">.0   .0   .0</span><br></pre></td></tr></table></figure></li><li><p>POSCAR</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp CONTCAR scf/POSCAR</span><br></pre></td></tr></table></figure></li></ul><h4 id="能带计算-1"><a href="#能带计算-1" class="headerlink" title="能带计算"></a>能带计算</h4><ul><li><p>INCAR</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SYSTEM = InSe             </span><br><span class="line">ISTART = 1       </span><br><span class="line">NWRITE = 2      </span><br><span class="line">PREC   = Accurate</span><br><span class="line">ENCUT  = 500</span><br><span class="line">GGA    = PE      </span><br><span class="line">NSW    = 0</span><br><span class="line">ISIF   = 2         </span><br><span class="line">ISYM   = 2       </span><br><span class="line">IBRION = -1      </span><br><span class="line">NELM   = 80        </span><br><span class="line">EDIFF  = 1E-05         </span><br><span class="line">EDIFFG = -0.01 </span><br><span class="line">ALGO   = Normal            </span><br><span class="line">LDIAG  = .TRUE.  </span><br><span class="line">LREAL  = .FALSE.          </span><br><span class="line">ISMEAR = 0         </span><br><span class="line">SIGMA  = 0.05 </span><br><span class="line">ICHARG = 2</span><br><span class="line">LORBIT = 11</span><br><span class="line">LWAVE  =  .FALSE.          </span><br><span class="line">LCHARG = .FALSE.</span><br><span class="line">NPAR   = 4</span><br></pre></td></tr></table></figure></li><li><p>KPOINTS</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">k-points along high symmetry lines</span><br><span class="line">  80</span><br><span class="line">Line-mode</span><br><span class="line">Rec</span><br><span class="line">   0          0.5       0       !Y</span><br><span class="line">   0          0         0       !gamma</span><br><span class="line"></span><br><span class="line">   0          0         0       !gamma</span><br><span class="line">   0.5        0         0       !X</span><br><span class="line"></span><br><span class="line">   0.5        0         0       !X</span><br><span class="line">   0.5        0.5       0       !S</span><br><span class="line"></span><br><span class="line">   0.5        0.5       0       !S</span><br><span class="line">   0          0.5       0       !Y</span><br></pre></td></tr></table></figure></li></ul><h3 id="有效质量计算"><a href="#有效质量计算" class="headerlink" title="有效质量计算"></a>有效质量计算</h3><h4 id="计算说明"><a href="#计算说明" class="headerlink" title="计算说明"></a>计算说明</h4><p>&emsp;&emsp;对于包含了晶格周期性的有效质量的表达式，表示为如下表cp ./CHGCAR ./band/达式：<br><img src="/image/%E6%9C%89%E6%95%88%E8%B4%A8%E9%87%8F%E8%AE%A1%E7%AE%97%E5%85%AC%E5%BC%8F.png" alt="有效质量计算公cp ./CHGCAR ./band/式"><br>在带入物理量进行cp ./CHGCAR ./band/计算时，涉及单位制问题。一般写输入文件时，长度单位为Å；而程序输出的能带结构中，能量单位为eV，计算起来比较繁琐。<br>&emsp;&emsp;原子单位制有两种，一种为Hartree原子单位制，另一种为Rydberg单位制。这两种单位制的区别在于，Hartree单位制下基本物理量简单，电子电荷和质量都为1；而Rydberg单位制下薛定谔方程简单，系数为1。Hartree单位制下，一个长度单位等于1$\rm L_{bohr}$=0.5292Å，一个能量单位1$\rm E_{Hartree}$=27.21eV，约化普朗克常数$\hbar=1$。这样有效质量表达式中的约化普朗克常数就没了。</p><h4 id="根据原胞基矢和正倒格子基矢间对应关系，算出倒格子基矢"><a href="#根据原胞基矢和正倒格子基矢间对应关系，算出倒格子基矢" class="headerlink" title="根据原胞基矢和正倒格子基矢间对应关系，算出倒格子基矢"></a>根据原胞基矢和正倒格子基矢间对应关系，算出倒格子基矢</h4><p><img src="/image/emass-1.png" alt></p><h4 id="将VASP计算band时的k点坐标（分数坐标）转变为笛卡尔坐标"><a href="#将VASP计算band时的k点坐标（分数坐标）转变为笛卡尔坐标" class="headerlink" title="将VASP计算band时的k点坐标（分数坐标）转变为笛卡尔坐标"></a>将VASP计算band时的k点坐标（分数坐标）转变为笛卡尔坐标</h4><p><img src="/image/emass-2.png" alt></p><h4 id="根据两点间的距离公式，计算出各K点之间的距离"><a href="#根据两点间的距离公式，计算出各K点之间的距离" class="headerlink" title="根据两点间的距离公式，计算出各K点之间的距离"></a>根据两点间的距离公式，计算出各K点之间的距离</h4><p><img src="/image/emass-3.png" alt></p><h4 id="求每个K点的位置值"><a href="#求每个K点的位置值" class="headerlink" title="求每个K点的位置值"></a>求每个K点的位置值</h4><p>&emsp;&emsp;根据VASP计算能带时各高对称点间均匀撒点，求出每个点的位置值，第一个点设为0，本例中为80个点，在excel中进行操作。<br>&emsp;&emsp;因计算时均匀撒点80个，故有79个小间隔，对于|$\rm Y{\Gamma}$|来说，每个小间隔为0.002975210683544，故1-80个点的坐标值都可算出，以此类推，后面的点的坐标在前面点的基础上加上间隔即可。（注意：在80个点结束处和81个点开始处的值是一样的，后面的点类似。）<br><img src="/image/emass-4.png" alt></p><h4 id="画出价带顶和导带底的能带"><a href="#画出价带顶和导带底的能带" class="headerlink" title="画出价带顶和导带底的能带"></a>画出价带顶和导带底的能带</h4><p>&emsp;&emsp;在origin中找出能带数据的价带顶（VBM）和导带底（CBM）的数据，把上面计算得到的K点路径做为X轴，VBM和CBM作为Y轴，在origin中画图如下：<br><img src="/image/emass-5.png" alt></p><h4 id="计算有效质量（以x方向电子的有效质量为例）"><a href="#计算有效质量（以x方向电子的有效质量为例）" class="headerlink" title="计算有效质量（以x方向电子的有效质量为例）"></a>计算有效质量（以x方向电子的有效质量为例）</h4><p>&emsp;&emsp;首先换算能量单位，由eV换算为原子单位制下的能量CBM/27.21然后选取$\Gamma$-X方向上以Γ开始的4-8个点的数据画能带图，如下:<br><img src="/image/emass-6.png" alt><br>用$y=a+bx+cx^2$函数拟合，操作如下：<br><img src="/image/emass-7.png" alt><br><img src="/image/emass-8.png" alt><br><img src="/image/emass-9.png" alt><br>有效质量为$\frac{1}{2c}$，其中C=2.69188，算得有效质量为0.19 ，为电子沿x方向的质量。文献计算结果为0.19，符合一致。</p><h2 id="二维InSe载流子迁移率计算过程"><a href="#二维InSe载流子迁移率计算过程" class="headerlink" title="二维InSe载流子迁移率计算过程"></a>二维InSe载流子迁移率计算过程</h2><p>&emsp;&emsp;本文载流子迁移率的计算依据的是形变势理论，因此需要对二维InSe的x方向和y方向施加应变，施加应变的范围是-2%~2%。为了计算的准确性，计算过程中考虑了泊松效应，即对x轴施加应变时，固定x轴和z轴，优化y方向的晶格常数；对y轴施加应变时，固定y轴和z轴，优化x方向的晶格常数。</p><h3 id="能带计算过程"><a href="#能带计算过程" class="headerlink" title="能带计算过程"></a>能带计算过程</h3><h4 id="准备输入文件"><a href="#准备输入文件" class="headerlink" title="准备输入文件"></a>准备输入文件</h4><ul><li>首先建立mobility文件夹，然后在该文件夹下建立初始文件夹，命名为IS-x和IS-y，其结构目录如下：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tree mobility</span></span><br><span class="line">mobility</span><br><span class="line">├── IS-x</span><br><span class="line">│   ├── 2_scf</span><br><span class="line">│   │   ├── band</span><br><span class="line">│   │   │   ├── INCAR</span><br><span class="line">│   │   │   ├── KPOINTS</span><br><span class="line">│   │   │   └── POTCAR</span><br><span class="line">│   │   ├── INCAR</span><br><span class="line">│   │   ├── KPOINTS</span><br><span class="line">│   │   └── POTCAR</span><br><span class="line">│   ├── INCAR</span><br><span class="line">│   ├── KPOINTS</span><br><span class="line">│   ├── OPTCELL</span><br><span class="line">│   ├── pbs</span><br><span class="line">│   ├── POSCAR</span><br><span class="line">│   └── POTCAR</span><br><span class="line">├── IS-y</span><br><span class="line">│   ├── 2_scf</span><br><span class="line">│   │   ├── band</span><br><span class="line">│   │   │   ├── INCAR</span><br><span class="line">│   │   │   ├── KPOINTS</span><br><span class="line">│   │   │   └── POTCAR</span><br><span class="line">│   │   ├── INCAR</span><br><span class="line">│   │   ├── KPOINTS</span><br><span class="line">│   │   └── POTCAR</span><br><span class="line">│   ├── INCAR</span><br><span class="line">│   ├── KPOINTS</span><br><span class="line">│   ├── OPTCELL</span><br><span class="line">│   ├── pbs</span><br><span class="line">│   ├── POSCAR</span><br><span class="line">│   └── POTCAR</span><br><span class="line">└── mobility.sh</span><br></pre></td></tr></table></figure></li></ul><p>说明：</p><ul><li><p>pbs文件：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">PBS -N mobility</span></span><br><span class="line"><span class="meta">#</span><span class="bash">PBS -l nodes=1:ppn=16</span></span><br><span class="line"><span class="meta">#</span><span class="bash">PBS -m abe</span></span><br><span class="line"><span class="meta">#</span><span class="bash">PBS -j n</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#PBS -o job.log</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#PBS -e job.err</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">PBS -l walltime=120:00:00</span></span><br><span class="line">cd $PBS_O_WORKDIR</span><br><span class="line">date "+01 Today's date is: %D. The time execution %T" &gt;&gt; time.info</span><br><span class="line">mpirun -np 16 /your-path/vasp.5.4.4/build/std/vasp  &gt; log</span><br><span class="line">date "+02 Today's date is: %D. The time finish %T" &gt;&gt; time.info</span><br><span class="line">cp ./CONTCAR ./2_scf/POSCAR</span><br><span class="line">cd ./2_scf/</span><br><span class="line">date "+01 Today's date is: %D. The time execution %T" &gt;&gt; time.info</span><br><span class="line">mpirun /your-path/vasp.5.4.4/build/std/vasp  &gt; log</span><br><span class="line">date "+02 Today's date is: %D. The time finish %T" &gt;&gt; time.info</span><br><span class="line">cp ./CONTCAR ./band/POSCAR</span><br><span class="line">cp ./WAVECAR ./band/</span><br><span class="line">cd ./band/</span><br><span class="line">date "+01 Today's date is: %D. The time execution %T" &gt;&gt; time.info</span><br><span class="line">mpirun -np 16 /your-path/vasp.5.4.4/build/std/vasp  &gt; log</span><br><span class="line">date "+02 Today's date is: %D. The time finish %T" &gt;&gt; time.info</span><br></pre></td></tr></table></figure></li><li><p>OPTCELL文件</p></li></ul><p>—X 方向—</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">000</span><br><span class="line">010</span><br><span class="line">000</span><br></pre></td></tr></table></figure><p>—Y 方向—</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">100</span><br><span class="line">000</span><br><span class="line">000</span><br></pre></td></tr></table></figure><ul><li><p>自洽计算时INCAR文件中加入计算真空能级的命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">LVHAR = .TRUE.</span><br></pre></td></tr></table></figure></li><li><p>mobility.sh文件</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">3 November, 2018</span></span><br><span class="line"><span class="meta">#</span><span class="bash">To use it: bash mobility.sh</span></span><br><span class="line">mkdir mobility-x</span><br><span class="line">cd mobility-x</span><br><span class="line">x=4.083622259999999                           #"x" stands for the lattice constant in x direction</span><br><span class="line">for i in $(seq 0.98 0.005 1.02)                #"i" defines the range of strain</span><br><span class="line">do</span><br><span class="line">cp -r ../IS-x ./$i                               #"IS-x" stands for the origin file </span><br><span class="line">sed -i "3s/$x/$(echo "$x*$i"|bc)/g" $i/POSCAR</span><br><span class="line">cd $i</span><br><span class="line">qsub ./pbs</span><br><span class="line">cd $OLDPWD</span><br><span class="line">done</span><br><span class="line">cd ../</span><br><span class="line">mkdir mobility-y</span><br><span class="line">cd mobility-y</span><br><span class="line">y=7.073041233239241                            #"y" stands for the lattice constant in y direction</span><br><span class="line">for j in $(seq 0.98 0.005 1.02)                #"j" defines the range of strain</span><br><span class="line">do</span><br><span class="line">cp -r ../IS-y ./$j                               #"IS-y" stands for the origin file </span><br><span class="line">sed -i "4s/$y/$(echo "$y*$j"|bc)/g" $j/POSCAR</span><br><span class="line">cd $j</span><br><span class="line">qsub ./pbs</span><br><span class="line">cd $OLDPWD</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ul><p>Note：计算过程中需要根据自己的体系修改x和y方向的晶格常数值</p><ul><li>其余文件与前面计算能带过程的输入文件相同，在mobility文件夹下输入bash mobility.sh文件即可完成全部计算</li></ul><h3 id="数据处理（以x方向为例）"><a href="#数据处理（以x方向为例）" class="headerlink" title="数据处理（以x方向为例）"></a>数据处理（以x方向为例）</h3><h4 id="计算形变势常数-E-1"><a href="#计算形变势常数-E-1" class="headerlink" title="计算形变势常数$E_1$"></a>计算形变势常数$E_1$</h4><ul><li>以真空能级为参考，确定VBM和CBM的位置。思路是读取能带计算结果中的最高占据态VBM和最低非占据态CBM（未扣除费米能级）的结果，然后减去真空能级就可得到我们需要的结果。</li><li>对得到的数据以应变量为x轴（-0.02~0.02），VBM和CBM为y轴画图，然后在origin中做线性拟合，即可得到形变势常数，最终结果如下：<br><img src="/image/mobility-1.png" alt="形变势常数"><h4 id="计算弹性模量-C-2D-（以x方向为例）"><a href="#计算弹性模量-C-2D-（以x方向为例）" class="headerlink" title="计算弹性模量$C_{2D}$（以x方向为例）"></a>计算弹性模量$C_{2D}$（以x方向为例）</h4></li><li>读取每个应变下的体系总能量，然后画图。</li><li>对其做二次函数拟合，然后带入$C_{2D}$的计算公式，并对单位做换算后，得到的结果如下：<br><img src="/image/mobility-2.png" alt><h4 id="计算迁移率"><a href="#计算迁移率" class="headerlink" title="计算迁移率"></a>计算迁移率</h4>&emsp;&emsp;现已得到有效质量、形变势常数和弹性模量，依据载流子迁移率计算公式，并注意单位换算，即可得到载流子的迁移率具体数值。计算结果可参考我的<a href="https://pubs.acs.org/doi/abs/10.1021/acs.jpcc.9b01175" target="_blank" rel="noopener">JPCC</a>文章，如下：<br><img src="/image/mobility-3.png" alt="迁移率计算结果"></li></ul><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>&emsp;&emsp;因时间关系，本文写作比较仓促，文中一些数据处理的细节没有详细给出，并且可能存在一些小的错误，欢迎大家阅读过程中积极指出，以便在后续更正过程中改正。另外，本文公式较多，但mathjax环境对公式编辑不是很友好，排版过程中公式很容易乱，故而部分公式以插图的形式放入了本文中，看起来版面搅乱，后续会想办法处理。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] Bardeen J, Shockley W. Deformation Potentials and Mobilities in Non-Polar Crystals[J]. Physical Review, 2008, 80(1):72-80.</p>]]></content>
      
      
      <categories>
          
          <category> vasp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mobility </tag>
            
            <tag> effective mass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vasp计算光学性质</title>
      <link href="2019/10/12/vasp-optics/"/>
      <url>2019/10/12/vasp-optics/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;本文以二维InSe材料为例，详细介绍了二维InSe的光学性质计算过程。</p><h2 id="结构优化"><a href="#结构优化" class="headerlink" title="结构优化"></a>结构优化</h2><h4 id="INCAR"><a href="#INCAR" class="headerlink" title="INCAR"></a>INCAR</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SYSTEM = 2D_InSe</span><br><span class="line">ISTART = 0</span><br><span class="line">NWRITE = 2   </span><br><span class="line">PREC   = Accurate</span><br><span class="line">ENCUT  = 500</span><br><span class="line">GGA    = PE</span><br><span class="line">NSW    = 200</span><br><span class="line">ISIF   = 3</span><br><span class="line">ISYM   = 2</span><br><span class="line">NBLOCK = 1   </span><br><span class="line">KBLOCK = 1</span><br><span class="line">IBRION = 2</span><br><span class="line">NELM   = 80     </span><br><span class="line">EDIFF  = 1E-05</span><br><span class="line">EDIFFG = -0.01 </span><br><span class="line">ALGO   = Normal</span><br><span class="line">LDIAG  = .TRUE.</span><br><span class="line">LREAL  = .FALSE.</span><br><span class="line">ISMEAR = 0</span><br><span class="line">SIGMA  = 0.02</span><br><span class="line">ICHARG = 2</span><br><span class="line">LPLANE = .TRUE.</span><br><span class="line">NPAR   = 4</span><br><span class="line">LSCALU = .FALSE.</span><br><span class="line">NSIM   = 4</span><br><span class="line">LWAVE  = .FALSE.</span><br><span class="line">LCHARG = .FALSE.</span><br><span class="line">ICORELEVEL =  1</span><br></pre></td></tr></table></figure><h4 id="POSCAR"><a href="#POSCAR" class="headerlink" title="POSCAR"></a>POSCAR</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2D_InSe</span><br><span class="line">1.0</span><br><span class="line">        4.0836000443         0.0000000000         0.0000000000</span><br><span class="line">       -2.0418000221         3.5365013772         0.0000000000</span><br><span class="line">        0.0000000000         0.0000000000        25.3775005341</span><br><span class="line">   In   Se</span><br><span class="line">    2    2</span><br><span class="line">Direct</span><br><span class="line">     0.666670026         0.333330010         0.589979992</span><br><span class="line">     0.666670026         0.333330010         0.478789968</span><br><span class="line">     0.333329978         0.666669998         0.428439986</span><br><span class="line">     0.333329978         0.666669998         0.640340007</span><br></pre></td></tr></table></figure><h4 id="KPOINTS"><a href="#KPOINTS" class="headerlink" title="KPOINTS"></a>KPOINTS</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Monkhorst Pack of Gamma centered</span><br><span class="line">0</span><br><span class="line">Gamma</span><br><span class="line"> 13    13    1</span><br><span class="line"> 0.0   0.0   0.0</span><br></pre></td></tr></table></figure><h4 id="POTCAR"><a href="#POTCAR" class="headerlink" title="POTCAR"></a>POTCAR</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat In_d/POTCAR Se/POTCAR &gt; POTCAR</span><br></pre></td></tr></table></figure><h4 id="OPTCELL"><a href="#OPTCELL" class="headerlink" title="OPTCELL"></a>OPTCELL</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">100</span><br><span class="line">110</span><br><span class="line">000</span><br></pre></td></tr></table></figure><h2 id="静态自洽"><a href="#静态自洽" class="headerlink" title="静态自洽"></a>静态自洽</h2><h4 id="INCAR-1"><a href="#INCAR-1" class="headerlink" title="INCAR"></a>INCAR</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SYSTEM = 2D_InSe</span><br><span class="line">ISTART = 0</span><br><span class="line">NWRITE = 2   </span><br><span class="line">PREC   = Accurate</span><br><span class="line">ENCUT  = 500</span><br><span class="line">GGA    = PE </span><br><span class="line">NSW    = 0</span><br><span class="line">ISIF   = 2</span><br><span class="line">ISYM   = 2</span><br><span class="line">NBLOCK = 1   </span><br><span class="line">KBLOCK = 1</span><br><span class="line">IBRION = -1 </span><br><span class="line">NELM   = 80   </span><br><span class="line">EDIFF  = 1E-05</span><br><span class="line">EDIFFG = -0.01 </span><br><span class="line">ALGO   = Normal</span><br><span class="line">LDIAG  = .TRUE.</span><br><span class="line">LREAL  = .FALSE.</span><br><span class="line">ISMEAR = 0</span><br><span class="line">SIGMA  = 0.02</span><br><span class="line">ICHARG = 2</span><br><span class="line">LPLANE = .TRUE.</span><br><span class="line">NPAR   = 4</span><br><span class="line">LSCALU = .FALSE.</span><br><span class="line">NSIM   = 4</span><br><span class="line">LWAVE  = .TRUE.</span><br><span class="line">LCHARG = .TRUE.</span><br><span class="line">ICORELEVEL =  1</span><br></pre></td></tr></table></figure><h4 id="POSCAR-1"><a href="#POSCAR-1" class="headerlink" title="POSCAR"></a>POSCAR</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp CONTCAR POSCAR</span><br></pre></td></tr></table></figure><h4 id="KPOINTS-1"><a href="#KPOINTS-1" class="headerlink" title="KPOINTS"></a>KPOINTS</h4><p>&emsp;&emsp;自洽计算要求有密的k网格点，在计算条件允许的情况下要求自洽的k网格点大致为优化时的2倍左右。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Monkhorst Pack of Gamma centered</span><br><span class="line">0</span><br><span class="line">Gamma</span><br><span class="line"> 25    25    1</span><br><span class="line"> 0.0   0.0   0.0</span><br></pre></td></tr></table></figure><h2 id="光学性质计算"><a href="#光学性质计算" class="headerlink" title="光学性质计算"></a>光学性质计算</h2><h4 id="INCAR-2"><a href="#INCAR-2" class="headerlink" title="INCAR"></a>INCAR</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SYSTEM = 2D_InSe</span><br><span class="line">ISTART = 1</span><br><span class="line">NWRITE = 2   </span><br><span class="line">PREC   = Accurate</span><br><span class="line">ENCUT  = 500</span><br><span class="line">GGA    = PE</span><br><span class="line">NSW    = 0</span><br><span class="line">ISIF   = 2</span><br><span class="line">ISYM   = 2</span><br><span class="line">NBLOCK = 1   </span><br><span class="line">KBLOCK = 1</span><br><span class="line">IBRION = -1</span><br><span class="line">NELM   = 80     </span><br><span class="line">EDIFF  = 1E-05</span><br><span class="line">EDIFFG = -0.01 </span><br><span class="line">ALGO   = Normal</span><br><span class="line">LDIAG  = .TRUE.</span><br><span class="line">LREAL  = .FALSE.</span><br><span class="line">ISMEAR = 0</span><br><span class="line">SIGMA  = 0.02</span><br><span class="line">ICHARG = 11</span><br><span class="line">LPLANE = .TRUE.</span><br><span class="line">NPAR   = 4</span><br><span class="line">LSCALU = .FALSE.</span><br><span class="line">NSIM   = 4</span><br><span class="line">LWAVE  = .FALSE.</span><br><span class="line">LCHARG = .FALSE.</span><br><span class="line">LOPTICS = .TRUE.</span><br><span class="line">NBANDS  =  72 </span><br><span class="line">NEDOS   =  2000</span><br><span class="line">CSHIFT  =  0.1</span><br></pre></td></tr></table></figure><h4 id="KPOINTS-2"><a href="#KPOINTS-2" class="headerlink" title="KPOINTS"></a>KPOINTS</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Monkhorst Pack of Gamma centered</span><br><span class="line">0</span><br><span class="line">Gamma</span><br><span class="line"> 29    29    1</span><br><span class="line"> 0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p><font color="blue"> Note：对于光学性质的计算，也就是计算材料的介电函数，需要足够多的空带和致密的K网格点，使其达到非常好的收敛状态，我们才可以得到合理的光学性质；因此通常计算中，一般设置NBANDS为默认值（可在自洽的OUTCAR中以关键字NBANDS查找到）的2-3倍，K网格点为自洽值或适当增加 </font></p><ul><li><p>其余的POSCAR、POTCAR不变，并要求有WAVECAR和CHGCAR文件，以供读取</p><h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3></li><li><p>使用optics.sh脚本得到介电函数的实部和虚部</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># extract image and real parts of dielectric function from vasprun.xml</span></span><br><span class="line">awk <span class="string">'BEGIN&#123;i=1&#125; /&lt;imag&gt;/,\</span></span><br><span class="line"><span class="string">                /&lt;\/imag&gt;/ \</span></span><br><span class="line"><span class="string">                 &#123;a[i]=$2 ; b[i]=$3 ; c[i]=$4; d[i]=$5 ; e[i]=$6 ; f[i]=$7; g[i]=$8; i=i+1&#125; \</span></span><br><span class="line"><span class="string">     END&#123;for (j=12;j&lt;i-3;j++) print a[j],b[j],c[j],d[j],e[j],f[j],g[j]&#125;'</span> vasprun.xml &gt; IMAG.in</span><br><span class="line"><span class="comment">#awk 'BEGIN&#123;i=1&#125; /imag/,\</span></span><br><span class="line"><span class="comment">#                /\/imag/ \</span></span><br><span class="line"><span class="comment">#                 &#123;a[i]=$2 ; b[i]=$3 ; c[i]=$4; d[i]=$5 ; e[i]=$6 ; f[i]=$7; g[i]=$8; i=i+1&#125; \</span></span><br><span class="line"><span class="comment">#     END&#123;for (j=12;j&lt;i-3;j++) print a[j],b[j],c[j],d[j],e[j],f[j],g[j]&#125;' vasprun.xml &gt; IMAG.in</span></span><br><span class="line">awk <span class="string">'BEGIN&#123;i=1&#125; /&lt;real&gt;/,\</span></span><br><span class="line"><span class="string">                /&lt;\/real&gt;/ \</span></span><br><span class="line"><span class="string">                 &#123;a[i]=$2 ; b[i]=$3 ; c[i]=$4; d[i]=$5 ; e[i]=$6 ; f[i]=$7; g[i]=$8; i=i+1&#125; \</span></span><br><span class="line"><span class="string">     END&#123;for (j=12;j&lt;i-3;j++) print a[j],b[j],c[j],d[j],e[j],f[j],g[j]&#125;'</span> vasprun.xml &gt; REAL.in</span><br></pre></td></tr></table></figure></li><li><p>使用<a href="https://sourceforge.net/projects/vaspkit/" target="_blank" rel="noopener">vaspkit-1.00</a>后处理软件得到光学性质</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vaspkit-1.00</span><br><span class="line">            \\\///</span><br><span class="line">           / _  _ \       Hey, you must know what you are doing.</span><br><span class="line">         (| (.)(.) |)     Otherwise you might get wrong results!</span><br><span class="line"> +-----.OOOo--()--oOOO.------------------------------------------+</span><br><span class="line"> |             VASPKIT Version: 1.00 (16 Sep. 2019)              |</span><br><span class="line"> |       A Pre- and Post-Processing Program <span class="keyword">for</span> VASP Code        |</span><br><span class="line"> |       Core Developers: Vei WANG, Nan XU, Jin-Cheng LIU        |</span><br><span class="line"> |    Please send Bugs and Suggestions to vaspkit@gmail.com      |</span><br><span class="line"> +-----.oooO-----------------------------------------------------+</span><br><span class="line">        (   )   Oooo.</span><br><span class="line">         \ (    (   )</span><br><span class="line">          \_)    ) /</span><br><span class="line">                (_/</span><br><span class="line"> ===================== Structural Options ========================</span><br><span class="line"> 1)  VASP Input Files Generator    2)  Elastic-Properties</span><br><span class="line"> 3)  K-Path Generator              4)  Structure Editor</span><br><span class="line"> 5)  Catalysis-ElectroChemi Kit    6)  Symmetry Search</span><br><span class="line"> ===================== Electronic Options ========================</span><br><span class="line"> 11) Density-of-States             21) DFT Band-Structure</span><br><span class="line"> 23) 3D Band-Structure             25) Hybrid-DFT Band-Structure</span><br><span class="line"> 26) Fermi-Surface                 28) Band-Structure Unfolding</span><br><span class="line"> =========== Charge &amp; Potential &amp; Wavefunction Options ===========</span><br><span class="line"> 31) Charge &amp; Spin Density         42) Potential-Related</span><br><span class="line"> 51) Wave-Function Analysis</span><br><span class="line"> ====================== Misc Utilities ===========================</span><br><span class="line"> 71) Optical-Properties            72) Molecular-Dynamics Kit</span><br><span class="line"> 73) VASP2BoltzTraP Interface</span><br><span class="line"> 91) Semiconductor Calculator      92) 2D-Materials Kit</span><br><span class="line"> 0)  Quit</span><br><span class="line"> ------------&gt;&gt;</span><br><span class="line">71</span><br><span class="line"> ============================ Optical Options ====================</span><br><span class="line"> 711) Linear Optical Spectrums</span><br><span class="line"> 712) Transition Dipole Moment at Single Kpoint</span><br><span class="line"> 713) Transition Dipole Moment <span class="keyword">for</span> Band-Structure</span><br><span class="line"> 716) Total Joint Density of States</span><br><span class="line"> 717) Partial Joint Density of States</span><br><span class="line"> 0)   Quit</span><br><span class="line"> 9)   Back</span><br><span class="line"> ------------&gt;&gt;</span><br><span class="line">711</span><br><span class="line"> +-------------------------- Warm Tips --------------------------+</span><br><span class="line">         See an example <span class="keyword">in</span> vaspkit/examples/Si_bse_optical.</span><br><span class="line">     This module is NOT suitable <span class="keyword">for</span> low-dimensional materials.</span><br><span class="line"> +---------------------------------------------------------------+</span><br><span class="line"> ===================== Energy Unit ===============================</span><br><span class="line"> Which Energy Unit Do You Want to Adopt?</span><br><span class="line"> 1) eV</span><br><span class="line"> 2) nm</span><br><span class="line"> 3) THz</span><br><span class="line"> ------------&gt;&gt;</span><br><span class="line">1</span><br><span class="line">  --&gt;&gt; (01) Reading IMAG.in and REAL.in Files...</span><br><span class="line">  --&gt;&gt; (02) Written Optical Files Succesfully!</span><br><span class="line"> +---------------------------------------------------------------+</span><br><span class="line"> |                         * DISCLAIMER *                        |</span><br><span class="line"> |      Check the Consistency of Your Results <span class="keyword">if</span> Necessary       |</span><br><span class="line"> |         Any Suggestions <span class="keyword">for</span> Improvements are Welcome          |</span><br><span class="line"> |                     (^.^) GOOD LUCK (^.^)                     |</span><br><span class="line"> |---------------------------------------------------------------|</span><br><span class="line"> | We Would Appreciate <span class="keyword">if</span> You Cite <span class="keyword">in</span> Your Research with VASPKIT.|</span><br><span class="line"> | Ref: V. Wang, N. Xu, J.C. LIU, G. Tang, et al, VASPKIT: A Pre-|</span><br><span class="line"> | and Post-Processing Program <span class="keyword">for</span> VASP Code, arXiv:1908.08269.  |</span><br><span class="line"> +---------------------------------------------------------------+</span><br></pre></td></tr></table></figure></li><li><p>得到的光学性质包括</p></li></ul><ol><li><p>光吸收系数ABSORB.dat</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#energy      xx(cm^-1)       yy(cm^-1)       zz(cm^-1)       xy(cm^-1)       yz(cm^-1)       zx(cm^-1)</span></span><br><span class="line">  0.000      0.0000E+00      0.0000E+00      0.0000E+00      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.020      0.3820E+00      0.3820E+00      0.5428E+00      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.040      0.1415E+01      0.1415E+01      0.2057E+01      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.060      0.3268E+01      0.3268E+01      0.4714E+01      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.080      0.5885E+01      0.5885E+01      0.8238E+01      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.100      0.9265E+01      0.9265E+01      0.1301E+02      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.120      0.1307E+02      0.1307E+02      0.1885E+02      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.141      0.1792E+02      0.1792E+02      0.2540E+02      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.161      0.2353E+02      0.2353E+02      0.3336E+02      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.181      0.2990E+02      0.2990E+02      0.4240E+02      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.201      0.3701E+02      0.3702E+02      0.5250E+02      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.221      0.4431E+02      0.4431E+02      0.6369E+02      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.241      0.5290E+02      0.5290E+02      0.7596E+02      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.261      0.6223E+02      0.6223E+02      0.8927E+02      0.0000E+00      0.0000E+00      0.0000E+00</span><br><span class="line">  0.281      0.7233E+02      0.7234E+02      0.1037E+03      0.0000E+00      0.0000E+00      0.0000E+00</span><br></pre></td></tr></table></figure></li><li><p>能量损失谱ENERGYLOSSSPECTRUM.dat</p></li><li><p>消光系数EXTINCTION.dat</p></li><li><p>反射系数REFLECTIVITY.dat</p></li><li><p>折射系数REFRACTIVE.dat</p></li></ol><ul><li>可以选择自己感兴趣的性质进一步作图，例如对于吸收系数作图如下<br><img src="/image/2D_InSe-absorption.png" alt="2D_InSe-absorption"></li></ul>]]></content>
      
      
      <categories>
          
          <category> vasp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> optics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QE计算能带过程</title>
      <link href="2019/10/11/qe-band/"/>
      <url>2019/10/11/qe-band/</url>
      
        <content type="html"><![CDATA[<p>说明：</p><ol><li>以二维InSe原胞为例</li><li>QE版本：qe-6.4.1</li><li>赝势：SSSP</li></ol><h2 id="结构优化"><a href="#结构优化" class="headerlink" title="结构优化"></a>结构优化</h2><ul><li>通过Materials studio 2018的建模功能切出二维InSe原胞，如图所示，并导出为InSe.cif格式。<br><img src="/image/2D_InSe.png" alt="二维InSe原胞"></li><li>使用VESTA软件打开InSe.cif文件，然后File$\rightarrow$Export Date，保存格式选择vasp，原子坐标选择Fractional coordinates，最后点击确定。<h3 id="QE输入文件结构"><a href="#QE输入文件结构" class="headerlink" title="QE输入文件结构"></a>QE输入文件结构</h3>&emsp;&emsp;QE的结构优化主要使用的是pw.x模块，该模块包含非常多的输入参数，建议在计算过程中逐步学习，无需一次性学完所有命令，即使学完也是徒劳，因为几乎无法记住。<br>&emsp;&emsp;结构优化在QE中是比较诟病的一个地方，优化速度非常慢，对于大体系实现结构优化是非常慢的，如果计算的体系包含较多的原子，建议使用VASP。QE结合EPW计算材料的与声子有关的性质比较合适，且这类计算一般不需要建立超胞，能够达到计算目的。总之，根据计算的任务和目的合理选择第一性原理计算软件是比较明智的。</li><li>pw.x模块输入文件结构<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&amp;CONTROL</span><br><span class="line">  ...</span><br><span class="line">/</span><br><span class="line">&amp;SYSTEM</span><br><span class="line">  ...</span><br><span class="line">/</span><br><span class="line">&amp;ELECTRONS</span><br><span class="line">  ...</span><br><span class="line">/</span><br><span class="line">[ &amp;IONS</span><br><span class="line">  ...</span><br><span class="line"> / ]</span><br><span class="line">[ &amp;CELL</span><br><span class="line">  ...</span><br><span class="line"> / ]</span><br><span class="line">ATOMIC_SPECIES</span><br><span class="line"> X  Mass_X  PseudoPot_X</span><br><span class="line"> Y  Mass_Y  PseudoPot_Y</span><br><span class="line"> Z  Mass_Z  PseudoPot_Z</span><br><span class="line">ATOMIC_POSITIONS &#123; alat | bohr | crystal | angstrom | crystal_sg &#125;</span><br><span class="line">  X 0.0  0.0  0.0  &#123;if_pos(1) if_pos(2) if_pos(3)&#125;</span><br><span class="line">  Y 0.5  0.0  0.0</span><br><span class="line">  Z O.0  0.2  0.2</span><br><span class="line">K_POINTS &#123; tpiba | automatic | crystal | gamma | tpiba_b | crystal_b | tpiba_c | crystal_c &#125;</span><br><span class="line"><span class="keyword">if</span> (gamma)</span><br><span class="line">   nothing to <span class="built_in">read</span></span><br><span class="line"><span class="keyword">if</span> (automatic)</span><br><span class="line">   nk1, nk2, nk3, k1, k2, k3</span><br><span class="line"><span class="keyword">if</span> (not automatic)</span><br><span class="line">   nks</span><br><span class="line">   xk_x, xk_y, xk_z,  wk</span><br><span class="line">[ CELL_PARAMETERS &#123; alat | bohr | angstrom &#125;</span><br><span class="line">   v1(1) v1(2) v1(3)</span><br><span class="line">   v2(1) v2(2) v2(3)</span><br><span class="line">   v3(1) v3(2) v3(3) ]</span><br><span class="line">[ OCCUPATIONS</span><br><span class="line">   f_inp1(1)  f_inp1(2)  f_inp1(3) ... f_inp1(10)</span><br><span class="line">   f_inp1(11) f_inp1(12) ... f_inp1(nbnd)</span><br><span class="line"> [ f_inp2(1)  f_inp2(2)  f_inp2(3) ... f_inp2(10)</span><br><span class="line">   f_inp2(11) f_inp2(12) ... f_inp2(nbnd) ] ]</span><br><span class="line">[ CONSTRAINTS</span><br><span class="line">   nconstr  &#123; constr_tol &#125;</span><br><span class="line">   constr_type(.)   constr(1,.)   constr(2,.) [ constr(3,.)   constr(4,.) ] &#123; constr_target(.) &#125; ]</span><br><span class="line">[ ATOMIC_FORCES</span><br><span class="line">   label_1 Fx(1) Fy(1) Fz(1)</span><br><span class="line">   .....</span><br><span class="line">   label_n Fx(n) Fy(n) Fz(n) ]</span><br></pre></td></tr></table></figure></li></ul><h3 id="二维InSe原胞结构优化输入文件"><a href="#二维InSe原胞结构优化输入文件" class="headerlink" title="二维InSe原胞结构优化输入文件"></a>二维InSe原胞结构优化输入文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&amp;CONTROL</span><br><span class="line"> calculation=<span class="string">'vc-relax'</span>, !　vc-relax | relax</span><br><span class="line"> restart_mode=<span class="string">'from_scratch'</span>, ! normal used</span><br><span class="line"> prefix=<span class="string">'InSe'</span>, ! prepended to input/output filenames</span><br><span class="line"> pseudo_dir=<span class="string">'../pseudo/'</span>, ! directory containing pseudopotential files</span><br><span class="line"> outdir=<span class="string">'../tmp/'</span>, ! input, temporary, output files are found <span class="keyword">in</span> this directory</span><br><span class="line"> forc_conv_thr=1d-5, ! forces convergence threshold 1d-03</span><br><span class="line">/</span><br><span class="line">&amp;SYSTEM</span><br><span class="line">  ibrav = 0 ! Bravais-lattice index </span><br><span class="line">  nat=4 ! number of atoms <span class="keyword">in</span> the unit cell</span><br><span class="line">  ntyp=2 ! number of types of atoms <span class="keyword">in</span> the unit cell </span><br><span class="line"> ecutwfc=60.0, ! kinetic energy cutoff (Ry) <span class="keyword">for</span> wavefunctions </span><br><span class="line"> ecutrho=720.0, ! Kinetic energy cutoff (Ry) <span class="keyword">for</span> charge density</span><br><span class="line">/</span><br><span class="line">&amp;ELECTRONS</span><br><span class="line"> mixing_beta=0.7, ! mixing factor <span class="keyword">for</span> self-consistency</span><br><span class="line"> conv_thr=1d-8, ! Convergence threshold <span class="keyword">for</span> selfconsistency 1d-6</span><br><span class="line">/</span><br><span class="line">&amp;IONS</span><br><span class="line"> ion_dynamics=<span class="string">'bfgs'</span>, ! Specify the <span class="built_in">type</span> of ionic dynamics</span><br><span class="line">/</span><br><span class="line">&amp;CELL</span><br><span class="line"> cell_dynamics=<span class="string">'bfgs'</span>, ! Specify the <span class="built_in">type</span> of dynamics <span class="keyword">for</span> the cell</span><br><span class="line"> press=0.0, ! </span><br><span class="line"> press_conv_thr=0.5, ! Convergence threshold on the pressure <span class="keyword">for</span> variable cell</span><br><span class="line"> cell_dofree=2Dxy, ! <span class="keyword">for</span> 2D materials</span><br><span class="line">/</span><br><span class="line">CELL_PARAMETERS &#123;angstrom&#125; ! specify the structure</span><br><span class="line">        4.0836000443         0.0000000000         0.0000000000</span><br><span class="line">       -2.0418000221         3.5365013772         0.0000000000</span><br><span class="line">        0.0000000000         0.0000000000        25.3775005341</span><br><span class="line">ATOMIC_SPECIES ! </span><br><span class="line">  In   114.80   In.pbe-dn-rrkjus_psl.0.2.2.UPF</span><br><span class="line">  Se   78.960   Se_pbe_v1.uspp.F.UPF</span><br><span class="line">ATOMIC_POSITIONS &#123;crystal&#125;</span><br><span class="line">In     0.333333347         0.666666695         0.555589958</span><br><span class="line">In     0.333333347         0.666666695         0.444410042</span><br><span class="line">Se     0.666666674         0.333333347         0.394049989</span><br><span class="line">Se     0.666666674         0.333333347         0.605950011</span><br><span class="line">K_POINTS automatic</span><br><span class="line">12 12 1 0 0 0</span><br></pre></td></tr></table></figure><h3 id="结构优化的经验总结"><a href="#结构优化的经验总结" class="headerlink" title="结构优化的经验总结"></a>结构优化的经验总结</h3><ul><li><p>pw.x模块用于结构优化时，对于体系的对称性非常敏感，也就是QE自身不会寻找体系的对称性，只能依靠手动输入体系的对称性，这点与VASP相比是非常欠缺的，因为VASP是可以自己寻找对称性的。对于二维InSe原胞，有对称性与无对称性的结构优化使用时间相差了近５倍。</p></li><li><p>查看优化所用时间</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep PWSCF InSe.vc-relax.out | tail -n 1</span><br></pre></td></tr></table></figure></li><li><p>输入对称性</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PWSCF        :   4m10.53s CPU   4m51.82s WALL</span><br></pre></td></tr></table></figure></li><li><p>没有输入对称性</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PWSCF        :   21m5.53s CPU   4m51.82s WALL</span><br></pre></td></tr></table></figure></li><li><p>对于离子的受力，一般使用准牛顿迭代算法</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ion_dynamics=<span class="string">'bfgs'</span></span><br></pre></td></tr></table></figure></li><li><p>pwscf模块做结构优化时，对于二维材料无需重新编译软件，即可做到不优化真空层，这点比VASP方便，具体设置如下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cell_dofreeCHARACTER</span><br><span class="line">Default:<span class="string">'all'</span></span><br><span class="line">Select <span class="built_in">which</span> of the cell parameters should be moved:            </span><br><span class="line"><span class="string">'all'</span> :</span><br><span class="line"> all axis and angles are moved            </span><br><span class="line"><span class="string">'ibrav'</span> :</span><br><span class="line"> all axis and angles are moved, but the lattice but be representable with the initial ibrav choice            </span><br><span class="line"><span class="string">'x'</span> :</span><br><span class="line"> only the x component of axis 1 (v1_x) is moved            </span><br><span class="line"><span class="string">'y'</span> :</span><br><span class="line"> only the y component of axis 2 (v2_y) is moved            </span><br><span class="line"><span class="string">'z'</span> :</span><br><span class="line"> only the z component of axis 3 (v3_z) is moved            </span><br><span class="line"><span class="string">'xy'</span> :</span><br><span class="line"> only v1_x and v2_y are moved            </span><br><span class="line"><span class="string">'xz'</span> :</span><br><span class="line"> only v1_x and v3_z are moved            </span><br><span class="line"><span class="string">'yz'</span> :</span><br><span class="line"> only v2_y and v3_z are moved            </span><br><span class="line"><span class="string">'xyz'</span> :</span><br><span class="line"> only v1_x, v2_y, v3_z are moved           </span><br><span class="line"><span class="string">'shape'</span> :</span><br><span class="line"> all axis and angles, keeping the volume fixed            </span><br><span class="line"><span class="string">'volume'</span> :</span><br><span class="line"> the volume changes, keeping all angles fixed (i.e. only celldm(1) changes)</span><br><span class="line"><span class="string">'2Dxy'</span> :</span><br><span class="line"> only x and y components are allowed to change            </span><br><span class="line"><span class="string">'2Dshape'</span> :</span><br><span class="line"> as above, keeping the area <span class="keyword">in</span> xy plane fixed            </span><br><span class="line"><span class="string">'epitaxial_ab'</span> :</span><br><span class="line"> fix axis 1 and 2 <span class="keyword">while</span> allowing axis 3 to move            </span><br><span class="line"><span class="string">'epitaxial_ac'</span> :</span><br><span class="line"> fix axis 1 and 3 <span class="keyword">while</span> allowing axis 2 to move            </span><br><span class="line"><span class="string">'epitaxial_bc'</span> :</span><br><span class="line"> fix axis 2 and 3 <span class="keyword">while</span> allowing axis 1 to move</span><br></pre></td></tr></table></figure></li></ul><p><font color="blue"> BEWARE: if axis are not orthogonal, some of these options do not work (symmetry is broken). If you are not happy with them, edit subroutine init_dofree in file Modules/cell_base.f90 </font></p><h2 id="结构自洽计算"><a href="#结构自洽计算" class="headerlink" title="结构自洽计算"></a>结构自洽计算</h2><h3 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&amp;CONTROL</span><br><span class="line"> calculation=<span class="string">'scf'</span>,</span><br><span class="line"> restart_mode=<span class="string">'from_scratch'</span>,</span><br><span class="line"> prefix=<span class="string">'InSe'</span>,</span><br><span class="line"> pseudo_dir=<span class="string">'../pseudo/'</span>,</span><br><span class="line"> outdir=<span class="string">'../tmp/'</span>,</span><br><span class="line">/</span><br><span class="line">&amp;SYSTEM</span><br><span class="line">  ibrav = 0</span><br><span class="line">  nat=4</span><br><span class="line">  ntyp=2</span><br><span class="line"> ecutwfc=60.0,</span><br><span class="line"> ecutrho=480.0,</span><br><span class="line">/</span><br><span class="line">&amp;ELECTRONS</span><br><span class="line"> mixing_beta=0.7,</span><br><span class="line"> conv_thr=1d-8,</span><br><span class="line">/</span><br><span class="line">CELL_PARAMETERS &#123;angstrom&#125;</span><br><span class="line">   4.081910567   0.000000000   0.000000000</span><br><span class="line">  -2.040955283   3.535038247   0.000000000</span><br><span class="line">   0.000000000   0.000000000  25.377500534</span><br><span class="line">ATOMIC_SPECIES</span><br><span class="line">  In   114.80   In.pbe-dn-rrkjus_psl.0.2.2.UPF</span><br><span class="line">  Se   78.960   Se_pbe_v1.uspp.F.UPF</span><br><span class="line">ATOMIC_POSITIONS &#123;crystal&#125;</span><br><span class="line">In       0.333333347   0.666666695   0.555619036</span><br><span class="line">In       0.333333347   0.666666695   0.444380964</span><br><span class="line">Se       0.666666674   0.333333347   0.394016400</span><br><span class="line">Se       0.666666674   0.333333347   0.605983600</span><br><span class="line">K_POINTS automatic</span><br><span class="line">12 12 1 0 0 0</span><br></pre></td></tr></table></figure><h4 id="ecutwfc测试"><a href="#ecutwfc测试" class="headerlink" title="ecutwfc测试"></a>ecutwfc测试</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ecutwfc <span class="keyword">in</span> 50 55 60 65 70 75 80 ; <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># self-consistent calculation</span></span><br><span class="line">cat &gt; InSe.scf.in.<span class="variable">$ecutwfc</span> &lt;&lt; EOF</span><br><span class="line">&amp;CONTROL</span><br><span class="line"> calculation=<span class="string">'scf'</span>,</span><br><span class="line"> restart_mode=<span class="string">'from_scratch'</span>,</span><br><span class="line"> prefix=<span class="string">'InSe'</span>,</span><br><span class="line"> pseudo_dir=<span class="string">'../pseudo/'</span>,</span><br><span class="line"> outdir=<span class="string">'../test_tmp/'</span>,</span><br><span class="line">/</span><br><span class="line">&amp;SYSTEM</span><br><span class="line">  ibrav = 0</span><br><span class="line">  nat=4</span><br><span class="line">  ntyp=2</span><br><span class="line"> ecutwfc=<span class="variable">$ecutwfc</span>,</span><br><span class="line"> ecutrho=$((8*<span class="variable">$ecutwfc</span>)),</span><br><span class="line">/</span><br><span class="line">&amp;ELECTRONS</span><br><span class="line"> mixing_beta=0.7,</span><br><span class="line"> conv_thr=1d-8,</span><br><span class="line">/</span><br><span class="line">CELL_PARAMETERS &#123;angstrom&#125;</span><br><span class="line">   4.081910567   0.000000000   0.000000000</span><br><span class="line">  -2.040955283   3.535038247   0.000000000</span><br><span class="line">   0.000000000   0.000000000  25.377500534</span><br><span class="line">ATOMIC_SPECIES</span><br><span class="line">  In   114.80   In.pbe-dn-rrkjus_psl.0.2.2.UPF</span><br><span class="line">  Se   78.960   Se_pbe_v1.uspp.F.UPF</span><br><span class="line">ATOMIC_POSITIONS &#123;crystal&#125;</span><br><span class="line">In       0.333333347   0.666666695   0.555619036</span><br><span class="line">In       0.333333347   0.666666695   0.444380964</span><br><span class="line">Se       0.666666674   0.333333347   0.394016400</span><br><span class="line">Se       0.666666674   0.333333347   0.605983600</span><br><span class="line">K_POINTS automatic</span><br><span class="line">12 12 1 0 0 0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">mpirun -np 16 pw.x &lt; InSe.scf.in.<span class="variable">$ecutwfc</span> &gt; InSe.scf.out.<span class="variable">$ecutwfc</span></span><br><span class="line"></span><br><span class="line">grep -e <span class="string">'kinetic-energy cutoff'</span> -e ! InSe.scf.out.<span class="variable">$ecutwfc</span> | \</span><br><span class="line">      awk <span class="string">'/kinetic/&#123;ecutwfc=$(NF-1)&#125;/!/&#123;print ecutwfc, $(NF-1)&#125;'</span> &gt;&gt; InSe.etot_vs_ecutwfc</span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>测试结果：<br><img src="/image/qe-encut.png" alt="encut"></p><h4 id="kpoints测试"><a href="#kpoints测试" class="headerlink" title="kpoints测试"></a>kpoints测试</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> kpoints <span class="keyword">in</span> 4 6 8 10 12 14 16 18 20 ; <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># self-consistent calculation</span></span><br><span class="line">cat &gt; InSe.scf.in.<span class="variable">$kpoints</span> &lt;&lt; EOF</span><br><span class="line">&amp;CONTROL</span><br><span class="line"> calculation=<span class="string">'scf'</span>,</span><br><span class="line"> restart_mode=<span class="string">'from_scratch'</span>,</span><br><span class="line"> prefix=<span class="string">'InSe'</span>,</span><br><span class="line"> pseudo_dir=<span class="string">'../pseudo/'</span>,</span><br><span class="line"> outdir=<span class="string">'../test_tmp/'</span>,</span><br><span class="line">/</span><br><span class="line">&amp;SYSTEM</span><br><span class="line">  ibrav = 0</span><br><span class="line">  nat=4</span><br><span class="line">  ntyp=2</span><br><span class="line"> ecutwfc=70,</span><br><span class="line"> ecutrho=840,</span><br><span class="line">/</span><br><span class="line">&amp;ELECTRONS</span><br><span class="line"> mixing_beta=0.7,</span><br><span class="line"> conv_thr=1d-8,</span><br><span class="line">/</span><br><span class="line">CELL_PARAMETERS &#123;angstrom&#125;</span><br><span class="line">   4.081910567   0.000000000   0.000000000</span><br><span class="line">  -2.040955283   3.535038247   0.000000000</span><br><span class="line">   0.000000000   0.000000000  25.377500534</span><br><span class="line">ATOMIC_SPECIES</span><br><span class="line">  In   114.80   In.pbe-dn-rrkjus_psl.0.2.2.UPF</span><br><span class="line">  Se   78.960   Se_pbe_v1.uspp.F.UPF</span><br><span class="line">ATOMIC_POSITIONS &#123;crystal&#125;</span><br><span class="line">In       0.333333347   0.666666695   0.555619036</span><br><span class="line">In       0.333333347   0.666666695   0.444380964</span><br><span class="line">Se       0.666666674   0.333333347   0.394016400</span><br><span class="line">Se       0.666666674   0.333333347   0.605983600</span><br><span class="line">K_POINTS automatic</span><br><span class="line"><span class="variable">$kpoints</span> <span class="variable">$kpoints</span> 1 0 0 0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">mpirun -np 16 pw.x &lt; InSe.scf.in.<span class="variable">$kpoints</span> &gt; InSe.scf.out.<span class="variable">$kpoints</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"<span class="variable">$kpoints</span> \c"</span> &gt;&gt; InSe.etot_vs_kpoints</span><br><span class="line">grep ! InSe.scf.out.<span class="variable">$kpoints</span> | \</span><br><span class="line">      awk <span class="string">'/!/&#123;print $(NF-1)&#125;'</span> &gt;&gt; InSe.etot_vs_kpoints</span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>测试结果：<br><img src="/image/qe-kpoints.png" alt="kpoints"></p><h3 id="结构自洽计算总结"><a href="#结构自洽计算总结" class="headerlink" title="结构自洽计算总结"></a>结构自洽计算总结</h3><p>&emsp;&emsp;通过对ecutwfc和kpoints的测试，我们选定ecutwfc的值为80 Ry，kpoints的值为８ ８ 1，用这个值返回去重新优化结构和自洽，然后开始计算下面的性质。</p><h2 id="能带计算"><a href="#能带计算" class="headerlink" title="能带计算"></a>能带计算</h2><h3 id="输入文件-1"><a href="#输入文件-1" class="headerlink" title="输入文件"></a>输入文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&amp;CONTROL</span><br><span class="line"> calculation=<span class="string">'bands'</span>,</span><br><span class="line"> restart_mode=<span class="string">'from_scratch'</span>,</span><br><span class="line"> prefix=<span class="string">'InSe'</span>,</span><br><span class="line"> pseudo_dir=<span class="string">'../pseudo/'</span>,</span><br><span class="line"> outdir=<span class="string">'../tmp/'</span>,</span><br><span class="line"> verbosity=<span class="string">'high'</span>,</span><br><span class="line">/</span><br><span class="line">&amp;SYSTEM</span><br><span class="line">  ibrav = 0</span><br><span class="line">  nat=4</span><br><span class="line">  ntyp=2</span><br><span class="line"> ecutwfc=80.0,</span><br><span class="line"> ecutrho=960.0,</span><br><span class="line"> nbnd=26,</span><br><span class="line">/</span><br><span class="line">&amp;ELECTRONS</span><br><span class="line"> mixing_beta=0.7,</span><br><span class="line"> conv_thr=1d-8,</span><br><span class="line">/</span><br><span class="line">CELL_PARAMETERS &#123;angstrom&#125;</span><br><span class="line">   4.085963663  -0.000000000   0.000000000</span><br><span class="line">  -2.042981832   3.538548331   0.000000000</span><br><span class="line">   0.000000000   0.000000000  25.377500534</span><br><span class="line">ATOMIC_SPECIES</span><br><span class="line">  In   114.80   In.pbe-dn-rrkjus_psl.0.2.2.UPF</span><br><span class="line">  Se   78.960   Se_pbe_v1.uspp.F.UPF</span><br><span class="line">ATOMIC_POSITIONS &#123;crystal&#125;</span><br><span class="line">In       0.333333347   0.666666695   0.555623200</span><br><span class="line">In       0.333333347   0.666666695   0.444376800</span><br><span class="line">Se       0.666666674   0.333333347   0.394099781</span><br><span class="line">Se       0.666666674   0.333333347   0.605900219</span><br><span class="line"> K_POINTS crystal_b</span><br><span class="line">4</span><br><span class="line">0.5     0.0     0.0 100 !M</span><br><span class="line">0.0     0.0     0.0 100 !G</span><br><span class="line">0.33333 0.33333 0.0 100 !K</span><br><span class="line">0.5     0.0     0.0 100 !M</span><br></pre></td></tr></table></figure><h3 id="后处理文件band2-in文件"><a href="#后处理文件band2-in文件" class="headerlink" title="后处理文件band2.in文件"></a>后处理文件band2.in文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&amp;bands</span><br><span class="line">prefix=<span class="string">'InSe'</span>,</span><br><span class="line">outdir=<span class="string">'../tmp/'</span>,</span><br><span class="line">filband=<span class="string">'InSebands.dat'</span>,</span><br><span class="line">lsym=.<span class="literal">true</span>.</span><br><span class="line">/</span><br></pre></td></tr></table></figure><h3 id="画能带图的后处理程序plotband-x"><a href="#画能带图的后处理程序plotband-x" class="headerlink" title="画能带图的后处理程序plotband.x"></a>画能带图的后处理程序plotband.x</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; plotband.x InSebands.dat</span><br><span class="line">Reading   26 bands at    301 k-points</span><br><span class="line">file with representations not compatible with bands</span><br><span class="line">Range:  -16.4500    5.4820eV  Emin, Emax &gt; -4 4</span><br><span class="line">high-symmetry point:  0.5000 0.2887 0.0000   x coordinate   0.0000</span><br><span class="line">high-symmetry point:  0.0000 0.0000 0.0000   x coordinate   0.5774</span><br><span class="line">high-symmetry point:  0.3333 0.5773 0.0000   x coordinate   1.2440</span><br><span class="line">high-symmetry point:  0.5000 0.2887 0.0000   x coordinate   1.5773</span><br><span class="line">output file (gnuplot/xmgr) &gt; InSebands.plot</span><br><span class="line">bands <span class="keyword">in</span> gnuplot/xmgr format written to file InSebands.plot   </span><br><span class="line">output file (ps) &gt; InSebands.ps</span><br><span class="line">Efermi &gt; -1.5444</span><br><span class="line">deltaE, reference E (<span class="keyword">for</span> tics) 2 -1.5444</span><br><span class="line">bands <span class="keyword">in</span> PostScript format written to file InSebands.ps</span><br></pre></td></tr></table></figure><p>说明：QE自带的画图程序plotband.x画出的能带图几乎无法直接用于文章中，因此这步处理意义不大。可以直接使用band.x计算出的InSebands.dat.gnu文件，通过origin等专业的绘图软件绘制能带图。</p><h3 id="能带图计算结果"><a href="#能带图计算结果" class="headerlink" title="能带图计算结果"></a>能带图计算结果</h3><p><img src="/image/2D_InSe-band_qe.png" alt="2D_InSe-band_qe"></p>]]></content>
      
      
      <categories>
          
          <category> Quantum ESPRESSO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PWSCF </tag>
            
            <tag> vc-relax </tag>
            
            <tag> band structure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vasp计算声子谱</title>
      <link href="2019/10/11/vasp-phonon/"/>
      <url>2019/10/11/vasp-phonon/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;在第一性原理计算过程中考察体系稳定性是经常遇到的一个问题，也是大部分审稿人容易提问的地方；通常，使用声子谱研究体系的动力学稳定性，使用分子动力学研究体系的热稳定性；另外，可以借助于一些其他方法进一步说明体系的稳定性，例如研究钙钛矿体系时通过离子半径判断稳定性，研究异质结时通过计算结合能判断稳定性等。</p><h2 id="声子谱计算方法"><a href="#声子谱计算方法" class="headerlink" title="声子谱计算方法"></a>声子谱计算方法</h2><p>&emsp;&emsp;声子谱的计算主要有两种方法，一种是直接法，另一种是微扰密度泛函方法（DFPT）。<br>&emsp;&emsp;直接法，或称frozen-phonon方法，是通过在优化后的平衡结构中引入原子位移，计算作用在原子上的Hellmann-Feynman力，进而由动力学矩阵算出声子色散曲线。直接法的缺陷在于它要求声子波矢与原胞边界(super size)正交，或者原胞足够大使得Hellmann-Feynman力在原胞外可以忽略不计。这使得对于复杂系统，如对称性高的晶体、合金、超晶格等材料需要采用超原胞。超原胞的采用使计算量急剧增加，极大的限制了该方法的使用。<br>&emsp;&emsp;1987年，Baroni、Giannozzi和Testa提出了DFPT方法。DFPT通过计算系统能量对外场微扰的响应来求出晶格动力学性质。该方法最大的优势在于它不限定微扰的波矢与原胞边界正交，不需要超原胞也可以对任意波矢求解。Castep、Vasp等采用的是一种linear response theory 的方法（或者称为 density perturbation functional theory，DFPT），直接计算出原子的移动而导致的势场变化，再进一步构造出动力学矩阵。进而计算出声子谱。</p><h2 id="计算环境的搭建"><a href="#计算环境的搭建" class="headerlink" title="计算环境的搭建"></a>计算环境的搭建</h2><p>&emsp;&emsp;计算所用的软件为VASP与phonopy code。</p><h3 id="phonopy-code编译"><a href="#phonopy-code编译" class="headerlink" title="phonopy code编译"></a>phonopy code编译</h3><ul><li><p>搭建Anaconda环境，下载链接，点<a href="https://www.anaconda.com/distribution/" target="_blank" rel="noopener">这里</a></p></li><li><p>安装Anaconda</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash Anaconda3-2019.07-Linux-x86_64.sh</span><br></pre></td></tr></table></figure></li><li><p>写入环境变量</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"export PATH=/……/anaconda3/bin:<span class="variable">$PATH</span>"</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li></ul><p><font color="blue"> Note: /……/表示自己服务器路径 </font></p><ul><li><p>下载phonopy code，点<a href="https://pypi.org/project/phonopy/2.2.0/#files" target="_blank" rel="noopener">这里</a></p></li><li><p>编译phonopy code</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar zxvf phonopy-2.2.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> phonopy-2.2.0</span><br><span class="line">python3 setup.py install --user</span><br></pre></td></tr></table></figure></li><li><p>写入phonopy的环境变量</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"export PATH=/……/phonopy-2.2.0/build/scripts-3.7:<span class="variable">$PATH</span>"</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li></ul><p><font color="blue"> Note: /……/表示自己服务器路径 </font></p><ul><li>检查phonopy code是否安装完成<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ phonopy</span><br></pre></td></tr></table></figure></li></ul><p><img src="/image/phonopy.png" alt="phonopy"></p><h2 id="声子谱计算步骤"><a href="#声子谱计算步骤" class="headerlink" title="声子谱计算步骤"></a>声子谱计算步骤</h2><h3 id="结构优化"><a href="#结构优化" class="headerlink" title="结构优化"></a>结构优化</h3><p>&emsp;&emsp;声子谱的计算需要对原胞结构做高精度的充分优化，否则很容易出现虚频；下面以二维InSe为例，详细说明声子谱的计算步骤。</p><h4 id="INCAR"><a href="#INCAR" class="headerlink" title="INCAR"></a>INCAR</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SYSTEM = 2D_InSe</span><br><span class="line">ISTART = 0</span><br><span class="line">NWRITE = 2   </span><br><span class="line">PREC   = Accurate</span><br><span class="line">ENCUT  = 500</span><br><span class="line">GGA    = PE</span><br><span class="line">NSW    = 200</span><br><span class="line">ISIF   = 3</span><br><span class="line">ISYM   = 2</span><br><span class="line">NBLOCK = 1   </span><br><span class="line">KBLOCK = 1</span><br><span class="line">IBRION = 2</span><br><span class="line">NELM   = 80     </span><br><span class="line">EDIFF  = 1E-08</span><br><span class="line">EDIFFG = -0.001 </span><br><span class="line">ALGO   = Normal</span><br><span class="line">LDIAG  = .TRUE.</span><br><span class="line">LREAL  = .FALSE.</span><br><span class="line">ISMEAR = 0</span><br><span class="line">SIGMA  = 0.02</span><br><span class="line">ICHARG = 2</span><br><span class="line">LPLANE = .TRUE.</span><br><span class="line">NPAR   = 4</span><br><span class="line">LSCALU = .FALSE.</span><br><span class="line">NSIM   = 4</span><br><span class="line">LWAVE  = .FALSE.</span><br><span class="line">LCHARG = .FALSE.</span><br><span class="line">ICORELEVEL =  1</span><br></pre></td></tr></table></figure><h4 id="POSCAR"><a href="#POSCAR" class="headerlink" title="POSCAR"></a>POSCAR</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2D_InSe</span><br><span class="line">1.0</span><br><span class="line">        4.0836000443         0.0000000000         0.0000000000</span><br><span class="line">       -2.0418000221         3.5365013772         0.0000000000</span><br><span class="line">        0.0000000000         0.0000000000        25.3775005341</span><br><span class="line">   In   Se</span><br><span class="line">    2    2</span><br><span class="line">Direct</span><br><span class="line">     0.666670026         0.333330010         0.589979992</span><br><span class="line">     0.666670026         0.333330010         0.478789968</span><br><span class="line">     0.333329978         0.666669998         0.428439986</span><br><span class="line">     0.333329978         0.666669998         0.640340007</span><br></pre></td></tr></table></figure><h4 id="KPOINTS"><a href="#KPOINTS" class="headerlink" title="KPOINTS"></a>KPOINTS</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Monkhorst Pack of Gamma centered</span><br><span class="line">0</span><br><span class="line">Gamma</span><br><span class="line"> 13    13    1</span><br><span class="line"> 0.0   0.0   0.0</span><br></pre></td></tr></table></figure><h4 id="POTCAR"><a href="#POTCAR" class="headerlink" title="POTCAR"></a>POTCAR</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat In_d/POTCAR Se/POTCAR &gt; POTCAR</span><br></pre></td></tr></table></figure><h4 id="OPTCELL"><a href="#OPTCELL" class="headerlink" title="OPTCELL"></a>OPTCELL</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">100</span><br><span class="line">110</span><br><span class="line">000</span><br></pre></td></tr></table></figure><h3 id="通过phonopy-code建立超胞"><a href="#通过phonopy-code建立超胞" class="headerlink" title="通过phonopy code建立超胞"></a>通过phonopy code建立超胞</h3><ul><li><p>将优化后的结构文件拷贝为POSCAR</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp CONTCAR POSCAR</span><br></pre></td></tr></table></figure></li><li><p>建立超胞</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ phonopy -d --dim=<span class="string">"4 4 1"</span></span><br><span class="line">$ ls</span><br><span class="line">phonopy_disp.yaml  POSCAR-002  POSCAR-005  POSCAR-008  POSCAR-011  POSCAR-014  SPOSCAR</span><br><span class="line">POSCAR             POSCAR-003  POSCAR-006  POSCAR-009  POSCAR-012  POSCAR-015</span><br><span class="line">POSCAR-001         POSCAR-004  POSCAR-007  POSCAR-010  POSCAR-013  POSCAR-016</span><br></pre></td></tr></table></figure></li></ul><p><font color="red"> Note: 建立超胞之前，一定要在MS中找好对称性，否则会增加大量的计算量 </font></p><ul><li>POSCAR和SPOSCAR的重命名<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp POSCAR POSCAR-unitcell</span><br><span class="line">cp SPOSCAR POSCAR</span><br></pre></td></tr></table></figure></li></ul><h3 id="计算力学Hessian矩阵"><a href="#计算力学Hessian矩阵" class="headerlink" title="计算力学Hessian矩阵"></a>计算力学Hessian矩阵</h3><p>&emsp;&emsp;力学Hessian矩阵可由VASP计算得到，该矩阵保存于VASP的输出文件vasprun.xml中；计算过程中KPOINTS文件根据服务器计算能力，可适当增加，POTCAR文件无需改变，INCAR文件设置如下：</p><ul><li>INCAR<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SYSTEM = 2D_InSe</span><br><span class="line">ISTART = 0</span><br><span class="line">NWRITE = 2</span><br><span class="line">IBRION = 8 </span><br><span class="line">NSW    = 1</span><br><span class="line">IALGO  = 38</span><br><span class="line">NELM   = 200</span><br><span class="line">EDIFF  = 1E-07</span><br><span class="line">EDIFFG = -0.001</span><br><span class="line">ISMEAR = 0</span><br><span class="line">SIGMA  = 0.02</span><br><span class="line">ENCUT  = 500</span><br><span class="line">PREC   = Accurate</span><br><span class="line">LREAL  = .FALSE.</span><br><span class="line">LWAVE  = .FALSE.</span><br><span class="line">LCHARG = .FALSE.</span><br><span class="line">ADDGRID = .TRUE</span><br></pre></td></tr></table></figure></li></ul><h3 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h3><ul><li><p>根据vasprun.xml文件生成力学文件FORCE_CONSTRAINS</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">phonopy --<span class="built_in">fc</span> vasprun.xml</span><br></pre></td></tr></table></figure></li><li><p>编辑band.conf文件，该文件给出了高对称点路径的信息</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ATOM_NAME = In Se</span><br><span class="line">DIM = 4 4 1</span><br><span class="line">BAND = 0.5 0.0 0.0  0.0 0.0 0.0  0.333333 0.333333 0.0  0.5 0.0 0.0</span><br><span class="line">FORCE_CONSTANTS = READ</span><br></pre></td></tr></table></figure></li></ul><p><font color="blue"> Note:<br> line 1：元素名称，顺序与POSCAR保持一致<br> line 2：建立超胞的大小<br> line 3：高对称点路径，每组高对称点之间用两个空格隔开<br> line 4：表示读取力常数文件FORCE_CONSTANTS<br> </font></p><ul><li>生成band.yaml文件<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">phonopy --dim=<span class="string">"4 4 1"</span> -c POSCAR-unitcell band.conf</span><br></pre></td></tr></table></figure></li></ul><p><font color="blue"> Note：4 4 1为建立超胞的大小 </font></p><ul><li>得到声子谱数据文件PBAND.dat文件<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">phonopy-bandplot  --gnuplot&gt; PBAND.dat</span><br></pre></td></tr></table></figure></li></ul><p><font color="blue"> Note: 高对称点标注说明：phonopy软件默认在两个高对称点之间打点51个，且在PBAND.dat中每组高对称点数据以一个空行分割，据此即可得到完整的声子谱图像 </font></p><ul><li><p>计算结果<br><img src="/image/InSe-our-calculation.jpg" alt="InSe-our-Claculation"></p></li><li><p>文献结果<br><img src="/image/InSe-Reference.png" alt="InSe-Reference"></p></li></ul><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>&emsp;&emsp;如果计算完的声子谱其他地方都好，就是在Γ点有一点点虚频，那么这个材料很可能是稳定的，只是你优化做得不够好，进一步提高优化的精度可消除这一点点虚频。<br>&emsp;&emsp;对于二维材料，如果在Γ点出现很小的虚频，基本可以认为这个材料是稳定的，大部分二维材料都会有此现象；尤其是VASP结合phonopy code计算二维材料的声子谱在Γ点更是容易出现虚频；使用Quantum-ESPRESSO的PWSCF和PH模块计算声子谱对于内存的需求较小一些，且对于二维材料的声子谱计算更友好一些，后期会详细介绍Quantum-ESPRESSO计算声子谱的具体步骤。</p>]]></content>
      
      
      <categories>
          
          <category> vasp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phonon spectrum </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VASP计算能带和态密度</title>
      <link href="2019/10/04/vasp-band-structure-dos/"/>
      <url>2019/10/04/vasp-band-structure-dos/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;本文以二维InSe材料为例，详细介绍了二维材料的结构优化、静态自洽，能带计算和态密度计算的计算过程和注意事项。<br>&emsp;&emsp;为了对二维材料的晶格常数进行充分优化，且不对真空层厚度做优化，需要修改vasp安装包～/vasp.5.4.4/src/constr_cell_relax.F源文件，修改的具体说明可以参考清华大学刘锦程博士的<a href="http://blog.wangruixing.cn/2019/05/05/constr/" target="_blank" rel="noopener">博文</a>，编译时直接覆盖掉原文件即可，新的constr_cell_relax.F文件如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">!-----------------------------------------------------------------------</span><br><span class="line">!</span><br><span class="line">! At present, VASP does not allow to relax the cellshape selectively</span><br><span class="line">! i.e. for instance only cell relaxation in x direction.</span><br><span class="line">! To be more precisse, this behaviour can not be achived via the INCAR</span><br><span class="line">! or POSCAR file.</span><br><span class="line">! However, it is possible to set selected components of the stress tensor</span><br><span class="line">! to zero.</span><br><span class="line">! The most conveninent position to do this is the routines </span><br><span class="line">! CONSTR_CELL_RELAX  (constraint cell relaxation).</span><br><span class="line">! FCELL contains the forces on the basis vectors.</span><br><span class="line">! These forces are used to modify the basis vectors according</span><br><span class="line">! to the following equations:</span><br><span class="line">!</span><br><span class="line">!      A_OLD(1:3,1:3)=A(1:3,1:3) ! F90 style </span><br><span class="line">!      DO J=1,3</span><br><span class="line">!      DO I=1,3</span><br><span class="line">!      DO K=1,3</span><br><span class="line">!        A(I,J)=A(I,J) + FCELL(I,K)*A_OLD(K,J)*STEP_SIZE</span><br><span class="line">!      ENDDO</span><br><span class="line">!      ENDDO</span><br><span class="line">!      ENDDO</span><br><span class="line">! where A holds the basis vectors (in cartesian coordinates).</span><br><span class="line">!</span><br><span class="line">!-----------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">      SUBROUTINE CONSTR_CELL_RELAX(FCELL)</span><br><span class="line">      USE prec</span><br><span class="line">      REAL(q) FCELL(3,3)</span><br><span class="line"></span><br><span class="line">!     just one simple example</span><br><span class="line">!     relaxation in x directions only</span><br><span class="line">!      SAVE=FCELL(1,1)</span><br><span class="line">!      FCELL=0   ! F90 style: set the whole array to zero</span><br><span class="line">!      FCELL(1,1)=SAVE</span><br><span class="line">!     relaxation in z direction only</span><br><span class="line">!      SAVE=FCELL(3,3)</span><br><span class="line">!      FCELL=0   ! F90 style: set the whole array to zero</span><br><span class="line">!      FCELL(3,3)=SAVE</span><br><span class="line"></span><br><span class="line">      LOGICAL FILFLG</span><br><span class="line">      INTEGER ICELL(3,3)</span><br><span class="line">      INQUIRE(FILE=&apos;OPTCELL&apos;,EXIST=FILFLG)</span><br><span class="line">      IF (FILFLG) THEN</span><br><span class="line">         OPEN(67,FILE=&apos;OPTCELL&apos;,FORM=&apos;FORMATTED&apos;,STATUS=&apos;OLD&apos;)</span><br><span class="line">         DO J=1,3</span><br><span class="line">            READ(67,&quot;(3I1)&quot;) (ICELL(I,J),I=1,3)</span><br><span class="line">         ENDDO</span><br><span class="line">         CLOSE(67)</span><br><span class="line">         DO J=1,3</span><br><span class="line">         DO I=1,3</span><br><span class="line">            IF (ICELL(I,J)==0) FCELL(I,J)=0.0</span><br><span class="line">         ENDDO</span><br><span class="line">         ENDDO</span><br><span class="line">      ENDIF</span><br><span class="line"></span><br><span class="line">      RETURN</span><br><span class="line">      END SUBROUTINE</span><br></pre></td></tr></table></figure><p>使用方法：在INCAR中设置ISIF = 3，同时在计算目录下新建OPTCELL文件，该文件为3$\times$3矩阵，在对称性满足的情况下可以对体系的9个自由度做弛豫。例如对于正交的二维材料，OPTCELL文件可写为：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">100  # 优化x方向</span><br><span class="line">010  # 优化y方向</span><br><span class="line">000  # 不优化z方向</span><br></pre></td></tr></table></figure><h2 id="结构优化"><a href="#结构优化" class="headerlink" title="结构优化"></a>结构优化</h2><h3 id="输入文件"><a href="#输入文件" class="headerlink" title="输入文件"></a>输入文件</h3><h4 id="INCAR"><a href="#INCAR" class="headerlink" title="INCAR"></a>INCAR</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SYSTEM = 2D_InSe</span><br><span class="line">ISTART = 0</span><br><span class="line">NWRITE = 2   </span><br><span class="line">PREC   = Accurate</span><br><span class="line">ENCUT  = 500</span><br><span class="line">GGA    = PE</span><br><span class="line">NSW    = 200</span><br><span class="line">ISIF   = 3</span><br><span class="line">ISYM   = 2</span><br><span class="line">NBLOCK = 1   </span><br><span class="line">KBLOCK = 1</span><br><span class="line">IBRION = 2</span><br><span class="line">NELM   = 80     </span><br><span class="line">EDIFF  = 1E-05</span><br><span class="line">EDIFFG = -0.01 </span><br><span class="line">ALGO   = Normal</span><br><span class="line">LDIAG  = .TRUE.</span><br><span class="line">LREAL  = .FALSE.</span><br><span class="line">ISMEAR = 0</span><br><span class="line">SIGMA  = 0.02</span><br><span class="line">ICHARG = 2</span><br><span class="line">LPLANE = .TRUE.</span><br><span class="line">NPAR   = 4</span><br><span class="line">LSCALU = .FALSE.</span><br><span class="line">NSIM   = 4</span><br><span class="line">LWAVE  = .FALSE.</span><br><span class="line">LCHARG = .FALSE.</span><br><span class="line">ICORELEVEL =  1</span><br></pre></td></tr></table></figure><h4 id="POSCAR"><a href="#POSCAR" class="headerlink" title="POSCAR"></a>POSCAR</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2D_InSe</span><br><span class="line">1.0</span><br><span class="line">        4.0836000443         0.0000000000         0.0000000000</span><br><span class="line">       -2.0418000221         3.5365013772         0.0000000000</span><br><span class="line">        0.0000000000         0.0000000000        25.3775005341</span><br><span class="line">   In   Se</span><br><span class="line">    2    2</span><br><span class="line">Direct</span><br><span class="line">     0.666670026         0.333330010         0.589979992</span><br><span class="line">     0.666670026         0.333330010         0.478789968</span><br><span class="line">     0.333329978         0.666669998         0.428439986</span><br><span class="line">     0.333329978         0.666669998         0.640340007</span><br></pre></td></tr></table></figure><h4 id="KPOINTS"><a href="#KPOINTS" class="headerlink" title="KPOINTS"></a>KPOINTS</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Monkhorst Pack of Gamma centered</span><br><span class="line">0</span><br><span class="line">Gamma</span><br><span class="line"> 13    13    1</span><br><span class="line"> 0.0   0.0   0.0</span><br></pre></td></tr></table></figure><h4 id="POTCAR"><a href="#POTCAR" class="headerlink" title="POTCAR"></a>POTCAR</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat In_d/POTCAR Se/POTCAR &gt; POTCAR</span><br></pre></td></tr></table></figure><h4 id="OPTCELL"><a href="#OPTCELL" class="headerlink" title="OPTCELL"></a>OPTCELL</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">100</span><br><span class="line">110</span><br><span class="line">000</span><br></pre></td></tr></table></figure><h3 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h3><ul><li>判断是否达到收敛精度<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep <span class="string">"reached required accuracy"</span> <span class="built_in">log</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reached required accuracy - stopping structural energy minimisation</span><br></pre></td></tr></table></figure><ul><li>产看体系总能<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep TOTEN OUTCAR | tail -n 1</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">free  energy   TOTEN  =       -14.21463638 eV</span><br></pre></td></tr></table></figure><ul><li>对比优化前后晶格常数的变化</li></ul><p>—优化前—</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4.0836000443         0.0000000000         0.0000000000</span><br><span class="line">-2.0418000221         3.5365013772         0.0000000000</span><br><span class="line">0.0000000000         0.0000000000        25.3775005341</span><br></pre></td></tr></table></figure><p>—优化后—</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4.0830388054550770    0.0000000000000000    0.0000000000000000</span><br><span class="line">-2.0415069539304227    3.5360297046777429    0.0000000000000000</span><br><span class="line">0.0000000000000000    0.0000000000000000   25.3775005341000011</span><br></pre></td></tr></table></figure><p><font color="blue"> 分析：对比发现优化后a轴和b轴方向的晶格常数略微发生了变化，而c轴方向的真空层厚度并没有发生变化，说明使用固定基矢的方法是可以对二维材料做充分优化的 </font></p><ul><li>现使用只优化原子位置、不优化晶格常数（ISIF=2）的方法对二维InSe重新进行优化，对比体系总能变化情况</li></ul><p>—ISIF=3—</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">free  energy   TOTEN  =       -14.21463638 eV</span><br></pre></td></tr></table></figure><p>—ISIF=2—</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">free  energy   TOTEN  =       -14.21464001 eV</span><br></pre></td></tr></table></figure><p><font color="blue"> 分析：对比发现，两个总能几乎没有差别，说明对于初始结构比较好的体系来说，两种优化方式基本没有差别；但是对于初始结构不是很好的体系，这两种优化方法应该是有差别的，本人推荐使用固定基矢的方法充分优化二维材料晶格；另外，对于材料施加应变，且需要考虑泊松效应时，固定基矢优化是非常好的方式 </font></p><h2 id="截断能和k网格点收敛性测试"><a href="#截断能和k网格点收敛性测试" class="headerlink" title="截断能和k网格点收敛性测试"></a>截断能和k网格点收敛性测试</h2><p>&emsp;&emsp;在第一性原理计算过程中，截断能和k网格点的选取非常重要，选的太小容易造成体系没有达到最低能量状态，选的太大会耗费大量计算资源，尤其对于计算资源比较紧张的课题组，大量浪费计算资源会引起同学和导师的不满。在实际计算中对于截断能和k点选取的方法，一是参考已发表的论文值，这样有一定的说服力；二是需要自己去测试，一般保证体系总能变化范围在0.01~0.02 eV之间，就可认为截断能和k点达到了我们的计算要求。</p><h3 id="二维InSe的截断能测试"><a href="#二维InSe的截断能测试" class="headerlink" title="二维InSe的截断能测试"></a>二维InSe的截断能测试</h3><p>&emsp;&emsp;首先对二维InSe的截断能做测试，测试范围是400-900 eV，能量间隔为50 eV。</p><h4 id="输入文件-1"><a href="#输入文件-1" class="headerlink" title="输入文件"></a>输入文件</h4><p>&emsp;&emsp;在这一系列计算中，只需对INCAR文件做修改，其他文件无需修改；且计算完成后自动将体系总能随截断能的变化写入toten_vs_encut.dat文件，只需画图即可。实现方法是将INCAR以及一系列操作命令写入提交任务的脚本文件中。计算文件夹中包括：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">KPOINTS POSCAR OPTCELL POTCAR vasp5.4.4.job</span><br></pre></td></tr></table></figure><p>—vasp5.4.4.job—</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#PBS -N 2D_InSe</span></span><br><span class="line"><span class="comment">#PBS -l nodes=1:ppn=16</span></span><br><span class="line"><span class="comment">#PBS -m abe</span></span><br><span class="line"><span class="comment">#PBS -j n</span></span><br><span class="line"><span class="comment">##PBS -o job.log</span></span><br><span class="line"><span class="comment">##PBS -e job.err</span></span><br><span class="line"><span class="comment">#PBS -l walltime=250:00:00</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$PBS_O_WORKDIR</span></span><br><span class="line"></span><br><span class="line">touch toten_vs_encut.dat</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ENCUT <span class="keyword">in</span> $(seq 400 50 800); <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># generate INCAR</span></span><br><span class="line">cat &gt; INCAR &lt;&lt; EOF</span><br><span class="line">SYSTEM = 2D_InSe</span><br><span class="line">ISTART = 0</span><br><span class="line">NWRITE = 2   </span><br><span class="line">PREC   = Accurate</span><br><span class="line">ENCUT  = <span class="variable">$ENCUT</span></span><br><span class="line">GGA    = PE </span><br><span class="line">NSW    = 200</span><br><span class="line">ISIF   = 3</span><br><span class="line">ISYM   = 2</span><br><span class="line">NBLOCK = 1   </span><br><span class="line">KBLOCK = 1</span><br><span class="line">IBRION = 2</span><br><span class="line">NELM   = 80   </span><br><span class="line">EDIFF  = 1E-05</span><br><span class="line">EDIFFG = -0.01 </span><br><span class="line">ALGO   = Normal</span><br><span class="line">LDIAG  = .TRUE.</span><br><span class="line">LREAL  = .FALSE.</span><br><span class="line">ISMEAR = 0</span><br><span class="line">SIGMA  = 0.02</span><br><span class="line">ICHARG = 2</span><br><span class="line">LPLANE = .TRUE.</span><br><span class="line">NPAR   = 4</span><br><span class="line">LSCALU = .FALSE.</span><br><span class="line">NSIM   = 4</span><br><span class="line">LWAVE  = .FALSE.</span><br><span class="line">LCHARG = .FALSE.</span><br><span class="line">ICORELEVEL =  1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">date <span class="string">"+01 Today's date is: %D. The time execution %T"</span> &gt;&gt; time.info</span><br><span class="line">mpirun -np 16 /your direction/vasp.5.4.4/bin/vasp_std  &gt; <span class="built_in">log</span></span><br><span class="line">date <span class="string">"+02 Today's date is: %D. The time finish %T"</span> &gt;&gt; time.info</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"<span class="variable">$ENCUT</span> \c"</span> &gt;&gt; toten_vs_encut.dat</span><br><span class="line">grep TOTEN OUTCAR | tail -n 1 | \</span><br><span class="line">      awk <span class="string">'/TOTEN/&#123;print $(NF-1)&#125;'</span> &gt;&gt; toten_vs_encut.dat</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="计算结果"><a href="#计算结果" class="headerlink" title="计算结果"></a>计算结果</h4><p>—toten_vs_encut.dat—</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">400 -14.21435689</span><br><span class="line">450 -14.21513620</span><br><span class="line">500 -14.21463059</span><br><span class="line">550 -14.21432926</span><br><span class="line">600 -14.21451881</span><br><span class="line">650 -14.21462419</span><br><span class="line">700 -14.21461680</span><br><span class="line">750 -14.21457254</span><br><span class="line">800 -14.21462319</span><br></pre></td></tr></table></figure><p><img src="/image/encut.png" alt="encut"><br>—encut.gnu—</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set term post eps color enh solid </span><br><span class="line">datafile=&apos;toten_vs_encut.dat&apos;</span><br><span class="line">set output &apos;encut.eps&apos;</span><br><span class="line">set title &apos;toten\_vs\_encut&apos; font &apos;Times_New_Roman,24&apos;</span><br><span class="line">set xlabel &apos;encut&apos; font &apos;Times_New_Roman,18&apos;</span><br><span class="line">set ylabel &apos;TOTEN&apos; font &apos;Times_New_Roman,18&apos;</span><br><span class="line">plot datafile  with linespoints lt 7 lw 4 pt 9 pointsize 2</span><br><span class="line">set output</span><br></pre></td></tr></table></figure><h3 id="二维InSe的k点测试"><a href="#二维InSe的k点测试" class="headerlink" title="二维InSe的k点测试"></a>二维InSe的k点测试</h3><h4 id="输入文件-2"><a href="#输入文件-2" class="headerlink" title="输入文件"></a>输入文件</h4><p>&emsp;&emsp;在这一系列计算中，只需对KPOINTS文件做修改，其他文件无需修改；且计算完成后自动将体系总能随k点的变化写入toten_vs_kpoints.dat文件，只需画图即可。实现方法是将kpoints以及一系列操作命令写入提交任务的脚本文件中。计算文件夹中包括：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INCAR POSCAR OPTCELL POTCAR vasp5.4.4.job</span><br></pre></td></tr></table></figure><p>—vasp5.4.4.job—</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#PBS -N 2D_InSe</span></span><br><span class="line"><span class="comment">#PBS -l nodes=1:ppn=16</span></span><br><span class="line"><span class="comment">#PBS -m abe</span></span><br><span class="line"><span class="comment">#PBS -j n</span></span><br><span class="line"><span class="comment">##PBS -o job.log</span></span><br><span class="line"><span class="comment">##PBS -e job.err</span></span><br><span class="line"><span class="comment">#PBS -l walltime=250:00:00</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$PBS_O_WORKDIR</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">touch toten_vs_kpoints.dat</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> KPOINTS <span class="keyword">in</span> $(seq 5 2 29); <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># generate KPOINTS</span></span><br><span class="line">cat &gt; KPOINTS &lt;&lt; EOF</span><br><span class="line">Monkhorst Pack of Gamma centered</span><br><span class="line">0</span><br><span class="line">Gamma</span><br><span class="line"> <span class="variable">$KPOINTS</span>    <span class="variable">$KPOINTS</span>    1</span><br><span class="line"> 0.0   0.0   0.0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">date <span class="string">"+01 Today's date is: %D. The time execution %T"</span> &gt;&gt; time.info</span><br><span class="line">mpirun -np 16 /your direction/vasp.5.4.4/bin/vasp_std  &gt; <span class="built_in">log</span></span><br><span class="line">date <span class="string">"+02 Today's date is: %D. The time finish %T"</span> &gt;&gt; time.info</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"<span class="variable">$KPOINTS</span> \c"</span> &gt;&gt; toten_vs_kpoints.dat</span><br><span class="line">grep TOTEN OUTCAR | tail -n 1 | \</span><br><span class="line">      awk <span class="string">'/TOTEN/&#123;print $(NF-1)&#125;'</span> &gt;&gt; toten_vs_kpoints.dat</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="计算结果-1"><a href="#计算结果-1" class="headerlink" title="计算结果"></a>计算结果</h4><p>—toten_vs_kpoints.dat—</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5 -14.19602773</span><br><span class="line">7 -14.21266556</span><br><span class="line">9 -14.21439462</span><br><span class="line">11 -14.21461257</span><br><span class="line">13 -14.21463638</span><br><span class="line">15 -14.21464405</span><br><span class="line">17 -14.21464831</span><br><span class="line">19 -14.21464821</span><br><span class="line">21 -14.21464741</span><br><span class="line">23 -14.21465053</span><br><span class="line">25 -14.21464752</span><br><span class="line">27 -14.21464720</span><br><span class="line">29 -14.21464820</span><br></pre></td></tr></table></figure><p><img src="/image/kpoints.png" alt="kpoints"><br>—kpoints.gnu—</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set term post eps color enh solid </span><br><span class="line">datafile=&apos;toten_vs_kpoints.dat&apos;</span><br><span class="line">set output &apos;kpoints.eps&apos;</span><br><span class="line">set title &apos;toten\_vs\_kpoints&apos; font &apos;Times_New_Roman,24&apos;</span><br><span class="line">set xlabel &apos;kpoints&apos; font &apos;Times_New_Roman,18&apos;</span><br><span class="line">set ylabel &apos;TOTEN&apos; font &apos;Times_New_Roman,18&apos;</span><br><span class="line">plot datafile  with linespoints lt 7 lw 4 pt 9 pointsize 2</span><br><span class="line">set output</span><br></pre></td></tr></table></figure><h3 id="整体分析"><a href="#整体分析" class="headerlink" title="整体分析"></a>整体分析</h3><p>&emsp;&emsp;整体分析发现，对于二维InSe的截断能和k点取值分别为500 eV和13$\times$13$\times$1已经足够精确;与<a href="https://pubs.rsc.org/en/content/articlelanding/2018/NR/C8NR03172J#!divAbstract" target="_blank" rel="noopener">Meng Wu</a>等人报道的计算细节基本一致，说明测试是合理的。</p><h2 id="静态自洽"><a href="#静态自洽" class="headerlink" title="静态自洽"></a>静态自洽</h2><h3 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h3><p>&emsp;&emsp;VASP做静态自洽的目的主要是为了得到好的电子密度和波函数文件，为了使后续的性质计算可以读取电子密度和波函数，进而增加收敛速度。</p><h3 id="输入文件-3"><a href="#输入文件-3" class="headerlink" title="输入文件"></a>输入文件</h3><p>—INCAR—</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SYSTEM = 2D_InSe</span><br><span class="line">ISTART = 0</span><br><span class="line">NWRITE = 2   </span><br><span class="line">PREC   = Accurate</span><br><span class="line">ENCUT  = 500</span><br><span class="line">GGA    = PE </span><br><span class="line">NSW    = 0</span><br><span class="line">ISIF   = 2</span><br><span class="line">ISYM   = 2</span><br><span class="line">NBLOCK = 1   </span><br><span class="line">KBLOCK = 1</span><br><span class="line">IBRION = -1 </span><br><span class="line">NELM   = 80   </span><br><span class="line">EDIFF  = 1E-05</span><br><span class="line">EDIFFG = -0.01 </span><br><span class="line">ALGO   = Normal</span><br><span class="line">LDIAG  = .TRUE.</span><br><span class="line">LREAL  = .FALSE.</span><br><span class="line">ISMEAR = 0</span><br><span class="line">SIGMA  = 0.02</span><br><span class="line">ICHARG = 2</span><br><span class="line">LPLANE = .TRUE.</span><br><span class="line">NPAR   = 4</span><br><span class="line">LSCALU = .FALSE.</span><br><span class="line">NSIM   = 4</span><br><span class="line">LWAVE  = .TRUE.</span><br><span class="line">LCHARG = .TRUE.</span><br><span class="line">ICORELEVEL =  1</span><br></pre></td></tr></table></figure><p>—POSCAR—<br>将优化完后的CONTCAR直接拷贝为POSCAR即可<br>—POTCAR—<br>与优化时的POTCAR文件相同<br>—KPOINTS—<br>自洽计算要求有密的k网格点，在计算条件允许的情况下要求自洽的k网格点大致为优化时的2倍左右。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Monkhorst Pack of Gamma centered</span><br><span class="line">0</span><br><span class="line">Gamma</span><br><span class="line"> 25    25    1</span><br><span class="line"> 0.0   0.0   0.0</span><br></pre></td></tr></table></figure><h2 id="态密度"><a href="#态密度" class="headerlink" title="态密度"></a>态密度</h2><h3 id="前言-2"><a href="#前言-2" class="headerlink" title="前言"></a>前言</h3><p>&emsp;&emsp;态密度是固体物理中一个非常重要的概念，在实验上可利用X射线发射光谱方法测定，在理论上可使用第一性原理计算软件计算得出；可以用于分析材料材料能隙特性、体系成键的特性、体系的自旋极化、相邻原子之间的作用强弱、电子比热和顺磁磁化率等性质。</p><h3 id="输入文件-4"><a href="#输入文件-4" class="headerlink" title="输入文件"></a>输入文件</h3><p>—INCAR—</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SYSTEM = 2D_InSe</span><br><span class="line">ISTART = 1</span><br><span class="line">NWRITE = 2</span><br><span class="line">PREC   = Accurate</span><br><span class="line">ENCUT  = 500</span><br><span class="line">GGA    = PE</span><br><span class="line">NSW    = 0</span><br><span class="line">ISIF   = 2</span><br><span class="line">ISYM   = 2</span><br><span class="line">NBLOCK = 1</span><br><span class="line">KBLOCK = 1</span><br><span class="line">IBRION = -1</span><br><span class="line">NELM   = 80</span><br><span class="line">EDIFF  = 1E-05</span><br><span class="line">EDIFFG = -0.01</span><br><span class="line">ALGO   = Normal</span><br><span class="line">LDIAG  = .TRUE.</span><br><span class="line">LREAL  = .FALSE.</span><br><span class="line">ISMEAR = -5</span><br><span class="line">SIGMA  = 0.02</span><br><span class="line">ICHARG = 11</span><br><span class="line">LPLANE = .TRUE.</span><br><span class="line">NPAR   = 4</span><br><span class="line">LSCALU = .FALSE.</span><br><span class="line">NSIM   = 4</span><br><span class="line">LWAVE  = .FALSE.</span><br><span class="line">LCHARG = .FALSE.</span><br><span class="line">ICORELEVEL =  1</span><br><span class="line">LORBIT = 11  # output PDOS</span><br></pre></td></tr></table></figure><p>—KPOINTS—<br>DOS计算要求非常密集的k网格点，至少要求与自洽时k网格点相同，或可适当增加。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Monkhorst Pack of Gamma centered</span><br><span class="line">0</span><br><span class="line">Gamma</span><br><span class="line"> 29    29    1</span><br><span class="line"> 0.0   0.0   0.0</span><br></pre></td></tr></table></figure><p>POSCAR、POTCAR文件与自洽时相同；并保证在计算目录下有自洽时产生的CHGCAR和WAVECAR文件，以供读取。</p><h3 id="结果分析-1"><a href="#结果分析-1" class="headerlink" title="结果分析"></a>结果分析</h3><h4 id="总的态密度"><a href="#总的态密度" class="headerlink" title="总的态密度"></a>总的态密度</h4><p><img src="/image/TDOS.png" alt="TDOS"></p><h4 id="局域态密度"><a href="#局域态密度" class="headerlink" title="局域态密度"></a>局域态密度</h4><p><img src="/image/LDOS.png" alt="LDOS"></p><h4 id="Se的分波态密度"><a href="#Se的分波态密度" class="headerlink" title="Se的分波态密度"></a>Se的分波态密度</h4><p><img src="/image/Se_PDOS.png" alt="Se_PDOS"></p><h4 id="In的分波态密度"><a href="#In的分波态密度" class="headerlink" title="In的分波态密度"></a>In的分波态密度</h4><p><img src="/image/In_PDOS.png" alt="In_PDOS"></p><h2 id="能带"><a href="#能带" class="headerlink" title="能带"></a>能带</h2><h3 id="前言-3"><a href="#前言-3" class="headerlink" title="前言"></a>前言</h3><p>&emsp;&emsp;能带理论是研究材料性质的重要方法，现利用VASP软件计算二维InSe的能带。</p><h3 id="输入文件-5"><a href="#输入文件-5" class="headerlink" title="输入文件"></a>输入文件</h3><p>—INCAR—</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SYSTEM = 2D_InSe</span><br><span class="line">ISTART = 1</span><br><span class="line">NWRITE = 2</span><br><span class="line">PREC   = Accurate</span><br><span class="line">ENCUT  = 500</span><br><span class="line">GGA    = PE</span><br><span class="line">NSW    = 0</span><br><span class="line">ISIF   = 2</span><br><span class="line">ISYM   = 2</span><br><span class="line">NBLOCK = 1</span><br><span class="line">KBLOCK = 1</span><br><span class="line">IBRION = -1</span><br><span class="line">NELM   = 80</span><br><span class="line">EDIFF  = 1E-05</span><br><span class="line">EDIFFG = -0.01</span><br><span class="line">ALGO   = Normal</span><br><span class="line">LDIAG  = .TRUE.</span><br><span class="line">LREAL  = .FALSE.</span><br><span class="line">ISMEAR = 0</span><br><span class="line">SIGMA  = 0.02</span><br><span class="line">ICHARG = 11</span><br><span class="line">LPLANE = .TRUE.</span><br><span class="line">NPAR   = 4</span><br><span class="line">LSCALU = .FALSE.</span><br><span class="line">NSIM   = 4</span><br><span class="line">LWAVE  = .FALSE.</span><br><span class="line">LCHARG = .FALSE.</span><br><span class="line">ICORELEVEL =  1</span><br><span class="line">LORBIT = 11</span><br></pre></td></tr></table></figure><p>—KPOINTS—</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">k-points along high symmetry lines</span><br><span class="line">  100</span><br><span class="line">Line-mode</span><br><span class="line">Rec</span><br><span class="line">   0.3333333  0.3333333 0       !K</span><br><span class="line">   0          0         0       !GAMMA</span><br><span class="line"></span><br><span class="line">   0          0         0       !GAMMA</span><br><span class="line">   0.5        0         0       !M</span><br><span class="line"></span><br><span class="line">   0.5        0         0       !M</span><br><span class="line">   0.3333333  0.3333333 0       !K</span><br></pre></td></tr></table></figure><p>POSCAR、POTCAR文件与自洽时相同；并保证在计算目录下有自洽时产生的CHGCAR和WAVECAR文件，以供读取。</p><h3 id="结果分析-2"><a href="#结果分析-2" class="headerlink" title="结果分析"></a>结果分析</h3><p>二维InSe能带<br><img src="/image/band.png" alt="band.png"><br>漂亮的二维InSe能带<br><img src="/image/new_band.png" alt="band.png"><br>二维InSe按原子投影的能带图<br><img src="/image/PBAND.png" alt="PBAND.png"><br>二维InSe按原子的$s$、$p$、$d$轨道投影的能带图<br>In原子<br><img src="/image/PBANDInspd.png" alt="PBANDInspd.png"><br>Se原子<br><img src="/image/PBANDSespd.png" alt="PBANDSespd.png"><br>InSe<br><img src="/image/PBNDSeInspd.png" alt="PBNDSeInspd.png"><br>二维InSe按原子的$s$、$p_x$、$p_y$、$p_z$轨道投影的能带图<br>In原子<br><img src="/image/PBANDInspxpypz.png" alt="PBANDInspxpypz.png"><br><img src="/image/PBANDIn.png" alt="PBANDInspxpypz.png"><br>Se原子<br><img src="/image/PBANDSespxpypz.png" alt="PBANDSespxpypz.png"><br><img src="/image/PBANDSe.png" alt="PBANDSespxpypz.png"></p><p><font color="blue"> Note：通过做投影能带图，与分波态密度做对比发现，对于带边位置的贡献是一致的 </font></p>]]></content>
      
      
      <categories>
          
          <category> vasp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> band structure </tag>
            
            <tag> density of states </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vasp_kpoints文件设置详解</title>
      <link href="2019/09/27/vasp-kpoints/"/>
      <url>2019/09/27/vasp-kpoints/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;kpoints文件是vasp计算过程中必不可少的输入文件，虽然从vasp.5.2.2版本后可以在INCAR中设置简单的KPOINTS信息，但是不推荐在INCAR中直接设置，原因是INCAR中无法设置复杂的KPOINTS信息。合理的kpoints设置不仅可以增加计算效率，而且可以得到合理的计算结果，下面对kpoints的一般格式和设置方法做一个简单的介绍，并且给出自身计算过程中的经验总结。</p><h2 id="kpoints文件简述"><a href="#kpoints文件简述" class="headerlink" title="kpoints文件简述"></a>kpoints文件简述</h2><p>&emsp;&emsp;kpoints文件可以分为两个大类，一是vasp程序自动分割产生k点，二是通过手动输入指定k点信息。在实际计算过程中，除能带计算时手动指定k点信息外，其他计算一律推荐使用自动产生k点方法。</p><h2 id="自动产生k点的kpoints文件设置"><a href="#自动产生k点的kpoints文件设置" class="headerlink" title="自动产生k点的kpoints文件设置"></a>自动产生k点的kpoints文件设置</h2><p>&emsp;&emsp;自动产生k点主要用于结构优化、自洽计算、DOS计算、光学性质计算等，基本格式如下：<br>情形一：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Automatic k-mesh generation</span><br><span class="line">0</span><br><span class="line">Gamma</span><br><span class="line">4    4    4 </span><br><span class="line">0.0  0.0  0.0</span><br></pre></td></tr></table></figure><p><font color="blue">说明：<br>line 1：注释行，没有实际意义，但是不能没有<br>line 2：表示自动生成k点网格<br>line 3：第三行可用的选项有Gamma（vasp程序只识别首字母，即G或g都可，下同），表示按M-P方法以Γ点为中心自动产生k点；选项Monkhorst-pack表示按原始Monkhorst-Pack方法产生k点网格。<br>line 4：确定沿倒格子各方向（x，y，z）上K网格点的数目<br>line 5：对所按网格分割产生的k点进行平移的量，此处不平移。 </font><br>情形二：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Automatic mesh</span><br><span class="line">0</span><br><span class="line">Auto</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p><font color="blue">说明：<br>line 1：注释行，没有实际意义，但是不能没有<br>line 2：表示自动生成k点网格<br>line 3：表示完全自动产生k点<br>line 4：表示a linear k-point density of 10 $\overset{\circ}{A}$，其含义为每1/$\overset{\circ}{A}$上的k点数 </font></p><h2 id="手动指定k点的kpoints文件设置"><a href="#手动指定k点的kpoints文件设置" class="headerlink" title="手动指定k点的kpoints文件设置"></a>手动指定k点的kpoints文件设置</h2><p>&emsp;&emsp;手动指定k点的情形主要用于能带计算，一般格式为：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">k-points along high symmetry lines <span class="keyword">for</span> hexagonal structure</span><br><span class="line"> 40</span><br><span class="line">Line-mode</span><br><span class="line">Rec</span><br><span class="line">0.000    0.000    0.500  ! A</span><br><span class="line">0.000    0.000    0.000  ! Gamma</span><br><span class="line"></span><br><span class="line">0.000    0.000    0.000  ! Gamma </span><br><span class="line">0.500    0.000    0.000  ! M</span><br><span class="line"></span><br><span class="line">0.500    0.000    0.000  ! M</span><br><span class="line">0.333333 0.333333 0.000  ! K </span><br><span class="line"></span><br><span class="line">0.333333 0.333333 0.000  ! K</span><br><span class="line">0.000    0.000    0.000  ! Gamma</span><br></pre></td></tr></table></figure><p><font color="blue">说明：<br>line 1：注释行，没有实际意义，但是不能没有<br>line 2：每对高对称点之间产生40个k点<br>line 3：以字母L开头表示按line模式产生k点<br>line 4：以字母R开头表示k点按倒格子坐标系<br>line 5-~~：每对高对称点的坐标，此处的路径为A-G-M-K-G </font></p><h2 id="经验"><a href="#经验" class="headerlink" title="经验"></a>经验</h2><ul><li>结构优化时，k点数目与晶格常数的乘积大约达到40-45之间就够用了。</li><li>自洽计算时k点数目数目大致为结构优化时的2倍。</li><li>DOS计算、光学性质计算时可在自洽的k点基础上适当增大，至少达到自洽计算时k点数目。</li><li>对于六方晶系，强烈推荐使用Gamma方法，对于大部分体系都推荐使用此方法。</li><li>能带计算时高对称点查找可依据如下方法：<br>(1) 通过seek-path工具寻找高对称点，具体用法<a href="https://www.materialscloud.org/work/tools/seekpath" target="_blank" rel="noopener">$这里$</a>。<br>(2) 依据文献<a href="https://doi.org/10.1016/j.commatsci.2010.05.010" target="_blank" rel="noopener">High-throughput electronic band structure calculations: Challenges and tools</a>选取。</li></ul>]]></content>
      
      
      <categories>
          
          <category> vasp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kpoints </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phono3py软件的编译方法</title>
      <link href="2019/09/25/phono3py-install/"/>
      <url>2019/09/25/phono3py-install/</url>
      
        <content type="html"><![CDATA[<p>编译环境：Ubuntu18.04.3 LTS<br>phono3py版本：phono3py–1.17.0.post1<br>phonopy版本：phonopy–2.2.0<br>python版本：python–3.6.8</p><h2 id="phono3py概述"><a href="#phono3py概述" class="headerlink" title="phono3py概述"></a><a href="https://atztogo.github.io/phono3py/index.html" target="_blank" rel="noopener">phono3py</a>概述</h2><p>&emsp;&emsp;phono3py是基于超原胞方法计算声子-声子相互作用以及与其相关性质的软件包，可以计算的性质主要包括：</p><ul><li>Lattice thermal conductivity (RTA and <a href="https://atztogo.github.io/phono3py/direct-solution.html#direct-solution" target="_blank" rel="noopener">direct solution of LBTE</a>)</li><li>Phonon lifetime/linewidth</li><li>Imaginary part of self energy</li><li>Joint density of states (JDOS) and weighted-JDOS<br>&emsp;&emsp;phono3py可以与常见的第一性原理计算软件结合使用，例如：<br><a href="https://atztogo.github.io/phono3py/vasp.html#vasp-interface" target="_blank" rel="noopener">VASP</a>, <a href="https://atztogo.github.io/phono3py/pwscf.html#pwscf-interface" target="_blank" rel="noopener">QE</a>, <a href="https://atztogo.github.io/phono3py/crystal.html#crystal-interface" target="_blank" rel="noopener">CRYSTAL</a>, <a href="https://atztogo.github.io/phono3py/turbomole.html#turbomole-interface" target="_blank" rel="noopener">TURBOMOLE</a>等，具体内容可参考<a href="https://atztogo.github.io/phono3py/interfaces.html#calculator-interfaces" target="_blank" rel="noopener">官网说明</a>。<h2 id="phono3py编译方法介绍"><a href="#phono3py编译方法介绍" class="headerlink" title="phono3py编译方法介绍"></a>phono3py编译方法介绍</h2>&emsp;&emsp;对于phono3py的编译是花了许多精力在里边的，尤其是对于新手而言，可能碰到许多奇怪的错误，在<a href="https://www.google.com.hk/" target="_blank" rel="noopener">Google</a>上也没有搜到合适的解决办法，为了新手方便编译，特将编译过程写出来，以供参考。<br>&emsp;&emsp;phono3py的编译主要有3种方法：</li><li>使用conda利用如下命令自动安装：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">conda install -c atztogo phono3py</span><br></pre></td></tr></table></figure></li></ul><p>但是安装完成后phono3py无法使用，会报一些奇怪的错误。</p><ul><li>使用pip利用如下命令自动安装：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install phono3py --user</span><br></pre></td></tr></table></figure></li></ul><p>同样，安装完成后phono3py无法使用，会报一些奇怪的错误。</p><ul><li><p>基于源码编译安装</p><h2 id="phono3py源码编译方法"><a href="#phono3py源码编译方法" class="headerlink" title="phono3py源码编译方法"></a>phono3py源码编译方法</h2><p>说明：由于phono3py的运行依赖于phonopy，因此经过测试后发现，phono3py–1.17.0.post1版本可以与phonopy–2.2.0或phonopy–2.1.4版本兼容，phonopy–2.1.4以前的版本没有测试。但是与phonopy–2.3.0以及phonopy–2.3.0.post5版本不兼容，会报错。</p></li><li><p>安装编译环境：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python3-numpy</span><br><span class="line">sudo apt-get install python3-scipy</span><br><span class="line">sudo apt-get install python3-h5py</span><br><span class="line">sudo apt-get install python3-scipy</span><br><span class="line">sudo apt-get install python3-matplotlib</span><br><span class="line">sudo apt-get install python3-yaml</span><br><span class="line">sudo apt-get install libopenblas-dev</span><br><span class="line">sudo apt-get install libgomp1</span><br><span class="line">sudo apt-get install liblapack-dev</span><br><span class="line">sudo apt-get install liblapacke-dev</span><br><span class="line">sudo apt-get install python3-distutils</span><br><span class="line">sudo apt-get install python3-pip</span><br></pre></td></tr></table></figure></li><li><p>phonopy-2.2.0的下载与编译：<br><a href="https://pypi.org/project/phonopy/2.2.0/#files" target="_blank" rel="noopener">下载</a><br>编译</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar zxvf phono3py-1.17.0.post1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> phono3py-1.17.0.post1.tar.gz</span><br><span class="line">python3.6 setup.py install --user</span><br></pre></td></tr></table></figure></li><li><p>phono3py的下载与编译：<br><a href="https://pypi.org/project/phono3py/#files" target="_blank" rel="noopener">下载</a><br>编译</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar zxvf phono3py-1.17.0.post1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> phono3py-1.17.0.post1.tar.gz</span><br><span class="line">python3.6 setup.py install --user</span><br></pre></td></tr></table></figure></li><li><p>设置环境变量：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi ~/.bashrc</span><br><span class="line"><span class="built_in">export</span> PYTHONPATH=~/.<span class="built_in">local</span>/lib/python3.6/site-packages:<span class="variable">$PYTHONPATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=~/.<span class="built_in">local</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>测试结果：<br><img src="/image/phonopy.png" alt="phonopy测试结果"></p></li></ul><p><img src="/image/phono3py.png" alt="phono3py测试结果"></p>]]></content>
      
      
      <categories>
          
          <category> phonopy </category>
          
          <category> phono3py </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phonopy </tag>
            
            <tag> phono3py </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建根号界面晶体模型</title>
      <link href="2019/09/25/materials-studio-build/"/>
      <url>2019/09/25/materials-studio-build/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Materials Studio </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 根号表面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QE和EPW软件的编译</title>
      <link href="2019/09/25/quantum-espresso-compile/"/>
      <url>2019/09/25/quantum-espresso-compile/</url>
      
        <content type="html"><![CDATA[<p>编译环境：Ubuntu18.04.2<br>Intel编译器：parallel_studio_xe_2019_update4</p><h2 id="Intel编译器的安装与配置"><a href="#Intel编译器的安装与配置" class="headerlink" title="Intel编译器的安装与配置"></a>Intel编译器的安装与配置</h2><h3 id="Intel编译器的申请"><a href="#Intel编译器的申请" class="headerlink" title="Intel编译器的申请"></a>Intel编译器的申请</h3><p>&emsp;&emsp;使用学校邮箱在<a href="https://software.intel.com/en-us/qualify-for-free-software/student#" target="_blank" rel="noopener">Intel官网</a>可免费申请Intel编译器，使用时间为一年，到期后可重复申请，然后将新申请的license复制到安装路径文件夹license中即可。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/intel/license</span><br></pre></td></tr></table></figure><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/intel/bin/compilervars.sh intel64</span><br><span class="line"><span class="built_in">source</span> /opt/intel/mkl/bin/mklvars.sh intel64</span><br></pre></td></tr></table></figure><p>注意：普通用户配置环境变量需要依据自己的安装路径修改</p><h2 id="二、QE的下载编译"><a href="#二、QE的下载编译" class="headerlink" title="二、QE的下载编译"></a>二、QE的下载编译</h2><h3 id="QE下载"><a href="#QE下载" class="headerlink" title="QE下载"></a>QE下载</h3><p>&emsp;&emsp;在<a href="https://github.com/QEF/q-e/releases">QE官网</a>下载最新版q-e-qe-6.4.1.tar以及补丁文件backports-6.4.1.diff。</p><h3 id="赝势库的下载"><a href="#赝势库的下载" class="headerlink" title="赝势库的下载"></a>赝势库的下载</h3><p>&emsp;&emsp;一般情况下，为了计算结果的可靠性，在编译完软件时需要测试自带的算例，此时需要联网下载赝势库。考虑到大部分集群无法联网，需要借助于安装了Linux系统的主机下载赝势库。进入test-suite子目录，修改check_pseudo.sh文件，取消部分echo命令前的注释#号，以便及时查看下载进度，修改后的check_pseudo.sh文件如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Copyright (C) 2001-2016 Quantum ESPRESSO group</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This program is free software; you can redistribute it and/or</span></span><br><span class="line"><span class="comment"># modify it under the terms of the GNU General Public License</span></span><br><span class="line"><span class="comment"># as published by the Free Software Foundation; either version 2</span></span><br><span class="line"><span class="comment"># of the License. See the file `License' in the root directory</span></span><br><span class="line"><span class="comment"># of the present distribution.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> <span class="variable">$&#123;ESPRESSO_ROOT&#125;</span>/<span class="built_in">test</span>-suite/ENVIRONMENT</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> <span class="string">"`which curl`"</span> = <span class="string">""</span> ; <span class="keyword">then</span></span><br><span class="line">   <span class="keyword">if</span> <span class="built_in">test</span> <span class="string">"`which wget`"</span> = <span class="string">""</span> ; <span class="keyword">then</span></span><br><span class="line">      <span class="built_in">echo</span> <span class="string">"### wget or curl not found: will not be able to download missing PP ###"</span></span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">      DOWNLOADER=<span class="string">"wget -O"</span></span><br><span class="line">       <span class="built_in">echo</span> <span class="string">"wget found"</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   DOWNLOADER=<span class="string">"curl -o"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"curl found"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">inputs=`find <span class="variable">$1</span>* -<span class="built_in">type</span> f -name <span class="string">"*.in"</span> -not -name <span class="string">"test.*"</span> -not -name <span class="string">"benchmark.*"</span>`</span><br><span class="line">pp_files=`<span class="keyword">for</span> x <span class="keyword">in</span> <span class="variable">$&#123;inputs&#125;</span>; <span class="keyword">do</span> grep UPF <span class="variable">$&#123;x&#125;</span> | awk <span class="string">'&#123;print $3&#125;'</span>; <span class="keyword">done</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> pp_file <span class="keyword">in</span> <span class="variable">$&#123;pp_files&#125;</span> ; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> ! <span class="built_in">test</span> -f <span class="variable">$&#123;ESPRESSO_PSEUDO&#125;</span>/<span class="variable">$&#123;pp_file&#125;</span> ; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">"Downloading <span class="variable">$&#123;pp_file&#125;</span> to <span class="variable">$&#123;ESPRESSO_PSEUDO&#125;</span> ... "</span></span><br><span class="line"><span class="variable">$&#123;DOWNLOADER&#125;</span> <span class="variable">$&#123;ESPRESSO_PSEUDO&#125;</span>/<span class="variable">$&#123;pp_file&#125;</span> <span class="variable">$&#123;NETWORK_PSEUDO&#125;</span>/<span class="variable">$&#123;pp_file&#125;</span> 2&gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> $? != 0 ; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Download of"</span> <span class="variable">$&#123;pp_file&#125;</span> <span class="string">"FAILED, do it manually -- Testing aborted!"</span></span><br><span class="line"><span class="built_in">exit</span> -1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"done."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"No need to download <span class="variable">$&#123;pp_file&#125;</span>."</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>重新打包后上传服务器开始编译。</p><h3 id="编译具体步骤"><a href="#编译具体步骤" class="headerlink" title="编译具体步骤"></a>编译具体步骤</h3><ol><li><p>将补丁文件backports-6.4.1.diff拷贝到QE主目录，进入QE主目录并执行如下命令为QE打补丁：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">patch -p1 --merge &lt; backports-6.4.1.diff</span><br></pre></td></tr></table></figure></li><li><p>利用QE的configure实现对编译器和数学库的自动配置，执行命令：</p></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure MPIF90=mpiifort CC=mpiicc F90=ifort F77=mpiifort -<span class="built_in">enable</span>-parallel</span><br></pre></td></tr></table></figure><ol start="3"><li>修改make.inc文件<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">106 FFLAGS         = -O3 -assume byterecl -g -traceback</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">132 BLAS_LIBS      =   -L<span class="variable">$&#123;MKLROOT&#125;</span>/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lm -ldl</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">141 LAPACK_LIBS    = -L<span class="variable">$&#123;MKLROOT&#125;</span>/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lm -ldl</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">144 SCALAPACK_LIBS = -L<span class="variable">$&#123;MKLROOT&#125;</span>/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lm -ldl</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">149 FFT_LIBS       = -L<span class="variable">$&#123;MKLROOT&#125;</span>/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_sequential -lmkl_core -lmkl_blacs_intelmpi_lp64 -lpthread -lm -ldl</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">159 MPI_LIBS       = -L/opt/intel/impi/2019.4.243/intel64/lib -lmpi</span><br></pre></td></tr></table></figure><ol start="4"><li>编译</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make -j n all <span class="comment">#n为并行编译时调用的核数</span></span><br></pre></td></tr></table></figure><p>注意：并行编译时有时会遇到无法排除的错误，如果出现未知错误，建议使用单个核编译<br>5. 测试</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">To run Quantum ESPRESSO <span class="built_in">test</span>-suite, <span class="built_in">type</span> at the shell prompt:</span><br><span class="line"></span><br><span class="line">  make target</span><br><span class="line"></span><br><span class="line"><span class="built_in">where</span> &lt;target&gt; identifies an action</span><br><span class="line"> run-tests                   : run-tests-serial (default)</span><br><span class="line"> run-tests-serial            : run all tests <span class="keyword">in</span> SERIAL</span><br><span class="line"> run-tests-XX-serial         : run tests <span class="keyword">for</span> XX=&#123;pw,cp&#125; only, as above</span><br><span class="line"> run-tests-parallel          : run all tests <span class="keyword">in</span> PARALLEL (4 MPI)</span><br><span class="line"> run-tests-XX-parallel       : run tests <span class="keyword">for</span> XX=&#123;pw,cp&#125; only, as above</span><br><span class="line"> run-custom-test testdir=DIR : run <span class="built_in">test</span> <span class="keyword">in</span> DIR only (serial)</span><br><span class="line"> run-custom-test-parallel testdir=DIR : run <span class="built_in">test</span> <span class="keyword">in</span> DIR only (parallel 4 MPI)</span><br><span class="line"> compare                     : compare last output with reference</span><br><span class="line"> clean                       : clean stdout/sderr of all tests</span><br><span class="line"></span><br><span class="line">For additional advanced commands and settings please manually inspect</span><br><span class="line">ENVIRONMENT and Makefile files</span><br></pre></td></tr></table></figure><p>如果测试结果为全部通过，或个别结果的数值计算出现微小误差的情况则不影响对QE的使用。</p><h2 id="Electron-phonon-Wannier-（EPW-的编译"><a href="#Electron-phonon-Wannier-（EPW-的编译" class="headerlink" title="Electron-phonon Wannier （EPW)的编译"></a>Electron-phonon Wannier （EPW)的编译</h2><h3 id="EPW简介"><a href="#EPW简介" class="headerlink" title="EPW简介"></a>EPW简介</h3><p>&emsp;&emsp;EPW是Electron-phonon Wannier的缩写，主要用于计算与电声相互作用相关的物理性质，主要包括：</p><ol><li>The total electron-phonon coupling strenght $\lambda$</li><li>The anisotropic Eliashberg spectral function $\alpha^{2}F$</li><li>The transport spectral function $\alpha^{2}F_{\rm tr}$</li><li>The anisotropic superconducting gap  ${\Delta}_{n\rm k}$ within the Eliashberg theory</li><li>The electron and phonon self-energies arising from electron-phonon interaction</li><li>The phonon linewidths and lifetimes arising from electron-phonon interaction</li><li>The electron linewidths and lifetimes arising from electron-phonon interaction</li><li>The temperature-dependence of the carrier lifetimes</li><li>The spectral functions needed for the calculation of ARPES spectra</li><li>The electron and hole mobility $\mu$</li></ol><p>从EPW v4.1（26 April 2016）开始，EPW并入了Quantum-ESPRESSO软件，编译和计算都是基于QE基础上进行的，目前的最新版本是EPW v5.1。</p><h3 id="EPW学习资料"><a href="#EPW学习资料" class="headerlink" title="EPW学习资料"></a>EPW学习资料</h3><ol><li><a href="http://epw.org.uk/Documentation/Tutorial" target="_blank" rel="noopener">Tutorial</a></li><li><a href="http://epw.org.uk/Documentation/School2018" target="_blank" rel="noopener">School on Electron-Phonon Physics from First Principles</a></li><li><a href="https://www.youtube.com/playlist?list=PLGntAYRT8AVmQMyurFoncyOdHljqeGU_R" target="_blank" rel="noopener">Projects: Quantum Espresso Tutorial 2019</a></li><li><a href="https://www.youtube.com/channel/UCr3qjMlMoPVtgcdlJUMUJJQ" target="_blank" rel="noopener">Samuel Poncé</a></li></ol><h3 id="EPW编译"><a href="#EPW编译" class="headerlink" title="EPW编译"></a>EPW编译</h3><ol><li><p>下载<a href="http://www.wannier.org/" target="_blank" rel="noopener">Wannier90 (v3.0.0)</a>，并重命名为v3.0.0.tar.gz，然后拷贝到QE下的archive文件夹下。</p></li><li><p>编译</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make epw</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="built_in">test</span>-suite</span><br><span class="line">make run-tests-epw-parallel</span><br></pre></td></tr></table></figure></li></ol><p>如果测试结果为全部通过，则可以使用EPW软件计算了。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol><li><a href="http://blog.sciencenet.cn/blog-2909108-1152511.html" target="_blank" rel="noopener">QE使用经验总结：（一）编译</a></li><li><a href="https://www.youtube.com/playlist?list=PLGntAYRT8AVk9EV5Fm8qRboc3RCReTqGm" target="_blank" rel="noopener">Hands-on: Quantum Espresso Tutorial 2019</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Quantum ESPRESSO </category>
          
          <category> EPW </category>
          
      </categories>
      
      
        <tags>
            
            <tag> quantum ESPRESSO </tag>
            
            <tag> EPW </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
